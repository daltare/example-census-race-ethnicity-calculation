[
  {
    "objectID": "example_census_race_ethnicity_calculation.html",
    "href": "example_census_race_ethnicity_calculation.html",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "",
    "text": "Note\n\n\n\nFor comments, suggestions, corrections, or questions on anything below, contact david.altare@waterboards.ca.gov, or open an issue on github.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThis is a draft / work in progress – some parts are still under development, and existing parts may change.\n\n\nThis document provides an example of how to use tools available from the R programming language (R Core Team 2023) to estimate characteristics of any given target spatial area(s) (e.g., neighborhoods, project boundaries, water supplier service areas, etc.) based on data from a source dataset containing the characteristic data of interest (e.g., census data, CalEnviroScreen scores, etc.), especially when the boundaries of the source and target areas overlap but don’t necessarily align with each other. It also provides some brief background on the various types of data available from the U.S Census Bureau, and links to a few places to find more in-depth information.\nThis particular example estimates demographic characteristics of community water systems in the Sacramento County area (the target dataset). It uses the tidycensus R package (Walker and Herman 2023) to access selected demographic data from the U.S. Census Bureau (the source dataset) for census units whose spatial extent covers those water systems’ service areas, then uses the sf package (Pebesma and Bivand 2023) package (for working with spatial data) and the tidyverse collection of packages (Wickham et al. 2019) (for general data cleaning and transformation) to estimate some demographic characteristics of each water system based on that census data. It also uses the areal R package (Prener et al. 2019) to check some of the results, and as general guidance on the principles and techniques for implementing areal interpolation.\nThis example is just intended to be a simplified demonstration of a possible workflow. For a real analysis, additional steps and considerations – that may not be covered here – may be needed to deal with data inconsistencies (e.g., missing or incomplete data), required level of precision and acceptable assumptions (e.g. more fine-grained datasets or more sophisticated techniques could be used to estimate/model population distributions), or other project-specific issues that might arise."
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-background",
    "href": "example_census_race_ethnicity_calculation.html#sec-background",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "",
    "text": "Note\n\n\n\nFor comments, suggestions, corrections, or questions on anything below, contact david.altare@waterboards.ca.gov, or open an issue on github.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThis is a draft / work in progress – some parts are still under development, and existing parts may change.\n\n\nThis document provides an example of how to use tools available from the R programming language (R Core Team 2023) to estimate characteristics of any given target spatial area(s) (e.g., neighborhoods, project boundaries, water supplier service areas, etc.) based on data from a source dataset containing the characteristic data of interest (e.g., census data, CalEnviroScreen scores, etc.), especially when the boundaries of the source and target areas overlap but don’t necessarily align with each other. It also provides some brief background on the various types of data available from the U.S Census Bureau, and links to a few places to find more in-depth information.\nThis particular example estimates demographic characteristics of community water systems in the Sacramento County area (the target dataset). It uses the tidycensus R package (Walker and Herman 2023) to access selected demographic data from the U.S. Census Bureau (the source dataset) for census units whose spatial extent covers those water systems’ service areas, then uses the sf package (Pebesma and Bivand 2023) package (for working with spatial data) and the tidyverse collection of packages (Wickham et al. 2019) (for general data cleaning and transformation) to estimate some demographic characteristics of each water system based on that census data. It also uses the areal R package (Prener et al. 2019) to check some of the results, and as general guidance on the principles and techniques for implementing areal interpolation.\nThis example is just intended to be a simplified demonstration of a possible workflow. For a real analysis, additional steps and considerations – that may not be covered here – may be needed to deal with data inconsistencies (e.g., missing or incomplete data), required level of precision and acceptable assumptions (e.g. more fine-grained datasets or more sophisticated techniques could be used to estimate/model population distributions), or other project-specific issues that might arise."
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-setup",
    "href": "example_census_race_ethnicity_calculation.html#sec-setup",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "2 Setup",
    "text": "2 Setup\nThe code block below loads required packages for this analysis, and sets some user-defined options and defaults. If they aren’t already installed on your computer, you can install them with the R command install.packages('package-name') (and replace package-name with the name of the package you want to install).\n\n# packages ----\nlibrary(tidycensus)\nlibrary(tigris)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(areal)\nlibrary(janitor)\nlibrary(here)\nlibrary(units)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(tmap)\nlibrary(patchwork)\nlibrary(scales)\nlibrary(digest)\nlibrary(mapview)\nlibrary(biscale)\nlibrary(cowplot)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(leafpop)\n\n# conflicts ----\nlibrary(conflicted)\nconflicts_prefer(dplyr::filter)\n\n# options ----\noptions(scipen = 999) # turn off scientific notation\noptions(tigris_use_cache = TRUE) # use data caching for tigris\n\n# reference system ----\n## set common projected coordinate reference system used throughout this analysis\ncrs_projected &lt;- 3310 # see: https://epsg.io/3310"
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-census-overview",
    "href": "example_census_race_ethnicity_calculation.html#sec-census-overview",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "3 Census Data Overview",
    "text": "3 Census Data Overview\nThis section provides some brief background on the various types of data available from the U.S. Census Bureau (for more information about census data available for tribal areas / populations, see Section 12). A later section – Section 5 – demonstrates how to retrieve data from the U.S. Census Bureau using the tidycensus R package. Most of the information covered here comes from the book Analyzing US Census Data: Methods, Maps, and Models in R, which is a great source of information if you’d like more detail about any of the topics below (Walker 2023b).\n\n\n\n\n\n\nNote\n\n\n\nIf you’re already familiar with Census data and want to skip this overview, go directly to the next section: Section 4\n\n\nDifferent census products/surveys contain data on different variables, at different geographic scales, over varying periods of time, and with varying levels of certainty. Therefore, there are a number of judgement calls to make when determining which type of census data to use for an analysis – e.g., which data product to use (Decennial Census or American Community Survey), which geographic scale to use (e.g., Block, Block Group, Tract, etc.), what time frame to use, which variables to assess, etc.\nMore detailed information about U.S. Census Bureau’s data products and other topics mentioned below is available here.\n\n3.1 Census Unit Geography / Hierarchy\nPublicly available datasets from the U.S Census Bureau generally consist of individual survey responses aggregated to defined census units (e.g., census tracts) that cover varying geographic scales. Some of these units are nested and can be neatly aggregated (e.g., each census tract is composed of a collection of block groups, and each block group is composed of a collection of blocks), while other census units are outside this hierarchy (e.g., Zip Code Tabulation Areas don’t coincide with any other census unit). Figure 1 shows the relationship of all of the various census units.\nCommonly used census statistical units like tracts and block groups have target population size ranges, and can be adjusted every 10 years (with the decennial census) based on population changes. For example, all ACS 5-year datasets prior to 2020 use the 2010 boundaries for tracts, block groups, and blocks, and all ACS 5-year datasets from 2020 onward (presumably through 2029) use the 2020 boundaries for those units. Census tracts are generally around 4,000 people, with a range from about 1,200 to 8,000, and block groups generally contain 600 to 3,000 people. Blocks are the smallest census units, and are “areas bounded by visible features, such as streets, roads, streams, and railroad tracks, and by nonvisible boundaries, such as selected property lines and city, township, school district, and county limits and short line-of-sight extensions of streets and roads”. For example, a census block may be “a city block bounded on all sides by streets”, while “blocks in suburban and rural areas may be larger, more irregular in shape, and bounded by a variety of features, such as roads, streams, and transmission lines”.\n\n\n\n\n\n\nCaution\n\n\n\nCensus boundaries can change over time. Commonly used statistical units like tracts, block groups, and blocks tend to be revised every 10 years (with the decennial census), so it’s important to use a census boundary dataset that matches the version of the census demographic data you’re retrieving; otherwise, the demographic data may not match geographic areas in your boundary dataset. In some cases, a census unit that exists in a given year of the census data may not exist at all in a different year’s dataset, because census units can be split or merged when boundaries are revised.\nFor more information, see here or here or here or here.\n\n\nFor a list of the different geographic units available for each of the different census products/surveys (see Section 3.2) that can be accessed via the tidycensus package, go here.\n\n\n\n\n\n\nFigure 1: Census Unit Hierarchies\n\n\n\n\n\n3.2 Census Datasets / Surveys\nThe Decennial Census is conducted every 10 years, and is intended to provide a complete count of the US population and assist with political redistricting. As a result, it collects a relatively limited set of basic demographic data, but (should) provide a high degree of precision (i.e., in general it should provide exact counts). It is available for geographic units down to the census block (the smallest census unit available – see Section 3.1). For information about existing and planned future releases of 2020 census data products, go here.\nThe American Community Survey (ACS) provides a much larger array of demographic information than the Decennial Census, and is updated more frequently. The ACS is based on a sample of the population (rather than a count of the entire population, as in the Decennial Census), so it represents estimated values rather than precise counts; therefore, each data point is available as an estimate (typically labeled with an “E” in census variable codes, which are discussed in Section 3.3 ) along with an associated margin of error (typically labeled with “M” or “MOE” in census variable codes) around its estimated value. The MOEs for ACS data are typically provided at a 90% confidence level – to calculate the 90% confidence interval for an estimate, add the MOE to the estimated value to get the upper bound of the confidence interval, and subtract the MOE from the estimate to get the lower bound of the confidence interval (for more information see here). Note that it’s possible to calculate MOEs for some types of derived estimates of census data, such as aggregating data across multiple census units or calculating proportions and percentages (see here for more information); however, it may be difficult or not possible to calculate MOEs for some more complicated types of derived estimates (like some of the aggregation methods described below).\nThe ACS is available in two formats. The 5-year ACS is a rolling average of 5 years of data (e.g., the 2021 5-year ACS dataset is an average of the ACS data from 2017 through 2021), and is generally available for geographic units down to the census block group (though some 5-year ACS data may only be available at less granular levels). The 1-year ACS provides data for a single year, and is only available for geographies with population greater than 65,000 (e.g., large cities and counties). Therefore, only the 5-year ACS will be useful for any analysis at a relatively fine scale (e.g., anything that requires data at or more detailed than the census tract level, or any analysis that considers smaller counties/cities – by definition, census tracts always contain significantly fewer than 65,000 people).\nIn addition to the Decennial Census and ACS data, a number of other census data products/surveys are also available. For example, see the censusapi R package (here or here) for access to over 300 census API endpoints. For historical census data, see the discussion here on using NHGIS, IPUMS, and the ipumsr package.\n\n\n3.3 Census Variables / Codes\nEach census product collects data for many different demographic variables, and each variable is generally associated with an identifier code. In order to access census data programmatically, you often need to know the code associated with each variable of interest. When determining which variables to use, you need to consider what census product contains those variables (see Section 3.2) and how they differ in terms of time frame, precision, spatial granularity (see Section 3.1), etc.\nThe tidycensus package offers a convenient generic way to search for variables across different census products using the load_variables() function, as described here.\nThe following websites may also be helpful for exploring the various census data products and finding the variable names and codes they contain:\n\nCensus Reporter (for ACS data): https://censusreporter.org/ (especially https://censusreporter.org/topics/table-codes/)\nCensus Bureau’s list of variable codes, e.g.:\n\n2020 Census codes: https://api.census.gov/data/2020/dec/pl/variables.html\n2022 ACS 5 year codes: https://api.census.gov/data/2022/acs/acs5/variables.html\n\nCensus Bureau’s data interface (for Decennial Census and ACS, and other census datasets): https://data.census.gov/cedsci/\nNational Historical Geographic Information System (NHGIS) (for ACS data and historical decennial Census data): https://www.nhgis.org/"
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-system-boundaries",
    "href": "example_census_race_ethnicity_calculation.html#sec-system-boundaries",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "4 Target Data Boundaries (Water Systems)",
    "text": "4 Target Data Boundaries (Water Systems)\nIn this section, we’ll get the service area boundaries for Community Water Systems within the Sacramento County area. This will serve as the target dataset – i.e., the set of areas which we’ll be estimating the characteristics of – and will also be used to specify the geographic areas of the census data we want to retrieve. We’ll also get a dataset of county boundaries which overlap the water service areas in this study, which can also help with specifying what census data to access and/or be used to make maps and visualizations.\n\n4.1 Read Water System Data\nIn this case, we’ll get the water system dataset from a shapefile that’s saved locally, then transform that dataset into a common coordinate reference system for mapping and analysis (which is defined above in the variable crs_projected).\nThis water system dataset comes from the California Drinking Water System Area Boundaries dataset. For this example, the dataset has been pre-filtered for systems within Sacramento County (by selecting records where the COUNTY field is “SACRAMENTO”) and for Community Water Systems (by selecting records where the STATE_CLAS field is “COMMUNITY”). Some un-needed fields have also been dropped, remaining fields have been re-ordered.\n\n# read from file\nwater_systems_sac &lt;- st_read(here('02_data_input', \n                                  'water_supplier_boundaries_sac', \n                                  'System_Area_Boundary_Layer_Sac.shp')) %&gt;% \n    st_transform(crs_projected) # transform to common coordinate system\n\n# make sure geometry is valid\nif (sum(!st_is_valid(water_systems_sac)) &gt; 0) {\n    water_systems_sac &lt;- st_make_valid(water_systems_sac)\n}\n\nYou can use the glimpse function (below) to take get a sense of what type of information is available in the water system dataset and how it’s structured.\n\nglimpse(water_systems_sac)\n\nRows: 62\nColumns: 12\n$ WATER_SY_1 &lt;chr&gt; \"HOOD WATER MAINTENCE DIST [SWS]\", \"MC CLELLAN MHP\", \"MAGNO…\n$ WATER_SYST &lt;chr&gt; \"CA3400101\", \"CA3400179\", \"CA3400130\", \"CA3400135\", \"CA3400…\n$ GLOBALID   &lt;chr&gt; \"{36268DB3-9DB2-4305-A85A-2C3A85F20F34}\", \"{E3BF3C3E-D516-4…\n$ BOUNDARY_T &lt;chr&gt; \"Water Service Area\", \"Water Service Area\", \"Water Service …\n$ OWNER_TYPE &lt;chr&gt; \"L\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\",…\n$ COUNTY     &lt;chr&gt; \"SACRAMENTO\", \"SACRAMENTO\", \"SACRAMENTO\", \"SACRAMENTO\", \"SA…\n$ REGULATING &lt;chr&gt; \"LPA64 - SACRAMENTO COUNTY\", \"LPA64 - SACRAMENTO COUNTY\", \"…\n$ FEDERAL_CL &lt;chr&gt; \"COMMUNITY\", \"COMMUNITY\", \"COMMUNITY\", \"COMMUNITY\", \"COMMUN…\n$ STATE_CLAS &lt;chr&gt; \"COMMUNITY\", \"COMMUNITY\", \"COMMUNITY\", \"COMMUNITY\", \"COMMUN…\n$ SERVICE_CO &lt;dbl&gt; 82, 199, 34, 64, 128, 83, 28, 50, 164, 5684, 14798, 115, 33…\n$ POPULATION &lt;dbl&gt; 100, 700, 40, 150, 256, 150, 32, 100, 350, 18005, 44928, 20…\n$ geometry   &lt;GEOMETRY [m]&gt; MULTIPOLYGON (((-131854.3 3..., POLYGON ((-119809.…\n\n\nNote that this dataset already includes a POPULATION variable that indicates the population served by each water system, which was renamed to water_system_population_reported above (note: I’m not exactly how the data in this variable is derived). However, for this analysis we’ll be making our own estimate of the population within each system’s service area based on U.S. Census Bureau data and the spatial representation of the system boundaries. Given the uncertainty in how the reported population data was derived (including potential temporal differences), the population estimates produced here will likely will not exactly match the reported population data; but, the reported population data may serve as a useful check to make sure our estimates are reasonable.\nTo make the water system data easier to work with, we can make some more descriptive field names (note that while it’s redundant, we’re using the prefix water_system_ for all field names to distinguish data types when joining this data with other datasets later).\n\nwater_systems_sac &lt;- water_systems_sac %&gt;% \n    rename(water_system_name = WATER_SY_1, \n           water_system_number = WATER_SYST,\n           water_system_id  = GLOBALID,\n           water_system_boundary_type = BOUNDARY_T,\n           water_system_owner_type  = OWNER_TYPE,\n           water_system_county  = COUNTY,\n           water_system_regulating_agency = REGULATING,\n           water_system_federal_class = FEDERAL_CL,\n           water_system_state_class = STATE_CLAS,\n           water_system_service_connections = SERVICE_CO,\n           water_system_population_reported = POPULATION)\n\nHere’s a view of the structure of the revised dataset:\n\nglimpse(water_systems_sac)\n\nRows: 62\nColumns: 12\n$ water_system_name                &lt;chr&gt; \"HOOD WATER MAINTENCE DIST [SWS]\", \"M…\n$ water_system_number              &lt;chr&gt; \"CA3400101\", \"CA3400179\", \"CA3400130\"…\n$ water_system_id                  &lt;chr&gt; \"{36268DB3-9DB2-4305-A85A-2C3A85F20F3…\n$ water_system_boundary_type       &lt;chr&gt; \"Water Service Area\", \"Water Service …\n$ water_system_owner_type          &lt;chr&gt; \"L\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P…\n$ water_system_county              &lt;chr&gt; \"SACRAMENTO\", \"SACRAMENTO\", \"SACRAMEN…\n$ water_system_regulating_agency   &lt;chr&gt; \"LPA64 - SACRAMENTO COUNTY\", \"LPA64 -…\n$ water_system_federal_class       &lt;chr&gt; \"COMMUNITY\", \"COMMUNITY\", \"COMMUNITY\"…\n$ water_system_state_class         &lt;chr&gt; \"COMMUNITY\", \"COMMUNITY\", \"COMMUNITY\"…\n$ water_system_service_connections &lt;dbl&gt; 82, 199, 34, 64, 128, 83, 28, 50, 164…\n$ water_system_population_reported &lt;dbl&gt; 100, 700, 40, 150, 256, 150, 32, 100,…\n$ geometry                         &lt;GEOMETRY [m]&gt; MULTIPOLYGON (((-131854.3 3.…\n\n\n\n4.1.1 Alternative Data Retrieval Method\nReading in data from a shapefile is shown above because it’s likely one of the more common ways that users will access their target boundary data. However, depending on the dataset, there may be other ways to access the data. For example, the code chunk below demonstrates an alternative – using the arcgislayers package (Parry 2023) – that connects directly to the source dataset (to retrieve the most recent version) and applies the filters needed to reproduce the dataset in the System_Area_Boundary_Layer_Sac.shp file. Also, note that storing data in formats other than the common shapefile format – such as the geopackage format – can have some advantages (for example, see here).\n\n# load arcgislayers package (see: https://r.esri.com/arcgislayers/index.html)\n# install.packages('pak') # only needed if the pak package is not already installed\n# pak::pkg_install(\"R-ArcGIS/arcgislayers\", dependencies = TRUE)\n\nlibrary(arcgislayers)\n\n# define link to data source\nurl_feature &lt;- 'https://gispublic.waterboards.ca.gov/portalserver/rest/services/Drinking_Water/California_Drinking_Water_System_Area_Boundaries/FeatureServer/0'\n\n# connect to data source\nwater_systems_feature_layer &lt;- arc_open(url_feature)\n\n# download and filter data from source\nwater_systems_sac_alternative &lt;- arc_select(\n    water_systems_feature_layer,\n    # apply filters\n    where = \"COUNTY = 'SACRAMENTO' AND STATE_CLASSIFICATION = 'COMMUNITY'\",\n    # select fields\n    fields = c('WATER_SYSTEM_NAME', 'WATER_SYSTEM_NUMBER', 'GLOBALID',\n               'BOUNDARY_TYPE', 'OWNER_TYPE_CODE', 'COUNTY',\n               'REGULATING_AGENCY', 'FEDERAL_CLASSIFICATION',\n               'STATE_CLASSIFICATION', 'SERVICE_CONNECTIONS', 'POPULATION')) %&gt;%\n    # transform to common coordinate system\n    st_transform(crs_projected) %&gt;%\n    # rename fields\n    rename(water_system_name = WATER_SYSTEM_NAME,\n           water_system_number = WATER_SYSTEM_NUMBER,\n           water_system_id = GLOBALID,\n           water_system_boundary_type = BOUNDARY_TYPE,\n           water_system_owner_type = OWNER_TYPE_CODE,\n           water_system_county = COUNTY,\n           water_system_regulating_agency = REGULATING_AGENCY,\n           water_system_federal_class = FEDERAL_CLASSIFICATION,\n           water_system_state_class = STATE_CLASSIFICATION,\n           water_system_service_connections = SERVICE_CONNECTIONS,\n           water_system_population_reported = POPULATION)\n\n# make sure geometry is valid\nif (sum(!st_is_valid(water_systems_sac_alternative)) &gt; 0) {\n    water_systems_sac_alternative &lt;- st_make_valid(water_systems_sac_alternative)\n}\n\n\n\n\n4.2 Get County Boundaries\nWhen accessing census data using the tidycensus R package as shown below (in Section 5), it’s often useful (though not strictly required) to know which counties overlap the target dataset (note that, even though the dataset is filtered for systems in Sacramento county, there are some systems whose boundaries extend into neighboring counties). County boundaries may also be useful for making maps in later stages of the analysis. You can get a dataset of county boundaries in California from the TIGER dataset, which can be accessed with R using the tigris R package (Walker 2023a).\n\ncounties_ca &lt;- counties(state = 'CA', \n                        cb = TRUE) %&gt;% # simplified\n    st_transform(crs_projected) # transform to common coordinate system\n\nThen, get a list of counties that overlap with the boundaries of the Sacramento area community water systems obtained above.\n\ncounties_overlap &lt;- counties_ca %&gt;% \n    st_filter(water_systems_sac, \n              .predicate = st_intersects)\n\ncounties_list &lt;- counties_overlap %&gt;% pull(NAME)\n\nThe counties in the counties_list variable are: San Joaquin, Yolo, Placer, Sacramento.\n\n\n4.3 Plot Target Data\nFigure 2 shows the water systems and county boundaries in an interactive map.\n\nmapview(counties_overlap, \n        alpha.regions = 0, \n        zcol = 'NAME', \n        layer.name = 'County', \n        legend = FALSE) + \n    mapview(water_systems_sac, \n            zcol = 'water_system_name', \n            layer.name = 'Water System', \n            legend = FALSE)\n\n\n\n\n\n\n\nFigure 2: Selected water systems (with county boundaries for reference)."
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-census-access",
    "href": "example_census_race_ethnicity_calculation.html#sec-census-access",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "5 Accessing Census Data",
    "text": "5 Accessing Census Data\nThe following sections demonstrate how to retrieve census data from the Decennial Census and the ACS using the tidycensus R package.\nIn order to use the tidycensus R package, you’ll need to obtain a personal API key from the US Census Bureau (which is free and available to anyone) by signing up here: http://api.census.gov/data/key_signup.html. Once you have your API key, you’ll need to register it in R by entering the command census_api_key(key = \"YOUR API KEY\", install = TRUE) in the console. Note that the install = TRUE argument means that the key is saved for all future R sessions, so you’ll only need to run that command once on your computer (rather than including it in your scripts). Alternatively, you could save your key to an environment variable and retrieve it using Sys.getenv(). Either way will help you avoid the possibility of entering your API key into any scripts that could be shared publicly.\n\n\n\n\n\n\nCaution\n\n\n\nBecause the boundaries of census units (e.g., tracts, block groups, blocks, etc) can change over time, it’s important to make sure that the version (year) of the census data you’re retrieving matches the version of the census boundary dataset you’re using. The methods shown below retrieve the census boundary dataset together with the census demographic data, which ensures that this won’t be a potential problem. However, if you use a different workflow that retrieves the geographic boundaries and demographic data via separate processes, you should ensure that the versions are consistent.\n\n\n\n5.1 Create Spatial Filter\nBefore downloading the census data, we can create an object that can be used to filter our requests to the census API so that they will only return census units that overlap with our target areas (the object will be passed to the filter_by argument of the get_decennial function below). Note that this isn’t strictly necessary (you could also apply the filter after making the API request), but may helpful to speed the query and reduce memory usage, especially in the case of large queries.\n\n\n\n\n\n\nNote 1\n\n\n\nAt the time of this writing, the filter_by argument of the tidycensus get_decennial and get_acs functions is fairly new, and not yet included in the official documentation.\nAlso, the filter_by argument is optional, and only appears to accept a simple features (sf) object with a single row / feature (e.g., a single water system), and will not accept an sf object with multiple rows / features. The process below attempts to work around this constraint by joining all of the selected water systems into a single multi-part polygon (i.e., an sf object with a single row). However, if you only want to retrieve data for census units that overlap a single target area (e.g., a single water system), you can skip this step.\n\n\n\n\n\n\nListing 1: Create object for filtering the API query\n\n\nwater_systems_filter &lt;- water_systems_sac %&gt;% \n    st_union() %&gt;% \n    st_as_sf()\n\n\n\n\n\n\n5.2 American Community Survey (ACS) Data\nThis section retrieves data from the ACS, using the get_acs() function from the tidycensus package. As of this writing, the most recent version of the 5-year ACS data available is the 2018-2022 ACS – it’s set a variable below (note that this variable is used in multiple places throughout this document).\n\n# set year\nacs_year &lt;- 2022\n\nNext, we define the list of demographic variables we’d like to retrieve tabular data for, by saving the census variables we want in the census_vars_acs object (see Section 3.3 for more information about how to discover variables of interest and find their associated codes). Here we’re providing descriptive names associated with each variable code, which makes the data easier to work with later, but isn’t strictly necessary (i.e., you could just supply the variable codes alone). Note that the use of prefixes (like population_ or households_) and suffixes (like _count) is intentional – those will be used later as part of the calculation process.\n\n# define variables to pull from the ACS\ncensus_vars_acs &lt;- c(\n    # --- population variables ---\n    'population_total_count' = 'B01003_001',\n    'population_hispanic_or_latino_count' = 'B03002_012', # Total Hispanic or Latino\n    'population_white_count' = 'B03002_003', # White (Not Hispanic or Latino)\n    'population_black_or_african_american_count' = 'B03002_004', # Black or African American (Not Hispanic or Latino)\n    'population_native_american_or_alaska_native_count' = 'B03002_005', # American Indian and Alaska Native (Not Hispanic or Latino)\n    'population_asian_count' = 'B03002_006', # Asian (Not Hispanic or Latino)\n    'population_pacific_islander_count' = 'B03002_007', # Native Hawaiian and Other Pacific Islander (Not Hispanic or Latino)\n    'population_other_count' = 'B03002_008', # Some other race (Not Hispanic or Latino)\n    'population_multiple_count' = 'B03002_009', # Two or more races (Not Hispanic or Latino)\n    \n    # --- poverty variables ---\n    'poverty_total_assessed_count' = 'B17021_001', # also available from 'B17020_001' (at the tract level only). Total population for whom poverty status is determined. Poverty status was determined for all people except institutionalized people, people in military group quarters, people in college dormitories, and unrelated individuals under 15 years old. These groups were excluded from the numerator and denominator when calculating poverty rates.\n    'poverty_below_level_count' = 'B17021_002', # also available from 'B17020_002' (at the tract level only). Population whose income in the past 12 months is below federal poverty level. A family and every individual in it are considered to be in poverty if the family's total income is less than the dollar value of a threshold that varies depending upon size of family, number of children, & age of householder (for 1- & 2- person households). Income is the sum of wage/salary income; net self-employment income; interest/dividends/net rental/royalty income/income from estates & trusts; Social Security/Railroad Retirement income; Supplemental Security Income (SSI); public assistance/welfare payments; retirement/survivor/disability pensions; & all other income.\n    'poverty_above_level_count' = 'B17021_019', # also available from 'B17020_010' (at the tract level only). Population whose income in the past 12 months is at or above federal poverty level. A family and every individual in it are considered to be in poverty if the family's total income is less than the dollar value of a threshold that varies depending upon size of family, number of children, & age of householder (for 1- & 2- person households). Income is the sum of wage/salary income; net self-employment income; interest/dividends/net rental/royalty income/income from estates & trusts; Social Security/Railroad Retirement income; Supplemental Security Income (SSI); public assistance/welfare payments; retirement/survivor/disability pensions; & all other income.\n    \n    # --- household variables ---\n    'households_count' = 'B19001_001', # also available from variable 'B19053_001'. A household includes all the people who occupy a housing unit - a house, an apartment, a mobile home, a group of rooms, or a single room that is occupied. People not living in households are classified as living in group quarters. NOTE: this only includes occupied households (vacant households are not included in most calculations) - to see occupied vs vacant vs total (occupied & vacant), see variables B25002_001, B25002_002, and B25002_003\n    \n    'average_household_size' = 'B25010_001', # A measure obtained by dividing the number of people living in occupied housing units by the total number of occupied housing units. This measure is rounded to the nearest hundredth.\n    \n    # --- household income variables ---\n    'median_household_income' = 'B19013_001', # also available from 'B19019_001' (at the tract level only). Income in the past 12 months is the sum of wage or salary income; net self-employment income; interest, dividends, or net rental or royalty income or income from estates and trusts; Social Security or Railroad Retirement income; Supplemental Security Income (SSI); public assistance or welfare payments; retirement, survivor, or disability pensions; and all other income.\n    'households_income_below_10k_count' = 'B19001_002', # count of households with income below $10,000 \n    'households_income_10k_15k_count' = 'B19001_003', # count of households with income $10,000 to $15,000 \n    'households_income_15k_20k_count' = 'B19001_004', \n    'households_income_20k_25k_count' = 'B19001_005', \n    'households_income_25k_30k_count' = 'B19001_006', \n    'households_income_30k_35k_count' = 'B19001_007', \n    'households_income_35k_40k_count' = 'B19001_008', \n    'households_income_40k_45k_count' = 'B19001_009', \n    'households_income_45k_50k_count' = 'B19001_010', \n    'households_income_50k_60k_count' = 'B19001_011', \n    'households_income_60k_75k_count' = 'B19001_012', \n    'households_income_75k_100k_count' = 'B19001_013', \n    'households_income_100k_125k_count' = 'B19001_014', \n    'households_income_125k_150k_count' = 'B19001_015', \n    'households_income_150k_200k_count' = 'B19001_016',\n    'households_income_above_200k_count' = 'B19001_017', # count of households with income above $200,000\n    \n    # --- housing costs variables (% of household income) ---\n    # Housing Costs as a Percentage of Household Income in the past 12 months - NOTE: THIS TABLE IS NEW FOR THE 2022 ACS, AND WON'T BE AVAILABLE FOR PREVIOUS YEARS - Table B25140 shows the count of households paying more than 30% of their income towards housing costs broken out by three tenure categories (owned with a mortgage, owned without a mortgage, and rented). The table also shows the number of households paying more than 50% of their income toward housing costs.\n    # 'households_count' = 'B25140_001', \n    'households_mortgage_total_count' = 'B25140_002',\n    'households_mortgage_housing_costs_over30pct_count' = 'B25140_003',\n    'households_mortgage_housing_costs_over50pct_count' = 'B25140_004',\n    'households_no_mortgage_total_count' = 'B25140_006',\n    'households_no_mortgage_housing_costs_over30pct_count' = 'B25140_007',\n    'households_no_mortgage_housing_costs_over50pct_count' = 'B25140_008',\n    'households_rent_total_count' = 'B25140_010',\n    'households_rent_housing_costs_over30pct_count' = 'B25140_011',\n    'households_rent_housing_costs_over50pct_count' = 'B25140_012',\n    \n    # --- other income / economic variables ---\n    'per_capita_income' = 'B19301_001' # note: per capita income by race (at block group level) available in table B19301I\n)\n\nNow, we can make the data request, using the get_acs function, which accepts several arguments that specify exactly what data to return.\nFor this example we’re getting data at the ‘Block Group’ level (with the geography = 'block group' argument) for the demographic variables defined above in the census_vars_acs object (which is passed to the variables argument). As noted above, block group-level data is the most granular level of spatial data available from the ACS, and should provide the best results when estimating demographics for areas whose boundaries don’t align with census unit boundaries. However, note that some variables may only be available at less granular spatial scales (like tracts).\nIn addition to the tabular data associated with the demographic variables in our list, we’ll also get the spatial data – i.e., the boundaries of the census blocks – by setting the geometry = TRUE argument. When we do this, the tabular demographic data is pre-joined to the spatial data for the associated version of the census boundaries, so the API request returns a single dataset with both the spatial and attribute (demographic) data combined.\n\n\n\n\n\n\nNote\n\n\n\nThe tidycensus package generally returns the Census Bureau’s cartographic boundary shapefiles by default (as opposed to the core TIGER/Line shapefiles, which is the default format returned by the tigris R package). The default cartographic boundary shapefiles are pre-clipped to the US coastline, and are smaller/faster to process (alternatively you can use cb = FALSE to get the core TIGER/Line data) (see here). So the default spatial data returned by tidycensus may be somewhat different than the default spatial data returned by the tigris package, but in general I find it’s best to use the default tidycensus spatial data.\nHowever, at the block level tidycensus returns the more detailed core TIGER/Line shapefiles (i.e., they are identical to the default block-level geographic data returned by tigris). In some cases, that may create minor inconsistencies when working with both blocks and block groups and using the default geographies.\n\n\nWe also narrow down the search parameters geographically by specifying the state (with state = 'CA') and counties (county = counties_list) we’re seeking data for, and provide an object to the filter_by argument which filters the data returned so that it only includes census units that overlap with our target areas. Note that the water_systems_filter object supplied to the filter_by argument was created above in Listing 1 (and see Note 1 above for more information about this argument).\n\n\n\n\n\n\nNote\n\n\n\nSupplying a list of counties may not be strictly necessary, especially in cases where you supply the optional filter_by argument. However, especially when working with granular data like blocks, supplying the county argument seems to greatly speed the API request.\n\n\nAlso, while by default the tidycensus package returns data in long/tidy format, we’re getting the data in wide format for this example (by specifying output = 'wide') because it’ll be easier to work with for the interpolation method described below to estimate demographics for non-census geographies.\n\n\n\n\nListing 2: Retrieve ACS data\n\n\n# get census data\ncensus_data_acs &lt;- get_acs(geography = 'block group',\n                           state = 'CA', \n                           county = counties_list,\n                           filter_by = water_systems_filter,\n                           year = acs_year,\n                           survey = 'acs5',\n                           variables = census_vars_acs, \n                           output = 'wide', # can be 'wide' or 'tidy'\n                           geometry = TRUE,\n                           cache_table = TRUE) %&gt;% \n    st_transform(crs_projected) # convert to common coordinate system\n\n# # apply spatial filter to select only the census units overlapping the target area\n# ## NOTE: likely only needed if the 'filter_by' argument above is not provided\n# census_data_acs &lt;- census_data_acs %&gt;% \n#     st_filter(water_systems_sac)\n\n\n\n\nThe output is an sf object (i.e., a dataframe-like object that also includes spatial data), in wide format, where each row represents a census unit, and the each demographic variable is reported in a separate column. Here’s a view of the contents and structure of the 2022 5-year ACS data that’s returned (only the first few fields are shown):\n\nglimpse(census_data_acs[,1:20])\n\nRows: 1,054\nColumns: 21\n$ GEOID                                              &lt;chr&gt; \"060670081451\", \"06…\n$ NAME                                               &lt;chr&gt; \"Block Group 1; Cen…\n$ population_total_countE                            &lt;dbl&gt; 1768, 1881, 1098, 2…\n$ population_total_countM                            &lt;dbl&gt; 520, 585, 395, 583,…\n$ population_hispanic_or_latino_countE               &lt;dbl&gt; 38, 327, 376, 782, …\n$ population_hispanic_or_latino_countM               &lt;dbl&gt; 59, 298, 280, 315, …\n$ population_white_countE                            &lt;dbl&gt; 1627, 1337, 293, 18…\n$ population_white_countM                            &lt;dbl&gt; 521, 475, 191, 460,…\n$ population_black_or_african_american_countE        &lt;dbl&gt; 0, 1, 272, 26, 351,…\n$ population_black_or_african_american_countM        &lt;dbl&gt; 13, 3, 251, 38, 334…\n$ population_native_american_or_alaska_native_countE &lt;dbl&gt; 41, 0, 0, 26, 0, 0,…\n$ population_native_american_or_alaska_native_countM &lt;dbl&gt; 58, 13, 13, 42, 13,…\n$ population_asian_countE                            &lt;dbl&gt; 45, 0, 105, 58, 144…\n$ population_asian_countM                            &lt;dbl&gt; 71, 13, 116, 66, 18…\n$ population_pacific_islander_countE                 &lt;dbl&gt; 0, 98, 0, 0, 27, 13…\n$ population_pacific_islander_countM                 &lt;dbl&gt; 13, 98, 13, 13, 50,…\n$ population_other_countE                            &lt;dbl&gt; 0, 0, 39, 0, 0, 0, …\n$ population_other_countM                            &lt;dbl&gt; 13, 13, 63, 13, 13,…\n$ population_multiple_countE                         &lt;dbl&gt; 17, 118, 13, 39, 15…\n$ population_multiple_countM                         &lt;dbl&gt; 27, 125, 20, 57, 25…\n$ geometry                                           &lt;POLYGON [m]&gt; POLYGON ((-…\n\n\nNote that the dataset that’s returned includes fields corresponding to Margin of Error (MOE) for each variable we’ve requested (these are the fields that end an M – e.g., “population_total_countM”), since, as noted above in Section 3.2 , the ACS is based on a sample of the population and reports estimated values.\nFor further analysis, we may want to get the statewide data as a baseline for comparison (this could also be done for other scales, like the county level). We can use a similar process to get that data and clean/format it to match the more detailed data obtained above. Note that in this case we’re also using the 5-year ACS (even though the 1-year ACS is also available at the statewide level, and would provide more up-to-date data) so that the statewide data will be directly comparable to the block group level data obtained above.\n\ncensus_data_acs_state &lt;- get_acs(geography = 'state',\n                                 state = 'CA', \n                                 year = acs_year,\n                                 survey = 'acs5',\n                                 variables = census_vars_acs, \n                                 output = 'wide', # can be 'wide' or 'tidy'\n                                 geometry = TRUE,\n                                 cache_table = TRUE) %&gt;% \n    st_transform(crs_projected) %&gt;%  # convert to common coordinate system\n    select(-matches('M$')) %&gt;%  # the $ specifies \"ends with\"\n    # clean names (note this is a little different than the way we renamed fields above, either works)\n    rename_with(.fn = ~ str_remove(., # remove 'E' (estimate) from field names\n                                   pattern = 'E$')) %&gt;% \n    rename_with(.fn = ~ str_replace(., # add 'E' back to NAME field\n                                    pattern = 'NAM', \n                                    replacement = 'NAME'))\n\n\n\n5.3 Decennial Census Data\nTo get data from the Decennial Census, you can use the get_decennial function, which is very similar to the get_acs() function used above. As of this writing, the most recent version of the decennial census data available is from 2020 (set as a variable below).\n\n# set year\ndecennial_year &lt;- 2020\n\nHowever, since ACS data contains data on a much broader set of socioeconomic metrics than the Decennial Census, the requested data includes a greatly reduced list of variables, defined in the census_vars_decennial object (see Section 3.3 for more information about how to discover variables of interest and find their associated codes). As above, we’ll provide descriptive names associated with each variable code, which makes the data easier to work with later, but isn’t strictly necessary (i.e., you could just supply the variable codes alone).\n\n# define variables to pull from the decennial census\ncensus_vars_decennial &lt;- c(\n    'population_total_count' = 'P2_001N',    \n    'population_hispanic_or_latino_count' = 'P2_002N', # Total Hispanic or Latino\n    'population_white_count' = 'P2_005N', # White (Not Hispanic or Latino)\n    'population_black_or_african_american_count' = 'P2_006N', # Black or African American (Not Hispanic or Latino)\n    'population_native_american_or_alaska_native_count' = 'P2_007N', # American Indian and Alaska Native (Not Hispanic or Latino)\n    'population_asian_count' = 'P2_008N', # Asian (Not Hispanic or Latino)\n    'population_pacific_islander_count' = 'P2_009N', # Native Hawaiian and Other Pacific Islander (Not Hispanic or Latino)\n    'population_other_count' = 'P2_010N', # Some other race (Not Hispanic or Latino)\n    'population_multiple_count' = 'P2_011N', # Two or more races (Not Hispanic or Latino)\n    'households_count' = 'H1_002N' # households (occupied)\n)\n\nNext we can make the data request, using the get_decennial function, which is very similar to the get_acs function described above (Section 5.2). However, for this example we’re getting data at the ‘Block’ level (with the geography = 'block' argument) for the demographic variables defined above in the census_vars_decennial object (which is passed to the variables argument). As noted above, block-level data is the most granular level of spatial data available, and should provide the best results when estimating demographics for areas whose boundaries don’t align with census unit boundaries. However, depending on the use case, it may require too much time and computational resources to use the most granular spatial data, and may not be necessary to obtain a reasonable estimate. Also, keep in mind that block-level data may not be available for all variables, and some variables may only be available at less granular spatial scales (like block groups or tracts).\nAlso note that the water_systems_filter object supplied to the filter_by argument was created above in Listing 1 (and see Note 1 above for more information about this argument).\n\n\n\n\nListing 3: Retrieve decennial census data\n\n\n# get census data\ncensus_data_decennial &lt;- get_decennial(geography = 'block', # can be 'block', 'block group', 'tract', 'county', etc.\n                                       state = 'CA', \n                                       county = counties_list,\n                                       filter_by = water_systems_filter,\n                                       year = decennial_year,\n                                       variables = census_vars_decennial,\n                                       output = 'wide', # can be 'wide' or 'tidy'\n                                       geometry = TRUE,\n                                       cache_table = TRUE) %&gt;% \n    st_transform(crs_projected) # convert to common coordinate system\n\n# apply spatial filter to select only the census units overlapping the target area\n## NOTE: at detailed (block) level this may be needed - the water_systems_filter \n## object may not filter out all blocks (these appear to be blocks that \n## border / touch the filter area, but don't overlap with it) - filtering these \n## out may avoid complications in subsequent calculations\ncensus_data_decennial &lt;- census_data_decennial %&gt;%\n    st_filter(water_systems_sac)\n\n\n\n\nAs above, the output is an sf object (i.e., a dataframe-like object that also includes spatial data), in wide format, where each row represents a census unit, and the population of each racial/ethnic group is reported in a separate column. Here’s a view of the contents and structure of the Decennial Census data that’s returned:\n\nglimpse(census_data_decennial)\n\nRows: 17,721\nColumns: 13\n$ GEOID                                             &lt;chr&gt; \"060670019003011\", \"…\n$ NAME                                              &lt;chr&gt; \"Block 3011, Block G…\n$ population_total_count                            &lt;dbl&gt; 53, 20, 181, 100, 12…\n$ population_hispanic_or_latino_count               &lt;dbl&gt; 4, 6, 8, 11, 1, 14, …\n$ population_white_count                            &lt;dbl&gt; 20, 4, 167, 70, 86, …\n$ population_black_or_african_american_count        &lt;dbl&gt; 2, 2, 0, 8, 9, 18, 0…\n$ population_native_american_or_alaska_native_count &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0,…\n$ population_asian_count                            &lt;dbl&gt; 19, 5, 2, 1, 23, 8, …\n$ population_pacific_islander_count                 &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0,…\n$ population_other_count                            &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0,…\n$ population_multiple_count                         &lt;dbl&gt; 8, 3, 4, 10, 5, 10, …\n$ households_count                                  &lt;dbl&gt; 19, 7, 64, 48, 60, 1…\n$ geometry                                          &lt;POLYGON [m]&gt; POLYGON ((-1…\n\n\n\n\n5.4 Plot Census & Supplier Data\n\nsystem_plot &lt;- 'SACRAMENTO SUBURBAN WATER DISTRICT'\n\nFigure 3 shows the 2022 5-year ACS census units that overlap with one of the water systems (Sacramento Suburban Water District) that we’ll compute demographics for below (note that a single system is shown because plotting the census units that overlap all systems tends to be slow in this format; to view the census boundaries overlapping all systems see Figure 5).\n\n\n\n\nmapview(water_systems_sac %&gt;% \n            filter(water_system_name == system_plot), \n        zcol = 'water_system_name', \n        layer.name = 'Water System', \n        legend = FALSE) +\n    mapview(census_data_acs %&gt;% \n                st_filter(water_systems_sac %&gt;% \n                              filter(water_system_name == system_plot)), \n            alpha.regions = 0, \n            color = 'cyan', \n            lwd = 1.3, label = 'NAME',  \n            layer.name = 'ACS Data', \n            legend = FALSE) #  zcol = 'NAME'\n\n\n\n\n\n\n\nFigure 3: Water system Sacramento Suburban Water District (filled polygon) and boundaries of census units (light blue) that will be used to estimate water system demographics."
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-estimate-demographics",
    "href": "example_census_race_ethnicity_calculation.html#sec-estimate-demographics",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "6 Compute Water System Demographics",
    "text": "6 Compute Water System Demographics\nNow we can perform calculations to estimate demographic characteristics for our target areas (water system service boundaries in the Sacramento County area) from our source demographic dataset (census data). For this example, we’ll use the 2022 5-year ACS data that was retrieved above (which is saved in the census_data_acs variable) as our source of demographic data, and we’ll estimate the following for each water system’s service area:\n\nTotal population and population of each racial/ethnic group (using the racial/ethnic categories defined in the census dataset), and each racial/ethnic group’s portion of the total service area population\nSocioeconomic variables like poverty rate, median household income, income distributions, per capita income, and average household size\n\n\n6.1 Considerations and Alternatives\nThere are multiple ways this estimation can be done. Which option to pick may depend on multiple factors, such as:\n\nLevel of precision required (higher precision may require more detailed methods)\nLevel of certainty in the target area boundaries (higher uncertainty in target area boundaries may make more detailed methods irrelevant/unnecessary)\nRelative size of the target areas to available types of census units (if target areas are relatively large, the results may not be very sensitive to the method chosen, but results for smaller areas may be highly sensitive to choice of method)\nDegree to which the methodology should easily explainable / interpretable (detailed methods may be hard to explain concisely)\nTypes of census variables needed (some variables may not be available at certain levels of spatial granularity)\n\nMethods described in this document include the following (in no particular order):\n\nMulti-step process that uses areal interpolation to estimate count variables for the target areas (water systems) from overlapping census units, then uses that estimated count data to make weighted average estimates for remaining variables. See Section 6.2.\nSimplified method which uses entire census units that overlap the target areas (water systems) to estimate demographics for those areas. This method is relatively simple and explainable, and makes it possible to produce MOEs for the derived estimates. However, it uses entire census units as proxies for water system service area boundaries, so may produce significantly less precise estimates than other approaches in some cases. See Section 9.1.\nPopulation weighted areal interpolation, using the interpolate_pw function from the tidycensus R package, which implements an approach that is based on Esri’s data apportionment algorithm (see here and here. This attempts to take into account the distribution of the population within census units, by using data from a third more granular dataset as weights for the interpolation process between the source and target areas. This approach likely will produce more precise estimates than the approaches described above, especially for mid- and smaller- sized target areas that may only overlap portions of a relatively small number of census units. However it doesn’t appear to be applicable for very small target areas (small water systems), and doesn’t provide estimates for those areas – more research may be needed on considerations for its use in certain cases. It may also be somewhat difficult to explain the methodology and/or interpret the results. See Section 9.2.\nModified version of population weighted areal interpolation, which is somewhat similar to the approach above in that it uses data from a third (more granular) dataset to estimate the distribution of the population within census units (block groups) and determine what portion of each census unit to apply to each target area (water system). This modified approach may especially improve estimates in cases where the target areas (water systems) only overlap a portion of the source data (census units), and may provide somewhat more valid estimates for mid- and smaller- sized water systems (though it still won’t work for very small areas/ systems). However, it may be somewhat complicated for some use cases, may not meaningfully improve estimates for some (mostly larger) systems, and may be somewhat difficult to describe and interpret. See Section 9.3.\n\nIn addition, Section 10 describes how to use block level data from the decennial census to produce more detailed population / household count estimates alone.\nFor simplicity, we’ll apply the first method here, and then save and explore / visualize the results obtained from that method in more detail. However, those results could simply be replaced with the results from any of those other methods described later in Section 9 (or other methods not described in this document).\n\n\n6.2 Method Overview\nThis method will employ a multi-step approach:\n\nEstimate values for count-based variables (typically referred to as ‘extensive’ data types) – e.g., total population, population by race/ethnicity, population above / below poverty rate, households by income bracket, etc. – for overlapping census units, using areal interpolation. This is essentially an area-weighted average, which estimates how much of each source unit’s (census unit) count applies to the target area (a given water service area), based on the portion of its area that overlaps that target area. For example, for a census unit that partially overlaps a service area, only a fraction of its count for a given variable will be applied to that service area; for a census unit that completely overlaps a service area, the full count for that variable will be applied to the service area.\nFor more information about this process and discussion of its use cases, see this journal article, and/or the documentation here and here from the areal R package.\nThe major simplifying assumption of this approach is that the population or other count-based variable of interest is evenly distributed within each unit in the source data. For example, in this case we’re assuming that population (including the total population and the population of each racial/ethic group), households of each income bracket, populations above / below the poverty rate, etc. are evenly distributed within each census block group.\n\n\n\n\n\n\n\nNote\n\n\n\nWhile this section uses the block group-level count data from the 5-year ACS, there may be cases where it could be useful or necessary to use more granular block-level population data from the decennial census to estimate population densities and distributions within block groups. This could especially be the case when estimating characteristics for small and/or rural areas. See Section 9.2 and Section 9.3 for approaches which implement methods that do that, and Section 10 for detailed estimates of population alone using block-level decennial data.\nAlso see Section 11 for more information about challenges estimating values for small / rural areas.\n\n\n\nUsing the estimated count data (populations, households, etc), compute weighted values for remaining variables, with the associated count data as a weighting factors – e.g., population-weighted values for population based data, or household-weighted values for household-based data. These variables are typically referred to as ‘intensive’ variables.\n\n\n\n\n\n\n\nNote\n\n\n\nAlthough it’s possible to use simple areal interpolation to aggregate these ‘intensive’ variables as well, the multi-step approach described here can be useful because we know (from the population / household count data) that population densities differ between census units. Since we have a reasonable estimate of the count data (population, households, etc.) within each census unit, using a population- or household-weighted average likely will yield more accurate results than a simple area-weighted average for these variables. For example, for per capita income, an area-weighted average would likely over-weight large census areas with lower population densities, and would likely be less meaningful than a population-weighted average.\nAreal interpolation of intensive variables may be more useful for cases where we generally have no other information about how density varies between the source polygons.\nSome of those considerations are discussed here. More research / input may be needed on this issue.\n\n\n\nAggregate interpolated values at the water system level, summing the count data for variables computed in step 1, and computing weighted means for count-weighted variables computed in step 2.\n\n\n\n6.3 Prepare Census Data\nNote that we already transformed the 2022 5-year ACS dataset into the common projected coordinate reference system used for this example immediately after we downloaded the data using the get_acs() function (see Listing 2). This allows us to work with the water system data and the census data together in a common coordinate system.\nBefore calculating demographics for the target areas, we can do a bit of additional transformation to prepare the census data. First, because we won’t be incorporating the margin of error (MOE) into the analysis below, we can drop them for this example, then clean up the field names.\n\n\n\n\n\n\nTip\n\n\n\nIt is possible to calculate MOEs for derived estimates – e.g., when aggregating groups of census units – and in many cases it may be worthwhile to do that to provide extra context to the data. However, it may not be possible (or may be very difficult) to calculate MOEs for data estimated using more complex aggregations, such as the areal interpolation shown below – more research on that may be needed.\nFor guidance on how calculate MOEs for some types of derived estimates, see this document.\nFor an alternative, simplified approach to estimating census demographics for target areas which includes MOEs for the derived estimates, see Section 9.1.\n\n\n\n# drop MOE fields\ncensus_data_acs &lt;- census_data_acs %&gt;% \n    select(-matches('M$')) # the $ specifies \"ends with\"\n\n# clean names\nnames(census_data_acs) &lt;- names(census_data_acs) %&gt;% \n    str_remove('E$') %&gt;% # remove 'E' (estimate) from field names\n    str_replace('NAM', 'NAME') # add 'E' back to NAME field\n\nHere’s a view of the contents and structure of the revised 2022 5-year ACS dataset (only the first few fields are shown):\n\nglimpse(census_data_acs[,1:20])\n\nRows: 1,054\nColumns: 21\n$ GEOID                                             &lt;chr&gt; \"060670081451\", \"060…\n$ NAME                                              &lt;chr&gt; \"Block Group 1; Cens…\n$ population_total_count                            &lt;dbl&gt; 1768, 1881, 1098, 27…\n$ population_hispanic_or_latino_count               &lt;dbl&gt; 38, 327, 376, 782, 3…\n$ population_white_count                            &lt;dbl&gt; 1627, 1337, 293, 181…\n$ population_black_or_african_american_count        &lt;dbl&gt; 0, 1, 272, 26, 351, …\n$ population_native_american_or_alaska_native_count &lt;dbl&gt; 41, 0, 0, 26, 0, 0, …\n$ population_asian_count                            &lt;dbl&gt; 45, 0, 105, 58, 144,…\n$ population_pacific_islander_count                 &lt;dbl&gt; 0, 98, 0, 0, 27, 13,…\n$ population_other_count                            &lt;dbl&gt; 0, 0, 39, 0, 0, 0, 0…\n$ population_multiple_count                         &lt;dbl&gt; 17, 118, 13, 39, 15,…\n$ poverty_total_assessed_count                      &lt;dbl&gt; 1768, 1847, 1098, 27…\n$ poverty_below_level_count                         &lt;dbl&gt; 101, 328, 272, 116, …\n$ poverty_above_level_count                         &lt;dbl&gt; 1667, 1519, 826, 263…\n$ households_count                                  &lt;dbl&gt; 680, 718, 405, 905, …\n$ average_household_size                            &lt;dbl&gt; 2.59, 2.62, 2.71, 2.…\n$ median_household_income                           &lt;dbl&gt; 123500, 66768, 56216…\n$ households_income_below_10k_count                 &lt;dbl&gt; 18, 47, 10, 22, 6, 1…\n$ households_income_10k_15k_count                   &lt;dbl&gt; 0, 0, 24, 0, 15, 231…\n$ households_income_15k_20k_count                   &lt;dbl&gt; 0, 13, 18, 0, 51, 12…\n$ geometry                                          &lt;POLYGON [m]&gt; POLYGON ((-1…\n\n\nWe can also do some other transformations – for example, we can calculate the poverty rate for each census unit (which may be useful for presenting results later).\n\ncensus_data_acs &lt;- census_data_acs %&gt;% \n    mutate(poverty_rate_pct_calc_census_unit = case_when(\n        poverty_total_assessed_count == 0 ~ 0,\n        .default = 100 * poverty_below_level_count / poverty_total_assessed_count\n    ), \n    .after = poverty_above_level_count)\n\n\n\n6.4 Interpolation Step 1: Estimate Data for Count (Extensive) Variables with Areal Interpolation\nThere are a couple of ways to implement the areal interpolation method. The example below ‘manually’ implements the process using functions from the sf package, for reasons described below. However, note that there are R packages which make it possible to perform areal interpolation with a single function - for example, the sf package’s st_interpolate_aw function and the areal package’s aw_interpolate function. This example uses a more ‘manual’ approach because this makes it possible to use the multi-step process described above, and also produces useful intermediate calculated data for mapping and visualization. However, we can use the single-function approach to double check our implementation of the areal interpolation approach for the count data (see Section 8.1).\n\n\n\n\n\n\nWarning\n\n\n\nAreal interpolation may not work well in some cases (for example, in areas that are largely rural or near uninhabited areas) In these cases, it’s possible to use more granular block-level population data from the decennial census to estimate population densities and distributions within block groups. See Section 9.2 and Section 9.3 for approaches that implement methods for doing that.\n\n\nFirst, clip the census data to the water system boundaries:\n\ncensus_data_clip &lt;- census_data_acs %&gt;% \n    mutate(census_unit_area = st_area(.)) %&gt;% \n    st_intersection(water_systems_sac) %&gt;% \n    mutate(clipped_area = st_area(.)) %&gt;% \n    mutate(areal_weight_factor = drop_units(clipped_area / census_unit_area))\n\nFigure 4 shows a plot of the census units clipped to the Sacramento Suburban Water District water system, along with the original/complete census units. Note that you can toggle layers on and off (and change their order of appearance) using the layers button in the upper left part of the map (below the zoom buttons).\n\n\n\n\nmapview(water_systems_sac %&gt;% \n            filter(water_system_name == system_plot), \n        zcol = 'water_system_name', \n        layer.name = 'Water System', \n        legend = FALSE) + \n    mapview(census_data_acs %&gt;% \n                st_filter(water_systems_sac %&gt;% \n                              filter(water_system_name == system_plot)), \n            alpha.regions = 0.15, \n            col.regions = 'grey', \n            color = 'black', \n            lwd = 1, \n            label = 'NAME',  \n            layer.name = 'ACS Data Full', \n            legend = FALSE) +\n    mapview(census_data_clip %&gt;% \n                filter(water_system_name == system_plot),\n            alpha.regions = 0, \n            color = 'cyan', \n            lwd = 1.3, \n            label = 'NAME',  \n            layer.name = 'ACS Data Clipped', \n            legend = FALSE)\n\n\n\n\n\n\n\nFigure 4: Water system Sacramento Suburban Water District (filled polygon), boundaries of overlapping census units (grey), and clipped portions of census units (light blue) that will be used to estimate water system demographics.\n\n\n\nNext, compute the area-weighted counts for the portions of census units that overlap each water system boundary:\n\ncensus_data_interpolate &lt;- census_data_clip %&gt;% \n    mutate(\n        across(\n            .cols = ends_with('_count'),\n            .fns = ~ .x * areal_weight_factor\n        )) \n\n\n\n6.5 Interpolation Step 2: Estimate Weighted Values for Remaining (Intensive) Variables Based on Interpolated Counts\nNext, compute weighted values for remaining variables, using estimated count data from the previous step (population or households) as weighting factors:\n\ncensus_data_interpolate &lt;- census_data_interpolate %&gt;% \n    mutate(average_household_size_weighted = average_household_size * households_count,\n           median_household_income_weighted = median_household_income * households_count,\n           per_capita_income_weighted = per_capita_income * population_total_count)\n\n\n\n\n\n\n\nCaution 1\n\n\n\nTo calculate an aggregated value for a variable like median household income, which depends on the distribution of the underling data, it may be worth considering whether a weighed average value is an appropriate measure. In some cases, it may be more appropriate to use the counts in each income bracket to estimate a median income, and/or present the income distribution rather than a single value.\nFor a discussion of the problem and a proposed solution, see this document.\n\n\n\n\n6.6 Interpolation Step 3: Aggregate by Water System\nNext, combine the weighted values calculated above to produce the estimates for each water system. We can do this by summing all of the count-based variables computed in step 1 above using areal interpolation, and calculating weighted means for all count-weighted variables computed in step 2 above.\nNote that we have to first calculate the denominator for each variable calculated with count-weighted interpolation, because some of those variables contain missing values for records where the denominator is present (and if we don’t remove the missing values, we get an NA for any water system that contains a block group with a missing value for that variable). For example, there are block groups where the median household income is missing, but the total household count is available for that block group – in that case, the weighted average should not include the households in that block group in the denominator; otherwise, the true value will be underestimated.\n\n# aggregate ----\nwater_system_demographics &lt;- census_data_interpolate %&gt;% \n    mutate(\n        average_household_size_denominator = if_else(\n            is.na(average_household_size), \n            0, \n            households_count),\n        median_household_income_denominator = if_else(\n            is.na(median_household_income), \n            0, \n            households_count),\n        per_capita_income_denominator = if_else(\n            is.na(per_capita_income), \n            0, \n            population_total_count)\n    ) %&gt;% \n    group_by(water_system_name) %&gt;% \n    summarize(\n        across(\n            .cols = ends_with('_count'),\n            .fns = ~ sum(.x)\n        ),\n        average_household_size_hh_weighted = \n            sum(average_household_size_weighted, na.rm = TRUE) / \n            sum(average_household_size_denominator),\n        median_household_income_hh_weighted = \n            sum(median_household_income_weighted, na.rm = TRUE) /\n            sum(median_household_income_denominator),\n        per_capita_income_pop_weighted = \n            sum(per_capita_income_weighted, na.rm = TRUE) / \n            sum(per_capita_income_denominator)\n    ) %&gt;% \n    ungroup()\n\n# round count data to nearest whole number ----\nwater_system_demographics &lt;- water_system_demographics %&gt;%\n    mutate(\n        across(\n            .cols = ends_with('_count'),\n            .fns = ~ round(.x, 0)\n        ))\n# glimpse(water_system_demographics_acs_estimated_blocks)\n\n# if population / household counts are zero, set population / household weighted means values to NA ----\nwater_system_demographics &lt;- water_system_demographics %&gt;% \n    mutate(\n        average_household_size_hh_weighted = case_when(\n            households_count == 0 ~ NA,\n            .default = average_household_size_hh_weighted\n        ),\n        median_household_income_hh_weighted = case_when(\n            households_count == 0 ~ NA,\n            .default = median_household_income_hh_weighted\n        ),\n        per_capita_income_pop_weighted = case_when(\n            population_total_count == 0 ~ NA,\n            .default = per_capita_income_pop_weighted\n        )\n    )\n\nSince computing a weighted mean for the median household income may be somewhat inaccurate (as noted above in Caution 1), it may also be worth calculating a grouped median household income based on the income bracket data:\n\n# TO DO: Compute grouped median incomes\n\nUsing the aggregated data, we can also compute some additional metrics for each system, like ethnic/racial group portions, poverty rates, income distributions, etc.:\n\n# race / ethnicity ----\nwater_system_demographics &lt;- water_system_demographics %&gt;%\n    mutate(\n        across(\n            .cols = starts_with('population_'),\n            .fns = ~ ifelse(population_total_count == 0,\n                            NA,\n                            round(.x / population_total_count * 100, 2)),\n            .names = \"{str_replace(.col, '_count', '_percent')}\"\n        ),\n        .after = population_multiple_count) %&gt;% \n    select(-population_total_percent) # this always equals 1, not needed\n\n# poverty rate ----\nwater_system_demographics &lt;- water_system_demographics %&gt;% \n    mutate(poverty_rate_percent = case_when(\n        population_total_count == 0 ~ NA,\n        poverty_total_assessed_count == 0 ~ 0,\n        .default = 100 * poverty_below_level_count / poverty_total_assessed_count\n    ), \n    .after = poverty_above_level_count)\n\n# consistent income brackets ----\n## 25k brackets ----\nwater_system_demographics &lt;- water_system_demographics %&gt;% \n    mutate(households_income_25k_brackets_0_25k_count = \n               households_income_below_10k_count + \n               households_income_10k_15k_count + \n               households_income_15k_20k_count +\n               households_income_20k_25k_count,\n           households_income_25k_brackets_25k_50k_count =\n               households_income_25k_30k_count + \n               households_income_30k_35k_count +\n               households_income_35k_40k_count +\n               households_income_40k_45k_count +\n               households_income_45k_50k_count,\n           households_income_25k_brackets_50k_75k_count =\n               households_income_50k_60k_count +\n               households_income_60k_75k_count,\n           .after = households_income_above_200k_count\n    ) # note: above 75k is already in 25k increments\n\n## 50k brackets ----\nwater_system_demographics &lt;- water_system_demographics %&gt;% \n    mutate(households_income_50k_brackets_0_50k_count = \n               households_income_below_10k_count + \n               households_income_10k_15k_count + \n               households_income_15k_20k_count +\n               households_income_20k_25k_count + \n               households_income_25k_30k_count + \n               households_income_30k_35k_count +\n               households_income_35k_40k_count +\n               households_income_40k_45k_count +\n               households_income_45k_50k_count,\n           households_income_50k_brackets_50k_100k_count =\n               households_income_50k_60k_count +\n               households_income_60k_75k_count +\n               households_income_75k_100k_count,\n           households_income_50k_brackets_100k_150k_count =\n               households_income_100k_125k_count +\n               households_income_125k_150k_count,\n           .after = households_income_25k_brackets_50k_75k_count\n    ) # note: above 150k is already in 50k increments\n\n# portion of households paying more than 30% / 50% of income on housing ----\nwater_system_demographics &lt;- water_system_demographics %&gt;%\n    mutate(households_all_housing_costs_over30pct_percent = \n               ifelse(households_count == 0, \n                      NA,\n                      100 * (households_mortgage_housing_costs_over30pct_count + \n                                 households_no_mortgage_housing_costs_over30pct_count +\n                                 households_rent_housing_costs_over30pct_count) / \n                          households_count), \n           .after = households_rent_housing_costs_over50pct_count) %&gt;% \n    mutate(households_all_housing_costs_over50pct_percent = \n               ifelse(households_count == 0, \n                      NA,\n                      100 * (households_mortgage_housing_costs_over50pct_count + \n                                 households_no_mortgage_housing_costs_over50pct_count +\n                                 households_rent_housing_costs_over50pct_count) / \n                          households_count\n               ),\n           .after = households_all_housing_costs_over30pct_percent)\n\n# round values ----\nwater_system_demographics &lt;- water_system_demographics %&gt;%\n    mutate(\n        across(\n            .cols = ends_with('_count'),\n            .fns = ~ round(.x, 0)\n        ))  %&gt;%\n    mutate(\n        across(\n            .cols = ends_with('_percent'),\n            .fns = ~ round(.x, 2)\n        ))\n\n\n\n6.7 View Results\nWe now have a dataset with the selected metrics from the census data (source data) estimated for each of the water system service areas (target geographic features). Here’s a view of the contents and structure of the re-formatted dataset (only the first few fields are shown):\n\nglimpse(water_system_demographics[,1:20])\n\nRows: 62\nColumns: 21\n$ water_system_name                                   &lt;chr&gt; \"B & W RESORT MARI…\n$ population_total_count                              &lt;dbl&gt; 0, 22603, 33120, 1…\n$ population_hispanic_or_latino_count                 &lt;dbl&gt; 0, 10939, 5245, 34…\n$ population_white_count                              &lt;dbl&gt; 0, 3504, 19456, 23…\n$ population_black_or_african_american_count          &lt;dbl&gt; 0, 2663, 3199, 197…\n$ population_native_american_or_alaska_native_count   &lt;dbl&gt; 0, 121, 113, 70, 0…\n$ population_asian_count                              &lt;dbl&gt; 0, 4075, 2947, 108…\n$ population_pacific_islander_count                   &lt;dbl&gt; 0, 240, 77, 59, 0,…\n$ population_other_count                              &lt;dbl&gt; 0, 103, 235, 92, 0…\n$ population_multiple_count                           &lt;dbl&gt; 0, 957, 1847, 1008…\n$ population_hispanic_or_latino_percent               &lt;dbl&gt; NA, 48.40, 15.84, …\n$ population_white_percent                            &lt;dbl&gt; NA, 15.50, 58.74, …\n$ population_black_or_african_american_percent        &lt;dbl&gt; NA, 11.78, 9.66, 1…\n$ population_native_american_or_alaska_native_percent &lt;dbl&gt; NA, 0.54, 0.34, 0.…\n$ population_asian_percent                            &lt;dbl&gt; NA, 18.03, 8.90, 1…\n$ population_pacific_islander_percent                 &lt;dbl&gt; NA, 1.06, 0.23, 0.…\n$ population_other_percent                            &lt;dbl&gt; NA, 0.46, 0.71, 0.…\n$ population_multiple_percent                         &lt;dbl&gt; NA, 4.23, 5.58, 9.…\n$ poverty_total_assessed_count                        &lt;dbl&gt; 0, 22556, 33034, 1…\n$ poverty_below_level_count                           &lt;dbl&gt; 0, 6010, 3389, 313…\n$ geometry                                            &lt;POLYGON [m]&gt; POLYGON ((…\n\n\nTable 1 shows the cleaned and re-formatted dataset (these results are saved locally in tabular and spatial format in Section 6.10 below).\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_demographics %&gt;%\n    st_drop_geometry() %&gt;% \n    mutate(across(\n        .cols = ends_with('_percent'),\n        .fns = ~ pct_format(. / 100))\n    ) %&gt;%\n    rename_with(.cols = everything(), \n                .fn = ~ str_replace_all(., pattern = '_', replacement = ' ') %&gt;% \n                    str_to_title(.)) %&gt;% \n    kable(align = 'c', \n          format.args = list(big.mark = ',')\n    ) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 1: Estimated Water System Demographics\n\n\n\n\n\n\n\n\nWater System Name\nPopulation Total Count\nPopulation Hispanic Or Latino Count\nPopulation White Count\nPopulation Black Or African American Count\nPopulation Native American Or Alaska Native Count\nPopulation Asian Count\nPopulation Pacific Islander Count\nPopulation Other Count\nPopulation Multiple Count\nPopulation Hispanic Or Latino Percent\nPopulation White Percent\nPopulation Black Or African American Percent\nPopulation Native American Or Alaska Native Percent\nPopulation Asian Percent\nPopulation Pacific Islander Percent\nPopulation Other Percent\nPopulation Multiple Percent\nPoverty Total Assessed Count\nPoverty Below Level Count\nPoverty Above Level Count\nPoverty Rate Percent\nHouseholds Count\nHouseholds Income Below 10k Count\nHouseholds Income 10k 15k Count\nHouseholds Income 15k 20k Count\nHouseholds Income 20k 25k Count\nHouseholds Income 25k 30k Count\nHouseholds Income 30k 35k Count\nHouseholds Income 35k 40k Count\nHouseholds Income 40k 45k Count\nHouseholds Income 45k 50k Count\nHouseholds Income 50k 60k Count\nHouseholds Income 60k 75k Count\nHouseholds Income 75k 100k Count\nHouseholds Income 100k 125k Count\nHouseholds Income 125k 150k Count\nHouseholds Income 150k 200k Count\nHouseholds Income Above 200k Count\nHouseholds Income 25k Brackets 0 25k Count\nHouseholds Income 25k Brackets 25k 50k Count\nHouseholds Income 25k Brackets 50k 75k Count\nHouseholds Income 50k Brackets 0 50k Count\nHouseholds Income 50k Brackets 50k 100k Count\nHouseholds Income 50k Brackets 100k 150k Count\nHouseholds Mortgage Total Count\nHouseholds Mortgage Housing Costs Over30pct Count\nHouseholds Mortgage Housing Costs Over50pct Count\nHouseholds No Mortgage Total Count\nHouseholds No Mortgage Housing Costs Over30pct Count\nHouseholds No Mortgage Housing Costs Over50pct Count\nHouseholds Rent Total Count\nHouseholds Rent Housing Costs Over30pct Count\nHouseholds Rent Housing Costs Over50pct Count\nHouseholds All Housing Costs Over30pct Percent\nHouseholds All Housing Costs Over50pct Percent\nAverage Household Size Hh Weighted\nMedian Household Income Hh Weighted\nPer Capita Income Pop Weighted\n\n\n\n\nB & W RESORT MARINA\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nCAL AM FRUITRIDGE VISTA\n22,603\n10,939\n3,504\n2,663\n121\n4,075\n240\n103\n957\n48.40%\n15.50%\n11.78%\n0.54%\n18.03%\n1.06%\n0.46%\n4.23%\n22,556\n6,010\n16,546\n26.64%\n6,900\n354\n339\n521\n263\n367\n302\n359\n355\n565\n692\n876\n784\n459\n235\n287\n141\n1,477\n1,948\n1,568\n3,425\n2,352\n694\n1,620\n745\n345\n1,236\n95\n58\n4,044\n2,131\n1,059\n43.06%\n21.19%\n3.257806\n53,040.44\n20,519.57\n\n\nCALAM - ANTELOPE\n33,120\n5,245\n19,456\n3,199\n113\n2,947\n77\n235\n1,847\n15.84%\n58.74%\n9.66%\n0.34%\n8.90%\n0.23%\n0.71%\n5.58%\n33,034\n3,389\n29,645\n10.26%\n10,529\n315\n184\n101\n122\n116\n469\n248\n368\n449\n737\n1,077\n1,669\n1,501\n1,077\n1,158\n937\n722\n1,650\n1,814\n2,372\n3,483\n2,578\n5,544\n1,861\n621\n1,747\n184\n106\n3,238\n1,678\n649\n35.36%\n13.07%\n3.134530\n93,741.55\n34,660.44\n\n\nCALAM - ARDEN\n10,112\n3,433\n2,392\n1,977\n70\n1,082\n59\n92\n1,008\n33.95%\n23.66%\n19.55%\n0.69%\n10.70%\n0.58%\n0.91%\n9.97%\n10,034\n3,130\n6,904\n31.19%\n3,823\n201\n259\n239\n167\n319\n190\n142\n236\n207\n440\n394\n535\n228\n148\n62\n58\n866\n1,094\n834\n1,960\n1,369\n376\n265\n84\n46\n133\n8\n3\n3,426\n2,124\n1,170\n57.96%\n31.89%\n2.623643\n49,624.62\n22,770.82\n\n\nCALAM - ISLETON\n34\n14\n17\n0\n0\n2\n0\n0\n1\n41.18%\n50.00%\n0.00%\n0.00%\n5.88%\n0.00%\n0.00%\n2.94%\n34\n7\n27\n20.59%\n16\n1\n1\n0\n1\n1\n0\n1\n1\n0\n2\n1\n1\n3\n1\n0\n1\n3\n3\n3\n6\n4\n4\n6\n4\n1\n7\n2\n2\n4\n1\n1\n43.75%\n25.00%\n2.078994\n57,361.76\n40,672.21\n\n\nCALAM - LINCOLN OAKS\n42,916\n9,056\n26,529\n1,486\n143\n2,706\n288\n232\n2,476\n21.10%\n61.82%\n3.46%\n0.33%\n6.31%\n0.67%\n0.54%\n5.77%\n42,823\n4,074\n38,749\n9.51%\n15,621\n740\n375\n308\n622\n488\n616\n585\n629\n645\n1,035\n1,641\n2,442\n1,889\n1,272\n1,555\n778\n2,045\n2,963\n2,676\n5,008\n5,118\n3,161\n7,390\n2,671\n919\n3,332\n503\n298\n4,900\n2,523\n1,302\n36.47%\n16.13%\n2.730281\n82,035.52\n33,728.94\n\n\nCALAM - PARKWAY\n58,635\n18,665\n8,921\n6,965\n21\n19,228\n1,386\n135\n3,315\n31.83%\n15.21%\n11.88%\n0.04%\n32.79%\n2.36%\n0.23%\n5.65%\n58,434\n9,804\n48,630\n16.78%\n17,667\n1,081\n753\n514\n713\n694\n640\n713\n700\n727\n1,145\n1,918\n2,490\n1,634\n1,532\n1,546\n865\n3,061\n3,474\n3,063\n6,535\n5,553\n3,166\n7,163\n2,719\n1,049\n3,418\n647\n383\n7,086\n3,517\n1,917\n38.96%\n18.96%\n3.284608\n72,938.51\n26,938.14\n\n\nCALAM - SUBURBAN ROSEMONT\n57,897\n13,791\n25,062\n7,725\n91\n6,905\n380\n248\n3,695\n23.82%\n43.29%\n13.34%\n0.16%\n11.93%\n0.66%\n0.43%\n6.38%\n57,661\n8,374\n49,287\n14.52%\n21,045\n1,156\n612\n472\n744\n653\n568\n582\n874\n628\n1,289\n2,508\n3,438\n2,595\n1,594\n1,671\n1,661\n2,984\n3,305\n3,797\n6,289\n7,235\n4,189\n8,262\n2,262\n730\n3,425\n439\n271\n9,358\n4,521\n2,320\n34.32%\n15.78%\n2.726937\n81,229.87\n34,497.37\n\n\nCALAM - WALNUT GROVE\n12\n5\n5\n0\n0\n1\n0\n0\n0\n41.67%\n41.67%\n0.00%\n0.00%\n8.33%\n0.00%\n0.00%\n0.00%\n12\n2\n10\n16.67%\n5\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n1\n0\n0\n2\n0\n2\n0\n2\n0\n0\n1\n0\n0\n2\n1\n0\n20.00%\n0.00%\n2.490000\n68,248.00\n38,950.00\n\n\nCALIFORNIA STATE FAIR\n532\n78\n262\n91\n0\n48\n0\n0\n52\n14.66%\n49.25%\n17.11%\n0.00%\n9.02%\n0.00%\n0.00%\n9.77%\n526\n152\n374\n28.90%\n285\n65\n13\n8\n5\n9\n14\n2\n0\n23\n29\n30\n35\n21\n11\n17\n3\n91\n48\n59\n139\n94\n32\n0\n0\n0\n0\n0\n0\n285\n177\n95\n62.11%\n33.33%\n1.820000\n52,886.00\n33,141.00\n\n\nCARMICHAEL WATER DISTRICT\n39,253\n6,192\n25,026\n2,230\n68\n3,326\n295\n28\n2,088\n15.77%\n63.76%\n5.68%\n0.17%\n8.47%\n0.75%\n0.07%\n5.32%\n38,700\n5,000\n33,700\n12.92%\n15,937\n570\n534\n513\n472\n398\n607\n522\n684\n541\n996\n1,595\n1,782\n1,724\n1,200\n1,678\n2,122\n2,089\n2,752\n2,591\n4,841\n4,373\n2,924\n5,256\n1,399\n669\n3,147\n358\n177\n7,534\n4,056\n2,068\n36.47%\n18.28%\n2.405914\n96,967.64\n46,901.80\n\n\nCITRUS HEIGHTS WATER DISTRICT\n68,912\n12,380\n48,148\n2,092\n162\n2,875\n71\n99\n3,086\n17.96%\n69.87%\n3.04%\n0.24%\n4.17%\n0.10%\n0.14%\n4.48%\n68,581\n6,961\n61,620\n10.15%\n25,633\n1,012\n569\n446\n769\n665\n867\n841\n723\n1,165\n1,875\n3,057\n3,954\n2,744\n2,332\n2,533\n2,080\n2,796\n4,261\n4,932\n7,057\n8,886\n5,076\n10,344\n3,553\n1,380\n4,293\n554\n286\n10,996\n5,759\n2,620\n38.49%\n16.72%\n2.653808\n82,960.78\n37,323.17\n\n\nCITY OF SACRAMENTO MAIN\n516,189\n151,211\n159,508\n62,060\n1,249\n98,585\n9,242\n3,005\n31,329\n29.29%\n30.90%\n12.02%\n0.24%\n19.10%\n1.79%\n0.58%\n6.07%\n508,800\n77,003\n431,797\n15.13%\n194,000\n9,540\n9,401\n6,217\n6,407\n5,804\n6,255\n6,278\n6,139\n6,729\n13,349\n17,396\n26,982\n20,453\n15,080\n17,439\n20,531\n31,565\n31,205\n30,745\n62,770\n57,727\n35,533\n67,435\n21,769\n8,217\n29,857\n3,476\n1,805\n96,708\n47,510\n24,524\n37.50%\n17.81%\n2.609594\n84,694.02\n39,105.61\n\n\nDEL PASO MANOR COUNTY WATER DI\n5,592\n687\n3,967\n390\n15\n119\n31\n21\n361\n12.29%\n70.94%\n6.97%\n0.27%\n2.13%\n0.55%\n0.38%\n6.46%\n5,592\n621\n4,971\n11.11%\n2,222\n170\n45\n54\n66\n21\n51\n66\n237\n40\n158\n278\n166\n171\n120\n347\n231\n335\n415\n436\n750\n602\n291\n922\n326\n189\n572\n112\n68\n729\n509\n114\n42.62%\n16.70%\n2.516895\n90,374.38\n40,254.83\n\n\nDELTA CROSSING MHP\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nEAST WALNUT GROVE [SWS]\n3\n2\n2\n0\n0\n0\n0\n0\n0\n66.67%\n66.67%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n3\n1\n3\n33.33%\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0.00%\n0.00%\n2.490000\n68,248.00\n38,950.00\n\n\nEDGEWATER MOBILE HOME PARK\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nEL DORADO MOBILE HOME PARK\n139\n84\n11\n15\n0\n19\n0\n0\n11\n60.43%\n7.91%\n10.79%\n0.00%\n13.67%\n0.00%\n0.00%\n7.91%\n139\n60\n79\n43.17%\n48\n6\n10\n0\n4\n6\n1\n0\n8\n1\n7\n0\n1\n0\n4\n0\n1\n20\n16\n7\n36\n8\n4\n3\n0\n0\n10\n5\n5\n35\n17\n10\n45.83%\n31.25%\n2.710000\n29,468.00\n17,394.00\n\n\nEL DORADO WEST MHP\n148\n89\n12\n16\n0\n20\n0\n0\n12\n60.14%\n8.11%\n10.81%\n0.00%\n13.51%\n0.00%\n0.00%\n8.11%\n147\n63\n84\n42.86%\n51\n6\n10\n0\n4\n6\n1\n0\n8\n2\n8\n0\n1\n0\n5\n0\n1\n20\n17\n8\n37\n9\n5\n3\n0\n0\n10\n6\n6\n38\n18\n10\n47.06%\n31.37%\n2.710000\n29,468.00\n17,394.00\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\n233\n45\n94\n56\n0\n37\n0\n0\n1\n19.31%\n40.34%\n24.03%\n0.00%\n15.88%\n0.00%\n0.00%\n0.43%\n233\n87\n146\n37.34%\n71\n7\n2\n3\n6\n10\n2\n1\n1\n3\n1\n13\n17\n3\n0\n3\n0\n18\n17\n14\n35\n31\n3\n8\n3\n1\n21\n1\n1\n42\n29\n23\n46.48%\n35.21%\n3.280000\n60,521.00\n18,213.00\n\n\nELK GROVE WATER SERVICE\n42,647\n7,656\n19,550\n3,209\n70\n8,939\n388\n283\n2,552\n17.95%\n45.84%\n7.52%\n0.16%\n20.96%\n0.91%\n0.66%\n5.98%\n42,258\n3,264\n38,994\n7.72%\n13,239\n430\n202\n253\n224\n328\n102\n345\n292\n245\n667\n1,117\n1,441\n1,470\n1,386\n1,907\n2,832\n1,109\n1,312\n1,784\n2,421\n3,225\n2,856\n7,552\n1,903\n628\n2,861\n283\n113\n2,826\n1,595\n864\n28.56%\n12.12%\n3.179068\n122,771.00\n43,429.03\n\n\nFAIR OAKS WATER DISTRICT\n36,003\n4,655\n27,050\n708\n94\n1,372\n12\n193\n1,920\n12.93%\n75.13%\n1.97%\n0.26%\n3.81%\n0.03%\n0.54%\n5.33%\n35,775\n2,852\n32,923\n7.97%\n14,233\n546\n332\n113\n229\n208\n391\n206\n469\n293\n804\n1,064\n2,214\n1,447\n1,568\n1,875\n2,474\n1,220\n1,567\n1,868\n2,787\n4,082\n3,015\n7,090\n1,872\n845\n3,092\n261\n108\n4,051\n1,844\n768\n27.94%\n12.09%\n2.480217\n107,985.74\n54,435.01\n\n\nFLORIN COUNTY WATER DISTRICT\n9,951\n2,963\n1,548\n1,394\n7\n2,743\n866\n89\n342\n29.78%\n15.56%\n14.01%\n0.07%\n27.57%\n8.70%\n0.89%\n3.44%\n9,835\n1,285\n8,550\n13.07%\n2,755\n84\n125\n53\n154\n103\n46\n86\n176\n224\n258\n223\n432\n297\n215\n143\n137\n416\n635\n481\n1,051\n913\n512\n981\n426\n90\n675\n49\n28\n1,100\n476\n260\n34.52%\n13.72%\n3.573005\n67,048.12\n24,517.64\n\n\nFOLSOM STATE PRISON\n3,536\n1,257\n652\n1,390\n57\n70\n34\n18\n59\n35.55%\n18.44%\n39.31%\n1.61%\n1.98%\n0.96%\n0.51%\n1.67%\n29\n1\n28\n3.45%\n23\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n4\n4\n12\n1\n0\n0\n0\n0\n0\n8\n3\n1\n0\n0\n0\n0\n19\n0\n0\n4.35%\n0.00%\n2.726311\n161,047.22\n2,271.22\n\n\nFOLSOM, CITY OF - ASHLAND\n3,845\n318\n2,934\n43\n1\n125\n1\n4\n419\n8.27%\n76.31%\n1.12%\n0.03%\n3.25%\n0.03%\n0.10%\n10.90%\n3,780\n143\n3,637\n3.78%\n1,800\n44\n17\n104\n43\n34\n209\n103\n74\n43\n43\n158\n248\n132\n80\n123\n345\n208\n463\n201\n671\n449\n212\n594\n164\n90\n847\n368\n82\n358\n196\n74\n40.44%\n13.67%\n2.087286\n76,810.17\n56,773.97\n\n\nFOLSOM, CITY OF - MAIN\n62,462\n8,433\n35,222\n1,693\n105\n12,934\n177\n242\n3,655\n13.50%\n56.39%\n2.71%\n0.17%\n20.71%\n0.28%\n0.39%\n5.85%\n62,115\n3,405\n58,710\n5.48%\n22,409\n807\n218\n390\n477\n418\n283\n329\n373\n451\n670\n1,181\n2,255\n2,382\n1,747\n4,083\n6,344\n1,892\n1,854\n1,851\n3,746\n4,106\n4,129\n11,491\n2,728\n1,179\n3,590\n237\n146\n7,328\n3,010\n1,321\n26.66%\n11.81%\n2.769356\n141,856.37\n58,469.35\n\n\nFREEPORT MARINA\n3\n2\n1\n0\n0\n0\n0\n0\n0\n66.67%\n33.33%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n3\n1\n3\n33.33%\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0.00%\n0.00%\n2.550000\n56,250.00\n23,510.00\n\n\nGALT, CITY OF\n21,490\n9,314\n9,952\n520\n22\n872\n20\n0\n789\n43.34%\n46.31%\n2.42%\n0.10%\n4.06%\n0.09%\n0.00%\n3.67%\n21,341\n1,404\n19,937\n6.58%\n6,988\n139\n168\n243\n210\n141\n342\n161\n347\n152\n550\n687\n807\n1,096\n504\n789\n650\n760\n1,143\n1,237\n1,903\n2,044\n1,600\n3,724\n907\n523\n1,454\n109\n44\n1,809\n906\n414\n27.50%\n14.04%\n3.048249\n90,632.93\n33,685.54\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\n6,556\n1,706\n2,887\n322\n0\n888\n11\n86\n656\n26.02%\n44.04%\n4.91%\n0.00%\n13.54%\n0.17%\n1.31%\n10.01%\n6,453\n1,626\n4,828\n25.20%\n2,173\n19\n82\n19\n141\n53\n173\n34\n179\n37\n139\n351\n319\n132\n172\n141\n183\n261\n476\n490\n737\n809\n304\n728\n239\n123\n131\n0\n0\n1,315\n599\n335\n38.56%\n21.08%\n2.897716\n66,579.36\n30,417.36\n\n\nGOLDEN STATE WATER CO. - CORDOVA\n48,115\n9,009\n26,042\n3,982\n229\n6,050\n188\n210\n2,405\n18.72%\n54.12%\n8.28%\n0.48%\n12.57%\n0.39%\n0.44%\n5.00%\n47,835\n4,408\n43,427\n9.22%\n18,022\n509\n482\n310\n496\n480\n437\n389\n469\n598\n1,276\n1,692\n2,653\n2,565\n1,671\n1,948\n2,047\n1,797\n2,373\n2,968\n4,170\n5,621\n4,236\n7,380\n2,174\n836\n3,506\n364\n201\n7,137\n2,744\n1,410\n29.31%\n13.58%\n2.650717\n96,697.06\n42,695.41\n\n\nHAPPY HARBOR (SWS)\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nHOLIDAY MOBILE VILLAGE\n46\n18\n7\n3\n0\n15\n0\n0\n3\n39.13%\n15.22%\n6.52%\n0.00%\n32.61%\n0.00%\n0.00%\n6.52%\n46\n10\n36\n21.74%\n16\n2\n1\n0\n1\n0\n1\n5\n1\n0\n0\n2\n2\n1\n0\n0\n0\n4\n7\n2\n11\n4\n1\n2\n0\n0\n2\n1\n1\n12\n6\n4\n43.75%\n31.25%\n2.860000\n38,491.00\n16,707.00\n\n\nHOOD WATER MAINTENCE DIST [SWS]\n1\n1\n0\n0\n0\n0\n0\n0\n0\n100.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n1\n0\n1\n0.00%\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\n23,510.00\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\n209\n52\n129\n1\n0\n6\n0\n0\n21\n24.88%\n61.72%\n0.48%\n0.00%\n2.87%\n0.00%\n0.00%\n10.05%\n209\n45\n164\n21.53%\n124\n4\n26\n18\n3\n0\n16\n7\n5\n6\n1\n4\n29\n0\n0\n0\n6\n51\n34\n5\n85\n34\n0\n9\n0\n0\n89\n37\n34\n27\n27\n22\n51.61%\n45.16%\n1.680363\n31,831.84\n32,878.17\n\n\nKORTHS PIRATES LAIR\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nLAGUNA DEL SOL INC\n24\n5\n18\n0\n0\n0\n0\n0\n0\n20.83%\n75.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n24\n2\n22\n8.33%\n9\n0\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n2\n0\n0\n1\n2\n2\n0\n0\n2\n2\n0\n5\n2\n2\n3\n0\n0\n2\n0\n0\n22.22%\n22.22%\n2.640000\n95,227.00\n50,793.00\n\n\nLAGUNA VILLAGE RV PARK\n20\n3\n2\n1\n0\n11\n2\n0\n2\n15.00%\n10.00%\n5.00%\n0.00%\n55.00%\n10.00%\n0.00%\n10.00%\n20\n2\n18\n10.00%\n7\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n1\n1\n1\n1\n0\n1\n1\n2\n1\n3\n1\n0\n1\n0\n0\n3\n1\n0\n28.57%\n0.00%\n3.030000\n84,332.00\n32,668.00\n\n\nLINCOLN CHAN-HOME RANCH\n4\n2\n2\n0\n0\n0\n0\n0\n0\n50.00%\n50.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n4\n1\n3\n25.00%\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0.00%\n0.00%\n2.490000\n68,248.00\n38,950.00\n\n\nLOCKE WATER WORKS CO [SWS]\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n1\n0\n1\n0.00%\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\n38,950.00\n\n\nMAGNOLIA MUTUAL WATER\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n1\n0\n1\n0.00%\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\n38,950.00\n\n\nMC CLELLAN MHP\n269\n52\n108\n65\n0\n43\n0\n0\n2\n19.33%\n40.15%\n24.16%\n0.00%\n15.99%\n0.00%\n0.00%\n0.74%\n269\n101\n168\n37.55%\n82\n8\n2\n3\n7\n11\n2\n2\n1\n3\n1\n15\n20\n3\n0\n3\n0\n20\n19\n16\n39\n36\n3\n9\n4\n2\n25\n1\n1\n48\n34\n27\n47.56%\n36.59%\n3.280000\n60,521.00\n18,213.00\n\n\nOLYMPIA MOBILODGE\n290\n70\n81\n18\n0\n101\n16\n0\n3\n24.14%\n27.93%\n6.21%\n0.00%\n34.83%\n5.52%\n0.00%\n1.03%\n290\n68\n222\n23.45%\n114\n11\n0\n6\n10\n9\n3\n13\n0\n0\n10\n19\n8\n3\n12\n5\n5\n27\n25\n29\n52\n37\n15\n31\n22\n10\n51\n12\n10\n33\n9\n7\n37.72%\n23.68%\n2.510000\n53,786.00\n29,451.00\n\n\nORANGE VALE WATER COMPANY\n17,387\n2,658\n12,308\n241\n181\n633\n86\n35\n1,247\n15.29%\n70.79%\n1.39%\n1.04%\n3.64%\n0.49%\n0.20%\n7.17%\n17,288\n1,904\n15,384\n11.01%\n6,595\n389\n111\n61\n94\n226\n58\n274\n120\n181\n372\n752\n990\n901\n626\n678\n766\n655\n859\n1,124\n1,514\n2,114\n1,527\n3,246\n1,021\n453\n1,686\n315\n185\n1,663\n693\n305\n30.77%\n14.30%\n2.608348\n92,693.71\n42,509.89\n\n\nPLANTATION MOBILE HOME PARK\n10\n4\n1\n1\n0\n3\n0\n0\n1\n40.00%\n10.00%\n10.00%\n0.00%\n30.00%\n0.00%\n0.00%\n10.00%\n10\n2\n7\n20.00%\n3\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n0\n2\n1\n1\n33.33%\n33.33%\n2.860000\n38,491.00\n16,707.00\n\n\nRANCHO MARINA\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nRANCHO MURIETA COMMUNITY SERVI\n3,239\n661\n2,157\n120\n7\n188\n0\n38\n68\n20.41%\n66.59%\n3.70%\n0.22%\n5.80%\n0.00%\n1.17%\n2.10%\n3,239\n199\n3,040\n6.14%\n1,402\n59\n42\n0\n6\n5\n18\n74\n27\n75\n44\n81\n88\n118\n204\n241\n319\n107\n199\n125\n306\n213\n322\n1,029\n205\n103\n270\n63\n57\n103\n41\n40\n22.04%\n14.27%\n2.307704\n144,993.81\n66,451.34\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\n22\n6\n8\n4\n1\n1\n0\n1\n1\n27.27%\n36.36%\n18.18%\n4.55%\n4.55%\n0.00%\n4.55%\n4.55%\n4\n0\n4\n0.00%\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0.00%\n0.00%\n3.450000\n115,897.00\n11,095.00\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\n11,831\n2,585\n7,595\n337\n17\n765\n21\n90\n423\n21.85%\n64.20%\n2.85%\n0.14%\n6.47%\n0.18%\n0.76%\n3.58%\n11,829\n1,619\n10,210\n13.69%\n3,762\n177\n156\n67\n169\n56\n113\n116\n114\n118\n173\n297\n607\n492\n431\n416\n259\n569\n517\n470\n1,086\n1,077\n923\n1,918\n573\n157\n773\n114\n47\n1,070\n519\n340\n32.06%\n14.46%\n3.123012\n83,603.04\n33,734.49\n\n\nRIVER'S EDGE MARINA & RESORT\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\n229\n82\n17\n7\n0\n123\n0\n0\n0\n35.81%\n7.42%\n3.06%\n0.00%\n53.71%\n0.00%\n0.00%\n0.00%\n229\n110\n119\n48.03%\n89\n11\n16\n9\n10\n8\n0\n0\n4\n2\n7\n1\n13\n4\n4\n0\n0\n46\n14\n8\n60\n21\n8\n4\n2\n2\n15\n2\n0\n71\n41\n30\n50.56%\n35.96%\n2.530000\n22,380.00\n16,689.00\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\n193,126\n43,047\n97,872\n17,684\n834\n20,602\n624\n856\n11,608\n22.29%\n50.68%\n9.16%\n0.43%\n10.67%\n0.32%\n0.44%\n6.01%\n190,984\n33,399\n157,585\n17.49%\n72,505\n3,817\n3,001\n3,069\n2,884\n3,205\n3,100\n3,337\n2,893\n2,342\n5,541\n6,792\n10,037\n6,480\n4,342\n5,488\n6,177\n12,771\n14,877\n12,333\n27,648\n22,370\n10,822\n23,467\n7,204\n2,837\n12,037\n2,087\n1,160\n37,001\n21,072\n10,274\n41.88%\n19.68%\n2.635471\n73,746.51\n35,321.18\n\n\nSAN JUAN WATER DISTRICT\n30,122\n3,409\n21,349\n831\n287\n2,762\n17\n74\n1,393\n11.32%\n70.88%\n2.76%\n0.95%\n9.17%\n0.06%\n0.25%\n4.62%\n30,014\n1,718\n28,297\n5.72%\n10,750\n389\n168\n100\n275\n128\n160\n111\n133\n127\n472\n684\n984\n854\n876\n1,032\n4,256\n932\n659\n1,156\n1,591\n2,140\n1,730\n6,210\n1,754\n724\n2,883\n528\n357\n1,658\n726\n339\n27.98%\n13.21%\n2.783858\n160,696.10\n72,978.42\n\n\nSCWA - ARDEN PARK VISTA\n8,086\n990\n6,016\n270\n12\n396\n8\n52\n343\n12.24%\n74.40%\n3.34%\n0.15%\n4.90%\n0.10%\n0.64%\n4.24%\n8,038\n523\n7,515\n6.51%\n3,303\n79\n36\n48\n77\n65\n38\n18\n49\n162\n139\n187\n253\n465\n208\n416\n1,065\n240\n332\n326\n572\n579\n673\n1,823\n520\n112\n673\n76\n23\n807\n384\n225\n29.67%\n10.90%\n2.424845\n139,081.65\n84,548.46\n\n\nSCWA - LAGUNA/VINEYARD\n145,495\n27,502\n38,496\n16,568\n246\n50,411\n2,220\n535\n9,516\n18.90%\n26.46%\n11.39%\n0.17%\n34.65%\n1.53%\n0.37%\n6.54%\n145,198\n14,710\n130,489\n10.13%\n45,137\n1,692\n666\n742\n878\n839\n1,336\n850\n788\n752\n2,363\n3,198\n6,037\n5,323\n5,057\n6,578\n8,038\n3,978\n4,565\n5,561\n8,543\n11,598\n10,380\n24,581\n7,232\n2,916\n7,878\n861\n471\n12,677\n6,368\n3,337\n32.04%\n14.90%\n3.207447\n114,494.03\n41,415.71\n\n\nSCWA MATHER-SUNRISE\n18,249\n2,708\n8,114\n1,553\n23\n4,507\n164\n61\n1,119\n14.84%\n44.46%\n8.51%\n0.13%\n24.70%\n0.90%\n0.33%\n6.13%\n18,211\n1,005\n17,206\n5.52%\n5,503\n228\n35\n97\n57\n68\n39\n12\n20\n36\n189\n320\n533\n645\n755\n1,003\n1,469\n417\n175\n509\n592\n1,042\n1,400\n3,756\n881\n266\n855\n60\n43\n893\n318\n167\n22.88%\n8.65%\n3.296327\n147,818.01\n47,448.37\n\n\nSEQUOIA WATER ASSOC\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nSOUTHWEST TRACT W M D [SWS]\n174\n29\n42\n24\n3\n75\n1\n0\n0\n16.67%\n24.14%\n13.79%\n1.72%\n43.10%\n0.57%\n0.00%\n0.00%\n174\n38\n136\n21.84%\n57\n1\n2\n7\n0\n7\n0\n0\n10\n12\n3\n2\n5\n0\n1\n2\n4\n10\n29\n5\n39\n10\n1\n3\n1\n0\n8\n0\n0\n45\n29\n7\n52.63%\n12.28%\n3.040000\n45,671.00\n36,348.00\n\n\nSPINDRIFT MARINA\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nTOKAY PARK WATER CO\n652\n214\n134\n37\n0\n239\n0\n0\n28\n32.82%\n20.55%\n5.67%\n0.00%\n36.66%\n0.00%\n0.00%\n4.29%\n652\n113\n539\n17.33%\n173\n2\n2\n3\n21\n0\n0\n13\n13\n10\n18\n27\n36\n14\n4\n10\n0\n28\n36\n45\n64\n81\n18\n81\n38\n11\n44\n0\n0\n48\n32\n12\n40.46%\n13.29%\n3.757973\n62,802.24\n19,400.05\n\n\nTUNNEL TRAILER PARK\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n0\n0\nNA\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nNA\nNA\nNA\n\n\nVIEIRA'S RESORT, INC\n4\n2\n2\n0\n0\n0\n0\n0\n0\n50.00%\n50.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n4\n1\n3\n25.00%\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n1\n0\n0\n0\n0\n0\n50.00%\n0.00%\n2.030000\n51,977.00\n40,522.00\n\n\nWESTERNER MOBILE HOME PARK\n32\n6\n6\n9\n0\n10\n0\n0\n1\n18.75%\n18.75%\n28.12%\n0.00%\n31.25%\n0.00%\n0.00%\n3.12%\n31\n7\n24\n22.58%\n10\n1\n0\n0\n0\n1\n0\n0\n1\n0\n2\n1\n1\n2\n0\n1\n0\n1\n2\n3\n3\n4\n2\n4\n2\n1\n1\n0\n0\n5\n3\n2\n50.00%\n30.00%\n3.160000\n59,296.00\n23,437.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.8 Transform Results to Long Format\nFor further analysis and exploration / visualization of the results, it will help to convert the results from wide to long format, and edit the group names so that they can be used as titles.\n\n# pivot from wide to long format\nwater_system_demographics_long &lt;- water_system_demographics %&gt;% \n    # convert to long format\n    # st_drop_geometry() %&gt;% \n    pivot_longer(cols = !c(water_system_name, geometry), \n                 names_to = 'variable', \n                 values_to = 'value') %&gt;% \n    relocate(geometry, .after = last_col())\n\n# clean variable names and add grouping fields (type, group_type)\nwater_system_demographics_long &lt;- water_system_demographics_long %&gt;% \n    mutate(variable = variable %&gt;% \n               # str_remove_all(pattern = 'percent_') %&gt;% \n               str_replace_all(pattern = '_', replacement = ' ') %&gt;% \n               str_replace_all(pattern = ' or ', replacement = ' / ') %&gt;% \n               str_to_title(.) %&gt;%\n               str_remove_all(pattern = ' / Alaska Native')) %&gt;% \n    mutate(variable_type = case_when(\n        str_detect(variable, pattern = 'Count') ~ 'Count',\n        str_detect(variable, pattern = 'Percent') ~ 'Percent',\n        str_detect(variable, pattern = 'Pop Weighted') ~ 'Pop Weighted',\n        str_detect(variable, pattern = 'Hh Weighted') ~ 'Hh Weighted',\n        .default = NA), \n        .after = variable) %&gt;% \n    mutate(variable_group_type = case_when(\n        str_detect(variable, pattern ='Population') ~ \n            'Population',\n        str_detect(variable, pattern = 'Households') ~ \n            'Households',\n        str_detect(variable, pattern = 'Average Household Size Hh Weighted') ~ \n            'Household Weighted', \n        str_detect(variable, pattern = 'Median Household Income Hh Weighted') ~ \n            'Household Weighted',\n        str_detect(variable, pattern = 'Per Capita Income Pop Weighted') ~ \n            'Population Weighted',\n        str_detect(variable, pattern = 'Poverty') ~ \n            'Population'),\n        .after = variable_type) %&gt;% \n    mutate(variable = case_when(\n        str_detect(variable, pattern = 'Households Count') ~ \n            'Households Total',\n        .default = str_remove_all(variable, pattern = 'Households'))) %&gt;% \n    mutate(variable = case_when(\n        str_detect(variable, 'Population Total Count') ~ \n            'Population Total',\n        .default = str_remove_all(variable, 'Population'))) %&gt;%\n    mutate(variable = str_remove_all(variable, \n                                     pattern = 'Count')) %&gt;% \n    mutate(variable = str_remove_all(variable, \n                                     pattern = 'Percent')) %&gt;% \n    mutate(variable = str_remove_all(variable, \n                                     pattern = ' Hh Weighted')) %&gt;% \n    mutate(variable = str_remove_all(variable, \n                                     pattern = ' Pop Weighted')) %&gt;% \n    mutate(variable = str_replace_all(variable, \n                                      pattern = 'Over30pct', \n                                      replacement = 'Over 30% Income')) %&gt;% \n    mutate(variable = str_replace_all(variable, \n                                      pattern = 'Over50pct', \n                                      replacement = 'Over 50% Income')) %&gt;% \n    mutate(variable = str_trim(variable)) %&gt;%\n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'k ',\n                                      replacement = 'k-')) %&gt;%\n    mutate(variable = str_replace_all(variable,\n                                      pattern = '0 ',\n                                      replacement = '0-')) %&gt;% \n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'Black-',\n                                      replacement = 'Black ')) %&gt;% \n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'Mortgage ',\n                                      replacement = 'Mortgage - ')) %&gt;%\n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'Rent ',\n                                      replacement = 'Rent - ')) %&gt;% \n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'All ',\n                                      replacement = 'All Households - ')) %&gt;% \n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'Households Total',\n                                      replacement = 'Total Households')) %&gt;% \n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'Population Total',\n                                      replacement = 'Total Population')) %&gt;%\n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'Poverty ',\n                                      replacement = 'Poverty - ')) %&gt;%\n    mutate(variable = str_replace_all(variable,\n                                      pattern = 'Poverty - Rate',\n                                      replacement = 'Poverty Rate'))\n\nHere’s a view of the structure of the reformatted data:\n\nglimpse(water_system_demographics_long)\n\nRows: 3,596\nColumns: 6\n$ water_system_name   &lt;chr&gt; \"B & W RESORT MARINA\", \"B & W RESORT MARINA\", \"B &…\n$ variable            &lt;chr&gt; \"Total Population\", \"Hispanic / Latino\", \"White\", …\n$ variable_type       &lt;chr&gt; \"Count\", \"Count\", \"Count\", \"Count\", \"Count\", \"Coun…\n$ variable_group_type &lt;chr&gt; \"Population\", \"Population\", \"Population\", \"Populat…\n$ value               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, NA, NA, NA, NA, NA, NA,…\n$ geometry            &lt;POLYGON [m]&gt; POLYGON ((-138282.2 13643.2..., POLYGON ((…\n\n\n\n\n6.9 Clean & Format Intermediate (Clipped) Calculation Data\nFor visualization and exploration, it may also be useful to apply some additional formatting to the clipped block-group data used in intermediate parts of the interpolation process above.\n\n# portion of households paying more than 30% / 50% of income on housing\ncensus_data_interpolate &lt;- census_data_interpolate %&gt;%      \n    mutate(households_all_housing_costs_over30pct_percent = \n               100 * (households_mortgage_housing_costs_over30pct_count + \n                          households_no_mortgage_housing_costs_over30pct_count +                           \n                          households_rent_housing_costs_over30pct_count) / \n               households_count, \n           .after = households_rent_housing_costs_over50pct_count) %&gt;%      \n    mutate(households_all_housing_costs_over50pct_percent = \n               100 * (households_mortgage_housing_costs_over50pct_count +                            \n                          households_no_mortgage_housing_costs_over50pct_count +                           \n                          households_rent_housing_costs_over50pct_count) / \n               households_count,\n           .after = households_all_housing_costs_over30pct_percent)\n\n# drop water system data except name (water_system_name)\ncensus_data_interpolate &lt;- census_data_interpolate %&gt;% \n    select(-census_unit_area, -clipped_area) %&gt;% \n    select(-c(water_system_number:water_system_population_reported)) %&gt;% \n    select(-c(average_household_size_weighted:per_capita_income_weighted)) %&gt;% \n    relocate(water_system_name, .after = NAME) %&gt;% \n    relocate(areal_weight_factor, .after = water_system_name)\n\nWe can also convert this data to long format to use when exploring / visualizing the results.\n\ncensus_data_interpolate_long &lt;- census_data_interpolate %&gt;% \n    pivot_longer(cols = !c(GEOID, NAME, water_system_name, \n                           areal_weight_factor, geometry), \n                 names_to = 'variable', \n                 values_to = 'value') %&gt;% \n    relocate(geometry, .after = last_col())\n\n\n\n6.10 Save Results\nThis section saves the results to output files so they can be re-used and shared. The results can be saved in tabular (e.g., csv, excel) and/or spatial (e.g., shapefile, geopackage) formats, which may be helpful for different use cases.\nThe files saved below are all available here.\nThe chunk of code below (which is hidden by default), just tests to see whether any of the datasets to be saved have been changed since the previous version was saved. In general this is probably not needed for a typical workflow and can be ignored for most use cases – it is just used here to make rendering of this document a little more efficient.\n\n\nCode\n# compute hash for datasets to be saved (i.e., a unique identifier for each dataset), and compare against previous versions\n\n## define file that stores hash (unique identifier for dataset)\nhash_file &lt;- here('03_data_results',\n                  '_dataset_hash.csv')\n\n## compute hashes (unique identifier for datasets)\nhash_current &lt;- digest(object = water_system_demographics,\n                       algo = 'md5')\nhash_current_long &lt;- digest(object = water_system_demographics_long,\n                            algo = 'md5')\nhash_interpolate &lt;- digest(object = census_data_interpolate,\n                           algo = 'md5')\nhash_interpolate_long &lt;- digest(object = census_data_interpolate_long, \n                                algo = 'md5')\nhash_table_current &lt;- tibble(\n    dataset = c('water_system_demographics', \n                'water_system_demographics_long',\n                'census_data_interpolate',\n                'census_data_interpolate_long'),\n    hash = c(hash_current, \n             hash_current_long,\n             hash_interpolate,\n             hash_interpolate_long))\n\n## get the previous hashes from file (if it exists), else create a new file to store the hashes\nif (file.exists(hash_file)) {\n    hash_table_previous &lt;- read_csv(file = hash_file)\n} else {\n    file.create(hash_file)\n    hash_table_previous &lt;- tibble(\n        dataset = c('water_system_demographics', \n                    'water_system_demographics_long',\n                    'census_data_interpolate',\n                    'census_data_interpolate_long'),\n        hash = c('missing', \n                 'missing',\n                 'missing', \n                 'missing'))\n}\n\n## if new hash is different from previous hash, set flag to update the output file (i.e., write a new version of the file)\nfile_update &lt;- !identical(hash_table_current %&gt;% \n                              filter(dataset == 'water_system_demographics') %&gt;% \n                              pull(hash),\n                          hash_table_previous %&gt;% \n                              filter(dataset == 'water_system_demographics') %&gt;% \n                              pull(hash))\nfile_update_long &lt;- !identical(hash_table_current %&gt;% \n                                   filter(dataset == 'water_system_demographics_long') %&gt;% \n                                   pull(hash),\n                               hash_table_previous %&gt;% \n                                   filter(dataset == 'water_system_demographics_long') %&gt;% \n                                   pull(hash))\nfile_update_interpolate &lt;- !identical(hash_table_current %&gt;% \n                                          filter(dataset == 'census_data_interpolate') %&gt;% \n                                          pull(hash),\n                                      hash_table_previous %&gt;% \n                                          filter(dataset == 'census_data_interpolate') %&gt;% \n                                          pull(hash))\nfile_update_interpolate_long &lt;- !identical(hash_table_current %&gt;% \n                                               filter(dataset == 'census_data_interpolate_long') %&gt;% \n                                               pull(hash),\n                                           hash_table_previous %&gt;% \n                                               filter(dataset == 'census_data_interpolate_long') %&gt;% \n                                               pull(hash))\n\n## write current hashes to file (for comparison with future versions)\nwrite_csv(x = hash_table_current,\n          file = hash_file,\n          append = FALSE)\n\n\n\n6.10.1 Save Tabular Dataset\nThe code below saves the tabular results to a csv file, in both the ‘wide’ and ‘long’ formats. The wide format data can also be viewed here, or downloaded with this link. The long format data can be viewed here, or downloaded with this link.\n\n# wide\nif (file_update == TRUE) {\n    write_csv(water_system_demographics %&gt;%\n                  st_drop_geometry(), # drop spatial data \n              file = here('03_data_results',\n                          'water_system_demographics_sac.csv'))\n}\n\n# long\nif (file_update_long == TRUE) {\n    write_csv(water_system_demographics_long %&gt;%\n                  st_drop_geometry(), # drop spatial data\n              file = here('03_data_results',\n                          'water_system_demographics_sac_long.csv'))\n}\n\nAnd we can save the intermediate data from the interpolation process (i.e., data for clipped block groups) in wide and long format – these files can be downloaded with this link and this link respectively.\n\n# wide\nif (file_update_interpolate == TRUE) {\n    write_csv(census_data_interpolate %&gt;%\n                  st_drop_geometry(), # drop the spatial data \n              file = here('03_data_results',\n                          'intermediate_interpolation_data.csv'))\n}\n\n# long\nif (file_update_interpolate_long == TRUE) {\n    write_csv(census_data_interpolate_long %&gt;%\n                  st_drop_geometry(), # drop the spatial data \n              file = here('03_data_results',\n                          'intermediate_interpolation_data_long.csv'))\n}\n\n\n\n6.10.2 Save Spatial Dataset\nTo save the output in a geospatial format, it may be best to save the data in a wide format, so that all of the attribute data for each target area (water system) is in a single row along with its spatial data (i.e. the system boundary information) (saving in long format may create a very large file). The code below saves the results – in wide format – to a geopackage file, which is a spatial file format that is similar to a shapefile. The final water system demographic data is available to downloaded with this link, and the data from the intermediate calculations (for clipped block groups) is available to download with this link.\n\nif (file_update == TRUE) {\n    st_write(water_system_demographics,\n             here('03_data_results',\n                  'water_system_demographics_sac.gpkg'),\n             append = FALSE)\n}\n\nif (file_update_interpolate == TRUE) {\n    st_write(census_data_interpolate,\n             here('03_data_results',\n                  'intermediate_interpolation_data.gpkg'),\n             append = FALSE)\n}"
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-results-explore",
    "href": "example_census_race_ethnicity_calculation.html#sec-results-explore",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "7 Explore and Visualize Results",
    "text": "7 Explore and Visualize Results\n\n\n\n\n\n\nWarning\n\n\n\nThis section is in progress.\n\n\nThis section presents some visualizations of the estimated water system demographics computed above. However, for the most part, identical visualizations could be produced for results from any of the methods described below in Section 9 (or other methods not described in this document) by replacing the water_system_demographics or water_system_demographics_long objects with the results from those methods.\nThe map in Figure 5 below shows a summary of all of the estimated demographic variables for each water system:\n[TODO: Insert Shiny App (iframe)]\n\n\n\n\n\n\nFigure 5: Estimated demographics calculated using 2022 ACS 5-year data.\n\n\n\nFor simplicity, the remaining parts of this section will focus on presenting estimated demographics for some of the largest water suppliers in the Sacramento county region (results for small water systems may not be very accurate and should be used with some caution - see Section 8.2 and Section 11 for more investigation of the results for small systems).\n\n# Select systems to plot\n\n## number of systems\nn_systems &lt;- 20\n\n## get list of selected systems\nsystems_top_n &lt;- water_system_demographics %&gt;% \n    slice_max(population_total_count, n = n_systems) %&gt;% \n    pull(water_system_name)\n\n\n7.1 Race / Ethnicity\n[placeholder]\n\npercent by group (bar)\ndot-density\nmap (% non-white?)\n\n\n\n7.2 Income Distributions\n[placeholder]\n\nincome brackets (50k) (bar)\nmedian household income by block group (dots)\ndot-density (below threshold value)\nmap\n\n\n\n7.3 Poverty Rates\n[placeholder]\n\ndot plot\nmap\nside-by-side map\n\n\n\n7.4 Income & Relative Housing Costs\nThe biscale R package (Prener, Grossenbacher, and Zehr 2022) can be used to create maps that show how two metrics vary together spatially (bivariate choropleth maps).\nFigure 6 shows the relationship between estimated income and relative housing costs for the top 20 systems by estimated population in Sacramento County.\n\n\nCode\n# Table B25140 - Housing Costs as a Percentage of Household Income in the past 12 months.\n# Shows the count of households paying more than 30% or 50% of their income towards housing \n# costs broken out by three tenure categories (owned with a mortgage, owned without a mortgage, and rented).\n\n# set defaults\nbiscale_pal &lt;- 'BlueOr' # 'GrPink' # 'DkViolet2'\nbiscale_dim &lt;- 3\n\n# create classes\nbiscale_data &lt;- bi_class(water_system_demographics %&gt;% \n                             filter(water_system_name %in% systems_top_n) %&gt;% \n                             filter(!is.na(median_household_income_hh_weighted)), \n                         x = households_all_housing_costs_over30pct_percent, \n                         y = median_household_income_hh_weighted, \n                         style = \"quantile\", \n                         dim = biscale_dim)\n\n# create map\nbiscale_map &lt;- ggplot() +\n    geom_sf(data = biscale_data, \n            mapping = aes(fill = bi_class), \n            color = \"white\", \n            size = 0.1, \n            show.legend = FALSE) +\n    bi_scale_fill(pal = biscale_pal, \n                  dim = biscale_dim) + \n    labs(\n        title = \"Estimated % of Households Paying More Than 30% of Income Towards Housing Costs \\nand Estimated Median Household Income in Sacramento Water Systems\",\n        subtitle = glue(\"Top {n_systems} Water Systems by Population\"),\n        caption = glue(\"Data estimated from {acs_year} 5-year ACS Block Groups\")\n        # title = \"Estimated Housing Cost as % of Household Income and \\nEstimated Median Household Income in Sacramento Water Systems\", \n        # caption = \"% Housing cost shows the percent of households paying more than 30% of their income towards housing costs \\nIncome shows median household income (yellow = missing)\"\n    ) +\n    #   labs(\n    #   title = \"Housing Cost&lt;sup&gt;1&lt;/sup&gt; and Income&lt;sup&gt;2&lt;/sup&gt; in Sacramento Water Systems\",\n    #   caption = \"&lt;sup&gt;1&lt;/sup&gt;% of households paying more than 30% of their income towards housing costs&lt;br&gt;&lt;sup&gt;2&lt;/sup&gt;Median household income (yellow = missing)\",\n    #   subtitle = glue(\"Top {n_systems} systems by population\")\n    # ) +\n    # add missing polygons back in\n    geom_sf(data = water_system_demographics %&gt;% \n                filter(water_system_name %in% systems_top_n) %&gt;% \n                filter(is.na(median_household_income_hh_weighted)),\n            color = \"white\",\n            fill = 'gold'\n    ) +\n    geom_sf(data = counties_ca %&gt;% filter(NAME == 'Sacramento'), \n            color = 'grey',\n            fill = NA) +\n    bi_theme() + \n    theme(plot.title = element_text(size=12), # element_markdown(size=12)\n          plot.subtitle = element_text(size=10),\n          plot.caption = element_text(size=8, hjust = 1)) # element_markdown(size=8, hjust = 1))\n\n# create legend\nbiscale_legend &lt;- bi_legend(pal = biscale_pal,\n                            dim = biscale_dim,\n                            xlab = \"% Housing Costs \",\n                            ylab = \"Income \",\n                            size = 8)\n\n# construct map\nbiscale_plot &lt;- ggdraw() +\n    draw_plot(biscale_map, 0, 0, 1, 1) +\n    draw_plot(biscale_legend, 0.1, .65, 0.2, 0.2)\n\nbiscale_plot\n\n\n\n\n\n\n\n\nFigure 6\n\n\n\n\n\nFigure 7 shows the same variables (relative housing costs and income) for the portions block groups overlapping Sacramento Suburban Water District – this illustrates the data underlying the interpolation process.\n\n\nCode\n# set defaults\nbiscale_pal_system &lt;- 'BlueOr' # 'GrPink' # 'DkViolet2'\nbiscale_dim_system &lt;- 3\n\n# create classes\nbiscale_data_system &lt;- bi_class(census_data_interpolate %&gt;% \n                                    filter(water_system_name == system_plot) %&gt;% \n                                    filter(!is.na(median_household_income)), \n                                x = households_all_housing_costs_over30pct_percent, \n                                y = median_household_income, \n                                style = \"quantile\", \n                                dim = biscale_dim_system)\n# create map\nbiscale_map_system  &lt;- ggplot() +\n    geom_sf(data = biscale_data_system , \n            mapping = aes(fill = bi_class), \n            color = \"white\", \n            size = 0.1, \n            show.legend = FALSE) +\n    bi_scale_fill(pal = biscale_pal_system, \n                  dim = biscale_dim_system) + \n    labs(\n        title = glue(\"Estimated % of Households Paying More Than 30% of Income Towards Housing Costs \\nand Estimated Median Household Income in {str_to_title(system_plot)}\"),\n        # subtitle = glue(\"\"),\n        caption = glue(\"Data from {acs_year} 5-year ACS Block Groups (Yellow = Missing Data)\")#,\n        # title = glue(\"Housing Cost and Income \\nin {str_to_title(system_plot)}\"), \n        # caption = \"% Housing cost shows the percent of households paying more than 30% of their income towards housing costs \\nIncome shows median household income (yellow = missing)\"#,\n    ) +\n    # add the missing polygons back in\n    geom_sf(data = census_data_interpolate %&gt;% \n                filter(water_system_name == system_plot) %&gt;% \n                filter(is.na(median_household_income)),\n            color = \"white\",\n            fill = 'gold'\n    ) +\n    bi_theme() + \n    theme(plot.title = element_text(size=12), # element_markdown(size=12)\n          plot.subtitle = element_text(size=10),\n          plot.caption = element_text(size=8, hjust = 1)) # element_markdown(size=8, hjust = 1))\n\n# create legend\nbiscale_legend &lt;- bi_legend(pal = biscale_pal_system,\n                            dim = biscale_dim_system,\n                            xlab = \"% Housing Costs \",\n                            ylab = \"Income \",\n                            size = 8)\n\n# construct map\nbiscale_plot_system &lt;- ggdraw() +\n    draw_plot(biscale_map_system, 0, 0, 1, 1) +\n    draw_plot(biscale_legend, 0.1, .55, 0.2, 0.2)\n\nbiscale_plot_system\n\n\n\n\n\n\n\n\nFigure 7"
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-check-validate",
    "href": "example_census_race_ethnicity_calculation.html#sec-check-validate",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "8 Check / Validate Results",
    "text": "8 Check / Validate Results\nWe can apply a few additional checks to verify whether or not the calculations above are correct and/or whether the results are reasonable.\n\n8.1 Check Count Variables Estimated with Areal Interpolation\nAs noted above, it’s possible to use pre-built functions for areal interpolation, and we can use those to double check the calculated count data above. For example, we can use the st_interpolate_aw function from the sf package (see Section 10 for use of a similar function from the areal R package):\n\n# NOTE: it's only necessary to check the estimated values for one variable - \n# this just checks the total estimated population\n\n# interpolate with sf package\ncheck_sf &lt;- st_interpolate_aw(x = census_data_acs %&gt;% \n                                  select(population_total_count),\n                              to = water_systems_sac,\n                              extensive = TRUE) %&gt;% \n    bind_cols(water_systems_sac %&gt;% st_drop_geometry)\n\n# extract population estimates from sf package\npop_est_sf &lt;- check_sf %&gt;% \n        arrange(water_system_name) %&gt;% \n        pull(population_total_count) %&gt;% \n        round(0)\n\n# extract population estimates from process above\npop_est_manual &lt;- water_system_demographics %&gt;% \n        arrange(water_system_name) %&gt;% \n        pull(population_total_count) %&gt;% \n        round(0)\n\n# compare - should be TRUE if results are equivalent\nall(pop_est_sf == pop_est_manual)\n\n[1] TRUE\n\n\n\n\n8.2 Compare Estimated vs Reported Population Estimates\n[TO DO: Create map]\nBased on the map above, it’s apparent that it’s likely difficult to obtain reasonable estimates for some suppliers, such as the suppliers with very small service areas in the southern portion of the county where the block groups are very large (and the supplier’s service are is only a small fraction of the total area of the block group). These issues are explored further in Section 11.\nNote that there are a number of reasons why the estimated population values are likely to differ from the population numbers in the water system dataset (e.g., the depicted boundaries may not be correct or exact, the supplier may have used different methods to count/estimate the population they serve, the time frames for the estimates may be different, etc.). But, there may also be some cases where the numbers differ significantly – depending on the actual analysis being performed, this may mean that further work is needed for certain areas, or could mean that this method may not be sufficient and different methods are needed.\nAs a check, we can add a column to the interpolated dataset (which we’ll call population_percent_difference) to compute the difference between the estimated total population (in the population_total field) and the total population listed in the water_system_population_reported field (which is the reported value from the water system dataset).\n\nwater_system_demographics_check &lt;- water_system_demographics %&gt;% \n    left_join(water_systems_sac %&gt;% \n                  st_drop_geometry() %&gt;% \n                  select(water_system_name, water_system_population_reported,\n                         water_system_service_connections),\n              by = 'water_system_name')\n\nwater_system_demographics_check &lt;- water_system_demographics_check %&gt;%\n    mutate(population_percent_difference =\n               round(100 * (population_total_count - water_system_population_reported) / \n                         water_system_population_reported, \n                     2), \n           .after = water_system_population_reported)\n\nFor larger water systems, the estimated population values seem to be roughly in line with the population numbers in the original dataset– you can see this in the upper rows of Table 2.\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_demographics_check %&gt;%\n    st_drop_geometry() %&gt;%\n    arrange(desc(water_system_population_reported)) %&gt;%\n    select(water_system_name, \n           water_system_service_connections,\n           water_system_population_reported, \n           population_total_count,\n           population_percent_difference,\n           ) %&gt;%\n    mutate(population_percent_difference = pct_format(\n        population_percent_difference / 100)) %&gt;%\n    rename('Water System Name' = water_system_name, \n           'Service Connections' = water_system_service_connections,\n           'Estimated Population' = population_total_count,\n           'Reported Population' = water_system_population_reported,\n           'Percent Difference' = population_percent_difference,\n           ) %&gt;%\n    kable(align = 'c', \n          format.args = list(big.mark = ',')\n          ) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 2: Water Systems Sorted by Reported Population (Largest to Smallest)\n\n\n\n\n\n\n\n\nWater System Name\nService Connections\nReported Population\nEstimated Population\nPercent Difference\n\n\n\n\nCITY OF SACRAMENTO MAIN\n142,794\n510,931\n516,189\n1.03%\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\n46,573\n184,385\n193,126\n4.74%\n\n\nSCWA - LAGUNA/VINEYARD\n47,411\n172,666\n145,495\n-15.74%\n\n\nFOLSOM, CITY OF - MAIN\n21,424\n68,122\n62,462\n-8.31%\n\n\nCITRUS HEIGHTS WATER DISTRICT\n19,940\n65,911\n68,912\n4.55%\n\n\nCALAM - SUBURBAN ROSEMONT\n16,238\n53,563\n57,897\n8.09%\n\n\nCALAM - PARKWAY\n14,779\n48,738\n58,635\n20.31%\n\n\nCALAM - LINCOLN OAKS\n14,390\n47,487\n42,916\n-9.63%\n\n\nGOLDEN STATE WATER CO. - CORDOVA\n14,798\n44,928\n48,115\n7.09%\n\n\nELK GROVE WATER SERVICE\n12,882\n42,540\n42,647\n0.25%\n\n\nCARMICHAEL WATER DISTRICT\n11,704\n37,897\n39,253\n3.58%\n\n\nFAIR OAKS WATER DISTRICT\n14,293\n35,114\n36,003\n2.53%\n\n\nCALAM - ANTELOPE\n10,528\n34,720\n33,120\n-4.61%\n\n\nSAN JUAN WATER DISTRICT\n10,672\n29,641\n30,122\n1.62%\n\n\nGALT, CITY OF\n7,471\n26,536\n21,490\n-19.02%\n\n\nSCWA MATHER-SUNRISE\n6,921\n22,839\n18,249\n-20.10%\n\n\nORANGE VALE WATER COMPANY\n5,684\n18,005\n17,387\n-3.43%\n\n\nCAL AM FRUITRIDGE VISTA\n4,667\n15,385\n22,603\n46.92%\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\n4,621\n14,381\n11,831\n-17.73%\n\n\nSCWA - ARDEN PARK VISTA\n3,043\n10,035\n8,086\n-19.42%\n\n\nFOLSOM STATE PRISON\n2,790\n9,703\n3,536\n-63.56%\n\n\nFLORIN COUNTY WATER DISTRICT\n2,323\n7,831\n9,951\n27.07%\n\n\nRANCHO MURIETA COMMUNITY SERVI\n2,726\n5,744\n3,239\n-43.61%\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\n1,716\n5,125\n6,556\n27.92%\n\n\nDEL PASO MANOR COUNTY WATER DI\n1,796\n4,520\n5,592\n23.72%\n\n\nCALAM - ARDEN\n1,185\n3,908\n10,112\n158.75%\n\n\nFOLSOM, CITY OF - ASHLAND\n1,079\n3,538\n3,845\n8.68%\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\n13\n2,800\n22\n-99.21%\n\n\nCALAM - ISLETON\n480\n1,581\n34\n-97.85%\n\n\nMC CLELLAN MHP\n199\n700\n269\n-61.57%\n\n\nCALAM - WALNUT GROVE\n197\n651\n12\n-98.16%\n\n\nCALIFORNIA STATE FAIR\n269\n650\n532\n-18.15%\n\n\nTOKAY PARK WATER CO\n198\n525\n652\n24.19%\n\n\nLAGUNA DEL SOL INC\n112\n470\n24\n-94.89%\n\n\nOLYMPIA MOBILODGE\n200\n450\n290\n-35.56%\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\n164\n350\n229\n-34.57%\n\n\nEAST WALNUT GROVE [SWS]\n166\n300\n3\n-99.00%\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\n136\n262\n233\n-11.07%\n\n\nEL DORADO MOBILE HOME PARK\n128\n256\n139\n-45.70%\n\n\nRANCHO MARINA\n77\n250\n0\n-100.00%\n\n\nHOLIDAY MOBILE VILLAGE\n115\n200\n46\n-77.00%\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\n186\n200\n209\n4.50%\n\n\nEL DORADO WEST MHP\n128\n172\n148\n-13.95%\n\n\nKORTHS PIRATES LAIR\n64\n150\n0\n-100.00%\n\n\nRIVER'S EDGE MARINA & RESORT\n83\n150\n0\n-100.00%\n\n\nSOUTHWEST TRACT W M D [SWS]\n33\n150\n174\n16.00%\n\n\nVIEIRA'S RESORT, INC\n107\n150\n4\n-97.33%\n\n\nB & W RESORT MARINA\n37\n100\n0\n-100.00%\n\n\nHOOD WATER MAINTENCE DIST [SWS]\n82\n100\n1\n-99.00%\n\n\nSPINDRIFT MARINA\n50\n100\n0\n-100.00%\n\n\nLOCKE WATER WORKS CO [SWS]\n44\n80\n1\n-98.75%\n\n\nWESTERNER MOBILE HOME PARK\n49\n65\n32\n-50.77%\n\n\nHAPPY HARBOR (SWS)\n45\n60\n0\n-100.00%\n\n\nSEQUOIA WATER ASSOC\n18\n54\n0\n-100.00%\n\n\nPLANTATION MOBILE HOME PARK\n44\n44\n10\n-77.27%\n\n\nTUNNEL TRAILER PARK\n21\n44\n0\n-100.00%\n\n\nFREEPORT MARINA\n27\n42\n3\n-92.86%\n\n\nEDGEWATER MOBILE HOME PARK\n22\n40\n0\n-100.00%\n\n\nMAGNOLIA MUTUAL WATER\n34\n40\n1\n-97.50%\n\n\nLINCOLN CHAN-HOME RANCH\n19\n33\n4\n-87.88%\n\n\nLAGUNA VILLAGE RV PARK\n28\n32\n20\n-37.50%\n\n\nDELTA CROSSING MHP\n22\n30\n0\n-100.00%\n\n\n\n\n\n\n\n\n\n\n\nBut for water systems with a small population and/or service area, the estimated demographics may not match the reported population numbers from the water system dataset very well – you can see this in the top rows of Table 3. This probably indicates that, for small areas, some adjustments and/or further analysis may be needed, and the preliminary estimated values should be treated with some caution/skepticism.\nNote: See Section 11 below for some more investigation into water systems whose estimated population is at or near zero.\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_demographics_check %&gt;%\n    st_drop_geometry() %&gt;%\n    arrange(water_system_population_reported) %&gt;%\n    select(water_system_name, \n           water_system_service_connections,\n           water_system_population_reported, \n           population_total_count,\n           population_percent_difference,\n           ) %&gt;%\n    mutate(population_percent_difference = pct_format(population_percent_difference / 100)) %&gt;%\n    rename('Water System Name' = water_system_name, \n           'Service Connections' = water_system_service_connections,\n           'Estimated Population' = population_total_count,\n           'Reported Population' = water_system_population_reported,\n           'Percent Difference' = population_percent_difference,\n           ) %&gt;%\n    kable(align = 'c', \n          format.args = list(big.mark = ',')\n          ) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 3: Water Systems Sorted by Reported Population (Smallest to Largest)\n\n\n\n\n\n\n\n\nWater System Name\nService Connections\nReported Population\nEstimated Population\nPercent Difference\n\n\n\n\nDELTA CROSSING MHP\n22\n30\n0\n-100.00%\n\n\nLAGUNA VILLAGE RV PARK\n28\n32\n20\n-37.50%\n\n\nLINCOLN CHAN-HOME RANCH\n19\n33\n4\n-87.88%\n\n\nEDGEWATER MOBILE HOME PARK\n22\n40\n0\n-100.00%\n\n\nMAGNOLIA MUTUAL WATER\n34\n40\n1\n-97.50%\n\n\nFREEPORT MARINA\n27\n42\n3\n-92.86%\n\n\nPLANTATION MOBILE HOME PARK\n44\n44\n10\n-77.27%\n\n\nTUNNEL TRAILER PARK\n21\n44\n0\n-100.00%\n\n\nSEQUOIA WATER ASSOC\n18\n54\n0\n-100.00%\n\n\nHAPPY HARBOR (SWS)\n45\n60\n0\n-100.00%\n\n\nWESTERNER MOBILE HOME PARK\n49\n65\n32\n-50.77%\n\n\nLOCKE WATER WORKS CO [SWS]\n44\n80\n1\n-98.75%\n\n\nB & W RESORT MARINA\n37\n100\n0\n-100.00%\n\n\nHOOD WATER MAINTENCE DIST [SWS]\n82\n100\n1\n-99.00%\n\n\nSPINDRIFT MARINA\n50\n100\n0\n-100.00%\n\n\nKORTHS PIRATES LAIR\n64\n150\n0\n-100.00%\n\n\nRIVER'S EDGE MARINA & RESORT\n83\n150\n0\n-100.00%\n\n\nSOUTHWEST TRACT W M D [SWS]\n33\n150\n174\n16.00%\n\n\nVIEIRA'S RESORT, INC\n107\n150\n4\n-97.33%\n\n\nEL DORADO WEST MHP\n128\n172\n148\n-13.95%\n\n\nHOLIDAY MOBILE VILLAGE\n115\n200\n46\n-77.00%\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\n186\n200\n209\n4.50%\n\n\nRANCHO MARINA\n77\n250\n0\n-100.00%\n\n\nEL DORADO MOBILE HOME PARK\n128\n256\n139\n-45.70%\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\n136\n262\n233\n-11.07%\n\n\nEAST WALNUT GROVE [SWS]\n166\n300\n3\n-99.00%\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\n164\n350\n229\n-34.57%\n\n\nOLYMPIA MOBILODGE\n200\n450\n290\n-35.56%\n\n\nLAGUNA DEL SOL INC\n112\n470\n24\n-94.89%\n\n\nTOKAY PARK WATER CO\n198\n525\n652\n24.19%\n\n\nCALIFORNIA STATE FAIR\n269\n650\n532\n-18.15%\n\n\nCALAM - WALNUT GROVE\n197\n651\n12\n-98.16%\n\n\nMC CLELLAN MHP\n199\n700\n269\n-61.57%\n\n\nCALAM - ISLETON\n480\n1,581\n34\n-97.85%\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\n13\n2,800\n22\n-99.21%\n\n\nFOLSOM, CITY OF - ASHLAND\n1,079\n3,538\n3,845\n8.68%\n\n\nCALAM - ARDEN\n1,185\n3,908\n10,112\n158.75%\n\n\nDEL PASO MANOR COUNTY WATER DI\n1,796\n4,520\n5,592\n23.72%\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\n1,716\n5,125\n6,556\n27.92%\n\n\nRANCHO MURIETA COMMUNITY SERVI\n2,726\n5,744\n3,239\n-43.61%\n\n\nFLORIN COUNTY WATER DISTRICT\n2,323\n7,831\n9,951\n27.07%\n\n\nFOLSOM STATE PRISON\n2,790\n9,703\n3,536\n-63.56%\n\n\nSCWA - ARDEN PARK VISTA\n3,043\n10,035\n8,086\n-19.42%\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\n4,621\n14,381\n11,831\n-17.73%\n\n\nCAL AM FRUITRIDGE VISTA\n4,667\n15,385\n22,603\n46.92%\n\n\nORANGE VALE WATER COMPANY\n5,684\n18,005\n17,387\n-3.43%\n\n\nSCWA MATHER-SUNRISE\n6,921\n22,839\n18,249\n-20.10%\n\n\nGALT, CITY OF\n7,471\n26,536\n21,490\n-19.02%\n\n\nSAN JUAN WATER DISTRICT\n10,672\n29,641\n30,122\n1.62%\n\n\nCALAM - ANTELOPE\n10,528\n34,720\n33,120\n-4.61%\n\n\nFAIR OAKS WATER DISTRICT\n14,293\n35,114\n36,003\n2.53%\n\n\nCARMICHAEL WATER DISTRICT\n11,704\n37,897\n39,253\n3.58%\n\n\nELK GROVE WATER SERVICE\n12,882\n42,540\n42,647\n0.25%\n\n\nGOLDEN STATE WATER CO. - CORDOVA\n14,798\n44,928\n48,115\n7.09%\n\n\nCALAM - LINCOLN OAKS\n14,390\n47,487\n42,916\n-9.63%\n\n\nCALAM - PARKWAY\n14,779\n48,738\n58,635\n20.31%\n\n\nCALAM - SUBURBAN ROSEMONT\n16,238\n53,563\n57,897\n8.09%\n\n\nCITRUS HEIGHTS WATER DISTRICT\n19,940\n65,911\n68,912\n4.55%\n\n\nFOLSOM, CITY OF - MAIN\n21,424\n68,122\n62,462\n-8.31%\n\n\nSCWA - LAGUNA/VINEYARD\n47,411\n172,666\n145,495\n-15.74%\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\n46,573\n184,385\n193,126\n4.74%\n\n\nCITY OF SACRAMENTO MAIN\n142,794\n510,931\n516,189\n1.03%"
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-alternative-methods",
    "href": "example_census_race_ethnicity_calculation.html#sec-alternative-methods",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "9 Alternative Computation Methods",
    "text": "9 Alternative Computation Methods\nAs noted above in Section 6.1, in addition to the method described above, there are other methods that could be applied to estimate demographics of target areas (like water systems) from census data. Different methods may have their own strengths / weaknesses and applicable use cases. This section covers some other potential methods (but is not an exhaustive / comprehensive list of alternatives).\n\n9.1 Simplified Method With MOE Estimates\n\n\n\n\n\n\nWarning\n\n\n\nThis section is in progress.\n\n\nAs noted above, determining the margin of error (MOE) for estimates computed using areal weighted interpolation to aggregate portions of census units that overlap the target area of interest may not be possible (more research may be needed). If it’s necessary to compute MOEs for your aggregated values, and/or it’s preferable to use a simpler approach that doesn’t apply areal interpolation to assign fractional portions of census units to the target area, then a simplified method could be applied.\n\n\n\n\n\n\nTip\n\n\n\nFor guidance on how calculate MOEs for some types of derived estimates, see this document.\ntidycensus has functions for calculating MOEs for derived estimates based on Census-supplied formulas, including moe_sum(), moe_product(), moe_ratio(), and moe_prop().\n\n\nIn this case, one option could be to use a minimum coverage threshold, where entire census units whose portion of area that overlaps the target area is greater than the threshold are treated as part of the target area, and any census units whose portion of area that overlaps the target area is less than the threshold are not treated as part of the target area (the threshold can be set to zero to use all census units that overlap the target area). But, when using a minimum coverage threshold, some water systems may not have any census units that meet the coverage threshold, so they may need to be accounted for separately (e.g., by selecting the overlapping census unit that has the greatest portion of overlap, as is done below), or those systems could be excluded from the calculation.\n\n\n\n\n\n\nWarning\n\n\n\nFor small / medium sized target areas (small water systems), count data estimated using this method may be highly unreliable (since entire census units are used). In those cases, it’s likely that only the estimated rates / percentages may be useful, but it may be worth considering whether it’s worth making any estimates for those systems based on census data alone. See Section 9.1.2 and Section 11 for some further exploration of the issues when dealing with estimates for small areas from census data alone.\n\n\nBecause this approach operates on entire census units, the census bureau’s recommended approach for aggregating MOEs can be applied to produce an aggregated MOE. (However, keep in mind that the aggregated MOE applies to the uncertainty in the estimate for the census units included in the aggregation, and not may not necessarily capture the uncertainty in the estimate of the target area, since the two areas are now different – i.e., there is an additional un-quantified element of uncertainty/error which is not reflected in the MOE due to this mismatch. In general, any estimate which attempts to compute census demographics for areas that don’t align with the census boundaries may have some element of un-quantifiable error – more research/input may be needed.)\n\n9.1.1 Compute Demographic Estimates\nHere’s an example calculation.\n\n9.1.1.1 Filter Census Units\nFirst, determine which census units to include in the calculations:\n\n# define threshold value - \n## set to zero to use all census units that overlap the target area, set higher \n## to require a larger % of any given census unit to overlap the target area to \n## be included in estimates (e.g. 0.5 requires at least 50% of a census unit to \n## overlap a water system to be included in the calculation for that water system)\noverlap_threshold &lt;- 0.5\n\n# get census data (with MOEs) ----\ncensus_data_acs_moe &lt;- get_acs(geography = 'block group',\n                               state = 'CA', \n                               county = counties_list,\n                               filter_by = water_systems_filter,\n                               year = acs_year,\n                               survey = 'acs5',\n                               variables = census_vars_acs, \n                               output = 'wide', # can be 'wide' or 'tidy'\n                               geometry = TRUE,\n                               cache_table = TRUE) %&gt;% \n    st_transform(crs_projected) # convert to common coordinate system\n\n# compute area of overlap for each census unit / water system ----\ncensus_unit_overlap_simplified &lt;- census_data_acs_moe %&gt;%\n    mutate(census_unit_area = st_area(.)) %&gt;% \n    st_intersection(water_systems_sac %&gt;% \n                        select(water_system_name)) %&gt;%\n    mutate(clipped_area = st_area(.)) %&gt;% \n    mutate(overlap_portion = drop_units(clipped_area / census_unit_area)) %&gt;% \n    mutate(geoid_system = paste(GEOID, water_system_name, sep = '|')) %&gt;% \n    st_drop_geometry()\n\n# determine which census units to include, based on threshold value ----\ncensus_unit_overlap_simplified &lt;- census_unit_overlap_simplified %&gt;% \n    mutate(above_threshold = overlap_portion &gt;= overlap_threshold)\n\n# account for water systems with no census units that meet the threshold value ----\n### NOTE: may want to exclude this part to avoid making estimates for very small\n### systems, which are not likely to be very reliable\n\n## get list of systems with at least 1 census unit above threshold ----\nsystems_with_units_above_threshold &lt;- census_unit_overlap_simplified %&gt;% \n    filter(above_threshold == TRUE) %&gt;% \n    pull(water_system_name) %&gt;% \n    unique()\n## get list of systems with no census units above threshold ---- \nsystems_no_units_above_threshold &lt;- water_systems_sac %&gt;% \n    filter(!water_system_name %in% systems_with_units_above_threshold) %&gt;% \n    pull(water_system_name)\n\n## select the 1 census unit per system with the greatest overlap ----\ncensus_units_keep_systems_no_units_above_threshold &lt;- census_unit_overlap_simplified %&gt;% \n    filter(water_system_name %in% systems_no_units_above_threshold) %&gt;% \n    group_by(water_system_name) %&gt;%\n    slice_max(order_by = overlap_portion, n = 1) %&gt;%\n    ungroup()\n\n# filter census units based on threshold value ----\n### NOTE: this accounts for water systems with no census units that meet the \n### threshold value - to avoid making estimates for those systems, remove the\n### 'geoid_system_keep_below_threshold' variable below\n\n## determine which census units to keep (for each water system) ----\ngeoid_system_keep_above_threshold &lt;- census_unit_overlap_simplified %&gt;% \n    filter(above_threshold == TRUE) %&gt;% \n    pull(geoid_system)\ngeoid_system_keep_below_threshold &lt;- census_units_keep_systems_no_units_above_threshold %&gt;% \n    pull(geoid_system)\n\n## filter census units ----\ncensus_data_acs_moe &lt;- census_data_acs_moe %&gt;% \n    st_join(water_systems_sac %&gt;% select(water_system_name)) %&gt;% \n    mutate(geoid_system = paste(GEOID, water_system_name, sep = '|')) %&gt;% \n    filter(geoid_system %in% c(geoid_system_keep_above_threshold, \n                               geoid_system_keep_below_threshold))\n\n\n\n9.1.1.2 Calculated Count-Weighted Values\nNext, compute weighted values for remaining variables, using estimated count data from the previous step (population or households) as weighting factors (as described above in Section 6.5):\n\n# aggregate ----\nwater_system_demographics_simplified_method &lt;- census_data_acs_moe %&gt;%\n    # compute values for weighted variables\n    mutate(\n        average_household_size_weighted = average_household_sizeE * households_countE,\n        median_household_income_weighted = median_household_incomeE * households_countE,\n        per_capita_income_weighted = per_capita_incomeE * population_total_countE\n    ) \n\n\n\n9.1.1.3 Aggregate by Water System\nNext, aggregate the data for each water system (as described above in Section 6.6) – do this by summing all of the count-based variables, and calculating weighted averages for all remaining count-weighted variables.\n\n# compute aggregated values\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;%  \n    # compute denominators for weighted variables\n    mutate(\n        average_household_size_denominator = if_else(\n            is.na(average_household_sizeE), \n            0, \n            households_countE),\n        median_household_income_denominator = if_else(\n            is.na(median_household_incomeE), \n            0, \n            households_countE),\n        per_capita_income_denominator = if_else(\n            is.na(per_capita_incomeE), \n            0, \n            population_total_countE)\n    ) %&gt;% \n    group_by(water_system_name) %&gt;% \n    summarize(\n        across(\n            .cols = ends_with('_countE'),\n            .fns = ~ sum(.x)\n        ),\n        average_household_size_hh_weighted =\n            sum(average_household_size_weighted, na.rm = TRUE) /\n            sum(average_household_size_denominator),\n        median_household_income_hh_weighted =\n            sum(median_household_income_weighted, na.rm = TRUE) /\n            sum(median_household_income_denominator),\n        per_capita_income_pop_weighted =\n            sum(per_capita_income_weighted, na.rm = TRUE) /\n            sum(per_capita_income_denominator)\n    ) %&gt;% \n    ungroup() %&gt;% \n    # round weighted values\n    mutate(\n        across(\n            .cols = ends_with('_weighted'),\n            .fns = ~ round(.x, 2)\n        ))\n\n# if population / household counts are zero, set population / household weighted means values to NA\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;% \n    mutate(\n        average_household_size_hh_weighted = case_when(\n            households_countE == 0 ~ NA,\n            .default = average_household_size_hh_weighted\n        ),\n        median_household_income_hh_weighted = case_when(\n            households_countE == 0 ~ NA,\n            .default = median_household_income_hh_weighted\n        ),\n        per_capita_income_pop_weighted = case_when(\n            population_total_countE == 0 ~ NA,\n            .default = per_capita_income_pop_weighted\n        )\n    )\n\nSince computing a weighted mean for the median household income may be somewhat inaccurate (as noted above in Caution 1), it may also be worth calculating a grouped median household income based on the income bracket data:\n\n# TO DO: Compute grouped median incomes\n\nUsing the aggregated data, compute additional metrics for each system, like ethnic/racial group portions, poverty rates, income distributions, etc.\n\n# !!!! NOTE: may need to revise this section to calculate MOEs correctly !!!!\n\n# compute rates / percentages ----\n## race / ethnicity ----\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;%\n    mutate(\n        across(\n            .cols = starts_with('population_'),\n            .fns = ~ round(.x / population_total_countE * 100, 2),\n            .names = \"{str_replace(.col, '_countE', '_percentE')}\"\n        ),\n        .after = population_multiple_countE) %&gt;% \n    select(-population_total_percentE) # this always equals 1, not needed\n\n## poverty rate ----\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;% \n    mutate(poverty_rate_percentE = case_when(\n        poverty_total_assessed_countE == 0 ~ 0,\n        .default = 100 * poverty_below_level_countE / poverty_total_assessed_countE\n    ), \n    .after = poverty_above_level_countE)\n\n# consistent income brackets ----\n## 25k brackets ----\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;% \n    mutate(households_income_25k_brackets_0_25k_countE = \n               households_income_below_10k_countE + \n               households_income_10k_15k_countE + \n               households_income_15k_20k_countE +\n               households_income_20k_25k_countE,\n           households_income_25k_brackets_25k_50k_countE =\n               households_income_25k_30k_countE + \n               households_income_30k_35k_countE +\n               households_income_35k_40k_countE +\n               households_income_40k_45k_countE +\n               households_income_45k_50k_countE,\n           households_income_25k_brackets_50k_75k_countE =\n               households_income_50k_60k_countE +\n               households_income_60k_75k_countE,\n           .after = households_income_above_200k_countE\n    ) # note - above 75k is already in 25k increments\n\n## 50k brackets ----\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;% \n    mutate(households_income_50k_brackets_0_50k_countE = \n               households_income_below_10k_countE + \n               households_income_10k_15k_countE + \n               households_income_15k_20k_countE +\n               households_income_20k_25k_countE + \n               households_income_25k_30k_countE + \n               households_income_30k_35k_countE +\n               households_income_35k_40k_countE +\n               households_income_40k_45k_countE +\n               households_income_45k_50k_countE,\n           households_income_50k_brackets_50k_100k_countE =\n               households_income_50k_60k_countE +\n               households_income_60k_75k_countE +\n               households_income_75k_100k_countE,\n           households_income_50k_brackets_100k_150k_countE =\n               households_income_100k_125k_countE +\n               households_income_125k_150k_countE,\n           .after = households_income_25k_brackets_50k_75k_countE\n    ) # above 150k is already in 50k increments\n\n## portion of households paying more than 30% / 50% of income on housing ----\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;%\n    mutate(households_all_housing_costs_over30pct_percentE = \n               100 * (households_mortgage_housing_costs_over30pct_countE + \n                          households_no_mortgage_housing_costs_over30pct_countE +\n                          households_rent_housing_costs_over30pct_countE) / \n               households_countE, \n           .after = households_rent_housing_costs_over50pct_countE) %&gt;% \n    mutate(households_all_housing_costs_over50pct_percentE = \n               100 * (households_mortgage_housing_costs_over50pct_countE + \n                          households_no_mortgage_housing_costs_over50pct_countE +\n                          households_rent_housing_costs_over50pct_countE) / \n               households_countE,\n           .after = households_all_housing_costs_over30pct_percentE) \n\n# round values\nwater_system_demographics_simplified_method &lt;- water_system_demographics_simplified_method %&gt;%\n    mutate(\n        across(\n            .cols = ends_with('_countE'),\n            .fns = ~ round(.x, 0)\n        ))  %&gt;%\n    mutate(\n        across(\n            .cols = ends_with('_percentE'),\n            .fns = ~ round(.x, 2)\n        ))\n\n## NOTE: may want to calculate other rates / percentages, depending on project needs\n\nFinally, we can compute MOEs for the derived (estimated) data:\n\n# compute MOEs\n# [TO DO - use tidycensus functions to calculate MOEs for derived estimates]\n\n# !!!! NOTE: may need to combine this with the section above to calculate MOEs correctly !!!!\n\n[TO DO: insert results / plots of derived MOEs]\n\n\n9.1.1.4 View Results\nTable 4 shows the estimated demographics for each water system using the simplified interpolation method:\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_demographics_simplified_method %&gt;%\n    st_drop_geometry() %&gt;%\n    mutate(across(\n        .cols = ends_with('_percent'),\n        .fns = ~ pct_format(. / 100))\n    ) %&gt;%\n    rename_with(.cols = everything(),\n                .fn = ~ str_replace_all(., pattern = '_', replacement = ' ') %&gt;%\n                    str_to_title(.)) %&gt;%\n    kable(align = 'c',\n          format.args = list(big.mark = ',')\n    ) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 4: Estimated Water System Demographics - Simplified Method\n\n\n\n\n\n\n\n\nWater System Name\nPopulation Total Counte\nPopulation Hispanic Or Latino Counte\nPopulation White Counte\nPopulation Black Or African American Counte\nPopulation Native American Or Alaska Native Counte\nPopulation Asian Counte\nPopulation Pacific Islander Counte\nPopulation Other Counte\nPopulation Multiple Counte\nPopulation Hispanic Or Latino Percente\nPopulation White Percente\nPopulation Black Or African American Percente\nPopulation Native American Or Alaska Native Percente\nPopulation Asian Percente\nPopulation Pacific Islander Percente\nPopulation Other Percente\nPopulation Multiple Percente\nPoverty Total Assessed Counte\nPoverty Below Level Counte\nPoverty Above Level Counte\nPoverty Rate Percente\nHouseholds Counte\nHouseholds Income Below 10k Counte\nHouseholds Income 10k 15k Counte\nHouseholds Income 15k 20k Counte\nHouseholds Income 20k 25k Counte\nHouseholds Income 25k 30k Counte\nHouseholds Income 30k 35k Counte\nHouseholds Income 35k 40k Counte\nHouseholds Income 40k 45k Counte\nHouseholds Income 45k 50k Counte\nHouseholds Income 50k 60k Counte\nHouseholds Income 60k 75k Counte\nHouseholds Income 75k 100k Counte\nHouseholds Income 100k 125k Counte\nHouseholds Income 125k 150k Counte\nHouseholds Income 150k 200k Counte\nHouseholds Income Above 200k Counte\nHouseholds Income 25k Brackets 0 25k Counte\nHouseholds Income 25k Brackets 25k 50k Counte\nHouseholds Income 25k Brackets 50k 75k Counte\nHouseholds Income 50k Brackets 0 50k Counte\nHouseholds Income 50k Brackets 50k 100k Counte\nHouseholds Income 50k Brackets 100k 150k Counte\nHouseholds Mortgage Total Counte\nHouseholds Mortgage Housing Costs Over30pct Counte\nHouseholds Mortgage Housing Costs Over50pct Counte\nHouseholds No Mortgage Total Counte\nHouseholds No Mortgage Housing Costs Over30pct Counte\nHouseholds No Mortgage Housing Costs Over50pct Counte\nHouseholds Rent Total Counte\nHouseholds Rent Housing Costs Over30pct Counte\nHouseholds Rent Housing Costs Over50pct Counte\nHouseholds All Housing Costs Over30pct Percente\nHouseholds All Housing Costs Over50pct Percente\nAverage Household Size Hh Weighted\nMedian Household Income Hh Weighted\nPer Capita Income Pop Weighted\n\n\n\n\nB & W RESORT MARINA\n770\n319\n404\n0\n0\n35\n0\n0\n12\n41.43\n52.47\n0.00\n0.00\n4.55\n0.00\n0.00\n1.56\n770\n174\n596\n22.60\n380\n29\n30\n11\n15\n18\n8\n23\n18\n4\n49\n29\n17\n71\n23\n0\n35\n85\n71\n78\n156\n95\n94\n143\n89\n28\n154\n45\n40\n83\n20\n15\n40.53\n21.84\n2.03\n51,977.00\n40,522.00\n\n\nCAL AM FRUITRIDGE VISTA\n21,725\n10,307\n3,296\n3,091\n121\n3,588\n341\n86\n895\n47.44\n15.17\n14.23\n0.56\n16.52\n1.57\n0.40\n4.12\n21,678\n5,505\n16,173\n25.39\n6,648\n307\n341\n439\n225\n317\n339\n363\n354\n597\n621\n897\n788\n426\n236\n265\n133\n1,312\n1,970\n1,518\n3,282\n2,306\n662\n1,531\n690\n301\n1,130\n81\n44\n3,987\n2,035\n961\n42.21\n19.65\n3.25\n51,998.83\n20,502.62\n\n\nCALAM - ANTELOPE\n35,144\n5,501\n20,603\n3,580\n120\n3,137\n84\n205\n1,914\n15.65\n58.62\n10.19\n0.34\n8.93\n0.24\n0.58\n5.45\n35,090\n3,891\n31,199\n11.09\n11,231\n338\n244\n102\n103\n135\n526\n240\n362\n497\n903\n1,168\n1,675\n1,601\n1,119\n1,225\n993\n787\n1,760\n2,071\n2,547\n3,746\n2,720\n5,748\n1,898\n578\n1,853\n189\n111\n3,630\n1,951\n749\n35.95\n12.80\n3.12\n92,904.62\n34,473.58\n\n\nCALAM - ARDEN\n11,751\n4,170\n2,612\n2,221\n43\n1,350\n95\n135\n1,125\n35.49\n22.23\n18.90\n0.37\n11.49\n0.81\n1.15\n9.57\n11,627\n3,686\n7,941\n31.70\n4,534\n208\n427\n288\n218\n339\n239\n180\n282\n190\n499\n484\n604\n261\n173\n74\n68\n1,141\n1,230\n983\n2,371\n1,587\n434\n304\n105\n67\n157\n5\n0\n4,073\n2,511\n1,370\n57.81\n31.69\n2.57\n47,996.21\n22,894.54\n\n\nCALAM - ISLETON\n770\n319\n404\n0\n0\n35\n0\n0\n12\n41.43\n52.47\n0.00\n0.00\n4.55\n0.00\n0.00\n1.56\n770\n174\n596\n22.60\n380\n29\n30\n11\n15\n18\n8\n23\n18\n4\n49\n29\n17\n71\n23\n0\n35\n85\n71\n78\n156\n95\n94\n143\n89\n28\n154\n45\n40\n83\n20\n15\n40.53\n21.84\n2.03\n51,977.00\n40,522.00\n\n\nCALAM - LINCOLN OAKS\n42,879\n9,381\n26,242\n1,196\n147\n2,790\n282\n247\n2,594\n21.88\n61.20\n2.79\n0.34\n6.51\n0.66\n0.58\n6.05\n42,820\n4,106\n38,714\n9.59\n15,597\n752\n362\n290\n645\n483\n616\n576\n645\n730\n1,070\n1,628\n2,526\n1,879\n1,242\n1,488\n665\n2,049\n3,050\n2,698\n5,099\n5,224\n3,121\n7,373\n2,742\n946\n3,353\n489\n295\n4,871\n2,564\n1,304\n37.15\n16.32\n2.73\n79,787.31\n33,102.60\n\n\nCALAM - PARKWAY\n58,185\n18,554\n8,847\n6,745\n8\n19,176\n1,328\n135\n3,392\n31.89\n15.20\n11.59\n0.01\n32.96\n2.28\n0.23\n5.83\n57,985\n9,906\n48,079\n17.08\n17,611\n1,117\n760\n514\n693\n736\n648\n702\n679\n712\n1,152\n1,912\n2,438\n1,638\n1,493\n1,530\n887\n3,084\n3,477\n3,064\n6,561\n5,502\n3,131\n7,016\n2,718\n1,057\n3,357\n634\n379\n7,238\n3,588\n2,066\n39.41\n19.89\n3.27\n72,236.22\n27,248.18\n\n\nCALAM - SUBURBAN ROSEMONT\n56,906\n13,814\n24,365\n7,788\n92\n6,628\n377\n245\n3,597\n24.28\n42.82\n13.69\n0.16\n11.65\n0.66\n0.43\n6.32\n56,674\n8,350\n48,324\n14.73\n20,572\n1,145\n591\n495\n698\n647\n572\n569\n869\n622\n1,270\n2,503\n3,304\n2,540\n1,510\n1,642\n1,595\n2,929\n3,279\n3,773\n6,208\n7,077\n4,050\n8,063\n2,245\n719\n3,276\n424\n270\n9,233\n4,467\n2,309\n34.69\n16.03\n2.74\n80,780.02\n34,123.00\n\n\nCALAM - WALNUT GROVE\n1,130\n504\n518\n0\n0\n67\n0\n0\n41\n44.60\n45.84\n0.00\n0.00\n5.93\n0.00\n0.00\n3.63\n1,130\n178\n952\n15.75\n437\n28\n11\n16\n0\n25\n11\n0\n28\n27\n11\n168\n0\n3\n18\n17\n74\n55\n91\n179\n146\n179\n21\n150\n0\n0\n60\n28\n28\n227\n79\n36\n24.49\n14.65\n2.49\n68,248.00\n38,950.00\n\n\nCALIFORNIA STATE FAIR\n1,594\n234\n785\n273\n0\n145\n0\n0\n157\n14.68\n49.25\n17.13\n0.00\n9.10\n0.00\n0.00\n9.85\n1,575\n455\n1,120\n28.89\n855\n194\n39\n25\n16\n28\n41\n6\n0\n70\n86\n90\n104\n62\n33\n51\n10\n274\n145\n176\n419\n280\n95\n0\n0\n0\n0\n0\n0\n855\n531\n286\n62.11\n33.45\n1.82\n52,886.00\n33,141.00\n\n\nCARMICHAEL WATER DISTRICT\n38,891\n6,189\n25,092\n2,068\n69\n3,285\n288\n7\n1,893\n15.91\n64.52\n5.32\n0.18\n8.45\n0.74\n0.02\n4.87\n38,325\n4,904\n33,421\n12.80\n15,783\n535\n532\n525\n477\n367\n590\n518\n645\n550\n969\n1,532\n1,766\n1,733\n1,222\n1,692\n2,130\n2,069\n2,670\n2,501\n4,739\n4,267\n2,955\n5,339\n1,456\n712\n3,230\n356\n156\n7,214\n3,866\n1,950\n35.98\n17.85\n2.40\n98,258.48\n47,272.08\n\n\nCITRUS HEIGHTS WATER DISTRICT\n65,981\n11,998\n46,441\n1,978\n166\n2,524\n46\n69\n2,759\n18.18\n70.39\n3.00\n0.25\n3.83\n0.07\n0.10\n4.18\n65,649\n6,709\n58,940\n10.22\n24,655\n963\n580\n430\n732\n634\n850\n807\n676\n1,117\n1,818\n2,999\n3,787\n2,604\n2,292\n2,420\n1,946\n2,705\n4,084\n4,817\n6,789\n8,604\n4,896\n9,729\n3,368\n1,309\n4,105\n522\n264\n10,821\n5,664\n2,621\n38.75\n17.01\n2.64\n82,777.80\n37,334.82\n\n\nCITY OF SACRAMENTO MAIN\n514,441\n151,253\n160,191\n61,077\n1,227\n97,270\n9,169\n3,096\n31,158\n29.40\n31.14\n11.87\n0.24\n18.91\n1.78\n0.60\n6.06\n507,041\n76,216\n430,825\n15.03\n193,689\n9,607\n9,427\n6,174\n6,451\n5,834\n6,213\n6,226\n6,139\n6,537\n13,339\n17,341\n27,087\n20,454\n14,954\n17,455\n20,451\n31,659\n30,949\n30,680\n62,608\n57,767\n35,408\n67,341\n21,828\n8,307\n29,932\n3,518\n1,802\n96,416\n47,408\n24,590\n37.56\n17.91\n2.60\n84,666.70\n39,144.67\n\n\nDEL PASO MANOR COUNTY WATER DI\n6,194\n758\n4,398\n439\n15\n150\n32\n20\n382\n12.24\n71.00\n7.09\n0.24\n2.42\n0.52\n0.32\n6.17\n6,194\n711\n5,483\n11.48\n2,421\n193\n53\n53\n74\n24\n59\n76\n242\n43\n172\n301\n168\n189\n144\n366\n264\n373\n444\n473\n817\n641\n333\n1,052\n387\n212\n601\n132\n85\n768\n531\n131\n43.37\n17.68\n2.56\n90,552.53\n39,800.86\n\n\nDELTA CROSSING MHP\n620\n429\n178\n0\n0\n0\n0\n0\n13\n69.19\n28.71\n0.00\n0.00\n0.00\n0.00\n0.00\n2.10\n620\n108\n512\n17.42\n219\n30\n0\n0\n0\n0\n0\n37\n20\n10\n25\n27\n35\n28\n0\n0\n7\n30\n67\n52\n97\n87\n28\n29\n29\n0\n88\n30\n30\n102\n41\n26\n45.66\n25.57\n2.55\n56,250.00\n23,510.00\n\n\nEAST WALNUT GROVE [SWS]\n1,130\n504\n518\n0\n0\n67\n0\n0\n41\n44.60\n45.84\n0.00\n0.00\n5.93\n0.00\n0.00\n3.63\n1,130\n178\n952\n15.75\n437\n28\n11\n16\n0\n25\n11\n0\n28\n27\n11\n168\n0\n3\n18\n17\n74\n55\n91\n179\n146\n179\n21\n150\n0\n0\n60\n28\n28\n227\n79\n36\n24.49\n14.65\n2.49\n68,248.00\n38,950.00\n\n\nEDGEWATER MOBILE HOME PARK\n743\n29\n663\n24\n0\n0\n0\n0\n27\n3.90\n89.23\n3.23\n0.00\n0.00\n0.00\n0.00\n3.63\n743\n267\n476\n35.94\n414\n72\n69\n21\n23\n16\n5\n4\n19\n11\n0\n57\n30\n53\n0\n12\n22\n185\n55\n57\n240\n87\n53\n71\n30\n30\n255\n27\n7\n88\n59\n59\n28.02\n23.19\n1.79\n38,125.00\n33,103.00\n\n\nEL DORADO MOBILE HOME PARK\n2,539\n1,530\n198\n266\n0\n337\n0\n0\n208\n60.26\n7.80\n10.48\n0.00\n13.27\n0.00\n0.00\n8.19\n2,523\n1,088\n1,435\n43.12\n878\n102\n177\n0\n67\n103\n14\n0\n137\n27\n132\n8\n17\n0\n79\n0\n15\n346\n281\n140\n627\n157\n79\n58\n0\n0\n176\n97\n97\n644\n313\n176\n46.70\n31.09\n2.71\n29,468.00\n17,394.00\n\n\nEL DORADO WEST MHP\n2,539\n1,530\n198\n266\n0\n337\n0\n0\n208\n60.26\n7.80\n10.48\n0.00\n13.27\n0.00\n0.00\n8.19\n2,523\n1,088\n1,435\n43.12\n878\n102\n177\n0\n67\n103\n14\n0\n137\n27\n132\n8\n17\n0\n79\n0\n15\n346\n281\n140\n627\n157\n79\n58\n0\n0\n176\n97\n97\n644\n313\n176\n46.70\n31.09\n2.71\n29,468.00\n17,394.00\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\n2,911\n561\n1,170\n699\n0\n463\n0\n0\n18\n19.27\n40.19\n24.01\n0.00\n15.91\n0.00\n0.00\n0.62\n2,911\n1,091\n1,820\n37.48\n888\n84\n21\n37\n73\n123\n21\n17\n15\n34\n14\n167\n213\n37\n0\n32\n0\n215\n210\n181\n425\n394\n37\n101\n41\n17\n265\n9\n9\n522\n366\n288\n46.85\n35.36\n3.28\n60,521.00\n18,213.00\n\n\nELK GROVE WATER SERVICE\n41,473\n7,466\n18,980\n3,212\n70\n8,612\n394\n234\n2,505\n18.00\n45.76\n7.74\n0.17\n20.77\n0.95\n0.56\n6.04\n41,083\n3,271\n37,812\n7.96\n12,886\n446\n176\n254\n231\n306\n99\n338\n281\n247\n651\n1,104\n1,405\n1,400\n1,336\n1,827\n2,785\n1,107\n1,271\n1,755\n2,378\n3,160\n2,736\n7,302\n1,777\n577\n2,759\n270\n106\n2,825\n1,619\n887\n28.45\n12.18\n3.18\n122,598.12\n43,251.88\n\n\nFAIR OAKS WATER DISTRICT\n37,271\n4,890\n27,762\n801\n81\n1,505\n0\n209\n2,023\n13.12\n74.49\n2.15\n0.22\n4.04\n0.00\n0.56\n5.43\n37,064\n3,132\n33,932\n8.45\n14,776\n571\n334\n114\n222\n212\n399\n199\n508\n342\n800\n1,126\n2,344\n1,531\n1,650\n1,893\n2,531\n1,241\n1,660\n1,926\n2,901\n4,270\n3,181\n7,249\n1,962\n883\n3,275\n244\n92\n4,252\n1,963\n839\n28.21\n12.28\n2.47\n106,597.29\n54,163.68\n\n\nFLORIN COUNTY WATER DISTRICT\n9,549\n2,722\n1,755\n1,327\n13\n2,488\n809\n93\n342\n28.51\n18.38\n13.90\n0.14\n26.06\n8.47\n0.97\n3.58\n9,440\n1,216\n8,224\n12.88\n2,775\n98\n126\n53\n186\n121\n38\n84\n206\n234\n242\n216\n410\n306\n198\n142\n115\n463\n683\n458\n1,146\n868\n504\n949\n408\n81\n780\n65\n43\n1,046\n476\n255\n34.20\n13.66\n3.40\n62,590.16\n24,205.26\n\n\nFOLSOM STATE PRISON\n4,478\n1,595\n818\n1,765\n72\n88\n43\n23\n74\n35.62\n18.27\n39.41\n1.61\n1.97\n0.96\n0.51\n1.65\n24\n0\n24\n0.00\n24\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n5\n5\n14\n0\n0\n0\n0\n0\n0\n10\n0\n0\n0\n0\n0\n0\n24\n0\n0\n0.00\n0.00\nNaN\n157,857.00\n2,098.00\n\n\nFOLSOM, CITY OF - ASHLAND\n2,548\n47\n2,099\n4\n0\n77\n0\n0\n321\n1.84\n82.38\n0.16\n0.00\n3.02\n0.00\n0.00\n12.60\n2,548\n72\n2,476\n2.83\n1,427\n42\n17\n123\n42\n32\n206\n117\n69\n36\n20\n127\n162\n91\n51\n64\n228\n224\n460\n147\n684\n309\n142\n355\n109\n79\n814\n395\n95\n258\n154\n59\n46.11\n16.33\n1.78\n58,801.77\n58,387.83\n\n\nFOLSOM, CITY OF - MAIN\n62,429\n8,528\n34,986\n1,705\n104\n13,002\n176\n234\n3,694\n13.66\n56.04\n2.73\n0.17\n20.83\n0.28\n0.37\n5.92\n62,152\n3,415\n58,737\n5.49\n22,371\n795\n215\n389\n448\n425\n286\n320\n356\n449\n663\n1,166\n2,233\n2,381\n1,758\n4,030\n6,457\n1,847\n1,836\n1,829\n3,683\n4,062\n4,139\n11,537\n2,732\n1,170\n3,563\n234\n143\n7,271\n2,937\n1,261\n26.39\n11.51\n2.78\n142,852.94\n58,722.84\n\n\nFREEPORT MARINA\n620\n429\n178\n0\n0\n0\n0\n0\n13\n69.19\n28.71\n0.00\n0.00\n0.00\n0.00\n0.00\n2.10\n620\n108\n512\n17.42\n219\n30\n0\n0\n0\n0\n0\n37\n20\n10\n25\n27\n35\n28\n0\n0\n7\n30\n67\n52\n97\n87\n28\n29\n29\n0\n88\n30\n30\n102\n41\n26\n45.66\n25.57\n2.55\n56,250.00\n23,510.00\n\n\nGALT, CITY OF\n22,226\n9,620\n10,323\n530\n25\n870\n0\n0\n858\n43.28\n46.45\n2.38\n0.11\n3.91\n0.00\n0.00\n3.86\n22,065\n1,372\n20,693\n6.22\n7,125\n136\n170\n267\n201\n132\n338\n148\n348\n134\n559\n716\n836\n1,083\n557\n837\n663\n774\n1,100\n1,275\n1,874\n2,111\n1,640\n3,855\n934\n538\n1,399\n95\n35\n1,871\n958\n447\n27.89\n14.32\n3.09\n91,799.24\n33,555.54\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\n6,516\n1,704\n2,865\n320\n0\n876\n10\n86\n655\n26.15\n43.97\n4.91\n0.00\n13.44\n0.15\n1.32\n10.05\n6,414\n1,618\n4,796\n25.23\n2,157\n18\n82\n19\n140\n52\n172\n34\n179\n36\n137\n350\n317\n131\n171\n140\n179\n259\n473\n487\n732\n804\n302\n724\n238\n123\n128\n0\n0\n1,305\n594\n332\n38.57\n21.09\n2.90\n66,429.98\n30,326.17\n\n\nGOLDEN STATE WATER CO. - CORDOVA\n50,516\n9,770\n27,252\n4,121\n229\n6,223\n183\n221\n2,517\n19.34\n53.95\n8.16\n0.45\n12.32\n0.36\n0.44\n4.98\n50,236\n4,624\n45,612\n9.20\n18,844\n508\n492\n346\n493\n519\n472\n414\n471\n621\n1,342\n1,768\n2,737\n2,677\n1,780\n2,022\n2,182\n1,839\n2,497\n3,110\n4,336\n5,847\n4,457\n7,842\n2,278\n873\n3,630\n368\n198\n7,372\n2,810\n1,483\n28.95\n13.55\n2.66\n97,368.09\n42,709.89\n\n\nHAPPY HARBOR (SWS)\n743\n29\n663\n24\n0\n0\n0\n0\n27\n3.90\n89.23\n3.23\n0.00\n0.00\n0.00\n0.00\n3.63\n743\n267\n476\n35.94\n414\n72\n69\n21\n23\n16\n5\n4\n19\n11\n0\n57\n30\n53\n0\n12\n22\n185\n55\n57\n240\n87\n53\n71\n30\n30\n255\n27\n7\n88\n59\n59\n28.02\n23.19\n1.79\n38,125.00\n33,103.00\n\n\nHOLIDAY MOBILE VILLAGE\n1,733\n670\n262\n123\n0\n563\n0\n0\n115\n38.66\n15.12\n7.10\n0.00\n32.49\n0.00\n0.00\n6.64\n1,733\n387\n1,346\n22.33\n606\n70\n39\n0\n42\n13\n33\n176\n21\n15\n0\n91\n68\n22\n16\n0\n0\n151\n258\n91\n409\n159\n38\n93\n15\n0\n75\n42\n29\n438\n215\n144\n44.88\n28.55\n2.86\n38,491.00\n16,707.00\n\n\nHOOD WATER MAINTENCE DIST [SWS]\n620\n429\n178\n0\n0\n0\n0\n0\n13\n69.19\n28.71\n0.00\n0.00\n0.00\n0.00\n0.00\n2.10\n620\n108\n512\n17.42\n219\n30\n0\n0\n0\n0\n0\n37\n20\n10\n25\n27\n35\n28\n0\n0\n7\n30\n67\n52\n97\n87\n28\n29\n29\n0\n88\n30\n30\n102\n41\n26\n45.66\n25.57\n2.55\n56,250.00\n23,510.00\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\n884\n220\n545\n4\n0\n26\n0\n0\n89\n24.89\n61.65\n0.45\n0.00\n2.94\n0.00\n0.00\n10.07\n884\n189\n695\n21.38\n525\n18\n110\n74\n12\n0\n66\n31\n19\n26\n4\n16\n122\n0\n0\n0\n27\n214\n142\n20\n356\n142\n0\n38\n0\n0\n376\n156\n144\n111\n111\n92\n50.86\n44.95\n1.68\n31,837.00\n32,922.00\n\n\nKORTHS PIRATES LAIR\n743\n29\n663\n24\n0\n0\n0\n0\n27\n3.90\n89.23\n3.23\n0.00\n0.00\n0.00\n0.00\n3.63\n743\n267\n476\n35.94\n414\n72\n69\n21\n23\n16\n5\n4\n19\n11\n0\n57\n30\n53\n0\n12\n22\n185\n55\n57\n240\n87\n53\n71\n30\n30\n255\n27\n7\n88\n59\n59\n28.02\n23.19\n1.79\n38,125.00\n33,103.00\n\n\nLAGUNA DEL SOL INC\n891\n192\n670\n0\n6\n13\n0\n0\n10\n21.55\n75.20\n0.00\n0.67\n1.46\n0.00\n0.00\n1.12\n891\n57\n834\n6.40\n338\n6\n33\n34\n16\n15\n0\n10\n0\n0\n0\n0\n75\n15\n15\n28\n91\n89\n25\n0\n114\n75\n30\n183\n64\n64\n95\n0\n0\n60\n15\n15\n23.37\n23.37\n2.64\n95,227.00\n50,793.00\n\n\nLAGUNA VILLAGE RV PARK\n2,995\n383\n254\n218\n0\n1,576\n251\n0\n313\n12.79\n8.48\n7.28\n0.00\n52.62\n8.38\n0.00\n10.45\n2,995\n353\n2,642\n11.79\n987\n97\n0\n14\n31\n29\n17\n0\n40\n43\n16\n104\n203\n53\n119\n126\n95\n142\n129\n120\n271\n323\n172\n418\n188\n71\n156\n24\n1\n413\n109\n49\n32.52\n12.26\n3.03\n84,332.00\n32,668.00\n\n\nLINCOLN CHAN-HOME RANCH\n1,130\n504\n518\n0\n0\n67\n0\n0\n41\n44.60\n45.84\n0.00\n0.00\n5.93\n0.00\n0.00\n3.63\n1,130\n178\n952\n15.75\n437\n28\n11\n16\n0\n25\n11\n0\n28\n27\n11\n168\n0\n3\n18\n17\n74\n55\n91\n179\n146\n179\n21\n150\n0\n0\n60\n28\n28\n227\n79\n36\n24.49\n14.65\n2.49\n68,248.00\n38,950.00\n\n\nLOCKE WATER WORKS CO [SWS]\n1,130\n504\n518\n0\n0\n67\n0\n0\n41\n44.60\n45.84\n0.00\n0.00\n5.93\n0.00\n0.00\n3.63\n1,130\n178\n952\n15.75\n437\n28\n11\n16\n0\n25\n11\n0\n28\n27\n11\n168\n0\n3\n18\n17\n74\n55\n91\n179\n146\n179\n21\n150\n0\n0\n60\n28\n28\n227\n79\n36\n24.49\n14.65\n2.49\n68,248.00\n38,950.00\n\n\nMAGNOLIA MUTUAL WATER\n1,130\n504\n518\n0\n0\n67\n0\n0\n41\n44.60\n45.84\n0.00\n0.00\n5.93\n0.00\n0.00\n3.63\n1,130\n178\n952\n15.75\n437\n28\n11\n16\n0\n25\n11\n0\n28\n27\n11\n168\n0\n3\n18\n17\n74\n55\n91\n179\n146\n179\n21\n150\n0\n0\n60\n28\n28\n227\n79\n36\n24.49\n14.65\n2.49\n68,248.00\n38,950.00\n\n\nMC CLELLAN MHP\n2,911\n561\n1,170\n699\n0\n463\n0\n0\n18\n19.27\n40.19\n24.01\n0.00\n15.91\n0.00\n0.00\n0.62\n2,911\n1,091\n1,820\n37.48\n888\n84\n21\n37\n73\n123\n21\n17\n15\n34\n14\n167\n213\n37\n0\n32\n0\n215\n210\n181\n425\n394\n37\n101\n41\n17\n265\n9\n9\n522\n366\n288\n46.85\n35.36\n3.28\n60,521.00\n18,213.00\n\n\nOLYMPIA MOBILODGE\n1,302\n314\n365\n82\n0\n455\n72\n0\n14\n24.12\n28.03\n6.30\n0.00\n34.95\n5.53\n0.00\n1.08\n1,302\n305\n997\n23.43\n514\n50\n1\n29\n45\n40\n15\n59\n0\n0\n45\n84\n34\n12\n53\n23\n24\n125\n114\n129\n239\n163\n65\n138\n97\n44\n228\n55\n45\n148\n40\n33\n37.35\n23.74\n2.51\n53,786.00\n29,451.00\n\n\nORANGE VALE WATER COMPANY\n18,135\n3,076\n12,612\n274\n76\n672\n98\n39\n1,288\n16.96\n69.55\n1.51\n0.42\n3.71\n0.54\n0.22\n7.10\n18,034\n2,028\n16,006\n11.25\n6,714\n381\n95\n68\n104\n238\n55\n281\n113\n163\n346\n761\n1,032\n965\n699\n645\n768\n648\n850\n1,107\n1,498\n2,139\n1,664\n3,377\n984\n441\n1,673\n327\n191\n1,664\n674\n304\n29.57\n13.94\n2.67\n92,866.38\n41,992.51\n\n\nPLANTATION MOBILE HOME PARK\n1,733\n670\n262\n123\n0\n563\n0\n0\n115\n38.66\n15.12\n7.10\n0.00\n32.49\n0.00\n0.00\n6.64\n1,733\n387\n1,346\n22.33\n606\n70\n39\n0\n42\n13\n33\n176\n21\n15\n0\n91\n68\n22\n16\n0\n0\n151\n258\n91\n409\n159\n38\n93\n15\n0\n75\n42\n29\n438\n215\n144\n44.88\n28.55\n2.86\n38,491.00\n16,707.00\n\n\nRANCHO MARINA\n743\n29\n663\n24\n0\n0\n0\n0\n27\n3.90\n89.23\n3.23\n0.00\n0.00\n0.00\n0.00\n3.63\n743\n267\n476\n35.94\n414\n72\n69\n21\n23\n16\n5\n4\n19\n11\n0\n57\n30\n53\n0\n12\n22\n185\n55\n57\n240\n87\n53\n71\n30\n30\n255\n27\n7\n88\n59\n59\n28.02\n23.19\n1.79\n38,125.00\n33,103.00\n\n\nRANCHO MURIETA COMMUNITY SERVI\n2,943\n684\n1,891\n58\n9\n197\n0\n38\n66\n23.24\n64.25\n1.97\n0.31\n6.69\n0.00\n1.29\n2.24\n2,943\n198\n2,745\n6.73\n1,318\n54\n37\n0\n0\n0\n17\n84\n29\n97\n37\n43\n101\n108\n216\n207\n288\n91\n227\n80\n318\n181\n324\n1,015\n216\n114\n212\n52\n52\n91\n52\n52\n24.28\n16.54\n2.23\n146,106.87\n67,805.56\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\n1,379\n355\n517\n232\n41\n62\n25\n80\n67\n25.74\n37.49\n16.82\n2.97\n4.50\n1.81\n5.80\n4.86\n276\n0\n276\n0.00\n80\n0\n0\n0\n0\n0\n0\n19\n0\n0\n0\n7\n0\n39\n15\n0\n0\n0\n19\n7\n19\n7\n54\n54\n0\n0\n7\n0\n0\n19\n19\n0\n23.75\n0.00\n3.45\n115,897.00\n11,095.00\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\n12,192\n2,590\n7,846\n362\n9\n871\n21\n79\n414\n21.24\n64.35\n2.97\n0.07\n7.14\n0.17\n0.65\n3.40\n12,192\n1,722\n10,470\n14.12\n3,914\n211\n171\n68\n177\n65\n115\n152\n100\n137\n192\n274\n580\n485\n461\n474\n252\n627\n569\n466\n1,196\n1,046\n946\n1,969\n574\n168\n797\n118\n44\n1,148\n569\n397\n32.22\n15.56\n3.09\n83,285.07\n33,660.07\n\n\nRIVER'S EDGE MARINA & RESORT\n743\n29\n663\n24\n0\n0\n0\n0\n27\n3.90\n89.23\n3.23\n0.00\n0.00\n0.00\n0.00\n3.63\n743\n267\n476\n35.94\n414\n72\n69\n21\n23\n16\n5\n4\n19\n11\n0\n57\n30\n53\n0\n12\n22\n185\n55\n57\n240\n87\n53\n71\n30\n30\n255\n27\n7\n88\n59\n59\n28.02\n23.19\n1.79\n38,125.00\n33,103.00\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\n1,346\n480\n101\n44\n0\n721\n0\n0\n0\n35.66\n7.50\n3.27\n0.00\n53.57\n0.00\n0.00\n0.00\n1,346\n648\n698\n48.14\n525\n65\n95\n53\n58\n45\n0\n0\n25\n12\n39\n8\n78\n22\n25\n0\n0\n271\n82\n47\n353\n125\n47\n21\n9\n9\n90\n9\n0\n414\n239\n177\n48.95\n35.43\n2.53\n22,380.00\n16,689.00\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\n194,249\n42,630\n98,765\n17,930\n863\n20,917\n589\n858\n11,697\n21.95\n50.84\n9.23\n0.44\n10.77\n0.30\n0.44\n6.02\n192,018\n33,878\n158,140\n17.64\n73,026\n3,857\n2,907\n3,166\n2,864\n3,286\n3,070\n3,370\n2,911\n2,350\n5,545\n6,753\n10,246\n6,419\n4,320\n5,621\n6,341\n12,794\n14,987\n12,298\n27,781\n22,544\n10,739\n23,416\n7,027\n2,817\n12,088\n2,097\n1,150\n37,522\n21,121\n10,355\n41.42\n19.61\n2.63\n74,261.37\n35,625.55\n\n\nSAN JUAN WATER DISTRICT\n33,974\n3,762\n24,292\n877\n358\n2,904\n16\n114\n1,651\n11.07\n71.50\n2.58\n1.05\n8.55\n0.05\n0.34\n4.86\n33,844\n1,944\n31,900\n5.74\n12,190\n435\n173\n111\n277\n149\n164\n113\n168\n152\n507\n847\n1,203\n1,025\n961\n1,209\n4,696\n996\n746\n1,354\n1,742\n2,557\n1,986\n7,042\n1,987\n767\n3,340\n571\n355\n1,808\n823\n374\n27.74\n12.27\n2.77\n158,425.50\n72,077.20\n\n\nSCWA - ARDEN PARK VISTA\n6,785\n741\n5,476\n21\n11\n224\n7\n38\n267\n10.92\n80.71\n0.31\n0.16\n3.30\n0.10\n0.56\n3.94\n6,785\n167\n6,618\n2.46\n2,700\n34\n0\n0\n41\n27\n21\n0\n18\n143\n76\n137\n132\n486\n163\n364\n1,058\n75\n209\n213\n284\n345\n649\n1,804\n540\n90\n622\n59\n17\n274\n101\n35\n25.93\n5.26\n2.51\n157,292.32\n97,133.30\n\n\nSCWA - LAGUNA/VINEYARD\n144,615\n27,638\n37,486\n16,721\n246\n50,168\n2,369\n511\n9,476\n19.11\n25.92\n11.56\n0.17\n34.69\n1.64\n0.35\n6.55\n144,375\n14,745\n129,630\n10.21\n44,886\n1,727\n746\n702\n860\n880\n1,341\n881\n734\n733\n2,355\n3,164\n5,995\n5,376\n5,206\n6,452\n7,734\n4,035\n4,569\n5,519\n8,604\n11,514\n10,582\n24,202\n7,017\n2,856\n7,812\n857\n488\n12,872\n6,493\n3,461\n32.01\n15.16\n3.21\n113,303.64\n41,108.15\n\n\nSCWA MATHER-SUNRISE\n17,931\n2,625\n8,107\n1,481\n21\n4,350\n169\n59\n1,119\n14.64\n45.21\n8.26\n0.12\n24.26\n0.94\n0.33\n6.24\n17,893\n1,028\n16,865\n5.75\n5,405\n236\n34\n97\n57\n65\n34\n6\n21\n37\n183\n321\n511\n647\n742\n979\n1,435\n424\n163\n504\n587\n1,015\n1,389\n3,676\n856\n261\n846\n62\n43\n883\n311\n160\n22.74\n8.58\n3.30\n147,954.90\n47,223.50\n\n\nSEQUOIA WATER ASSOC\n1,130\n504\n518\n0\n0\n67\n0\n0\n41\n44.60\n45.84\n0.00\n0.00\n5.93\n0.00\n0.00\n3.63\n1,130\n178\n952\n15.75\n437\n28\n11\n16\n0\n25\n11\n0\n28\n27\n11\n168\n0\n3\n18\n17\n74\n55\n91\n179\n146\n179\n21\n150\n0\n0\n60\n28\n28\n227\n79\n36\n24.49\n14.65\n2.49\n68,248.00\n38,950.00\n\n\nSOUTHWEST TRACT W M D [SWS]\n2,002\n332\n490\n274\n31\n863\n12\n0\n0\n16.58\n24.48\n13.69\n1.55\n43.11\n0.60\n0.00\n0.00\n2,002\n437\n1,565\n21.83\n653\n7\n24\n80\n0\n83\n0\n0\n118\n134\n36\n28\n53\n0\n15\n24\n51\n111\n335\n64\n446\n117\n15\n37\n12\n0\n96\n0\n0\n520\n331\n81\n52.53\n12.40\n3.04\n45,671.00\n36,348.00\n\n\nSPINDRIFT MARINA\n743\n29\n663\n24\n0\n0\n0\n0\n27\n3.90\n89.23\n3.23\n0.00\n0.00\n0.00\n0.00\n3.63\n743\n267\n476\n35.94\n414\n72\n69\n21\n23\n16\n5\n4\n19\n11\n0\n57\n30\n53\n0\n12\n22\n185\n55\n57\n240\n87\n53\n71\n30\n30\n255\n27\n7\n88\n59\n59\n28.02\n23.19\n1.79\n38,125.00\n33,103.00\n\n\nTOKAY PARK WATER CO\n1,676\n539\n375\n116\n0\n565\n0\n0\n81\n32.16\n22.37\n6.92\n0.00\n33.71\n0.00\n0.00\n4.83\n1,676\n312\n1,364\n18.62\n474\n7\n6\n8\n61\n0\n0\n40\n18\n33\n57\n74\n86\n44\n7\n33\n0\n82\n91\n131\n173\n217\n51\n225\n100\n16\n132\n0\n0\n117\n94\n30\n40.93\n9.70\n3.54\n61,750.00\n19,812.00\n\n\nTUNNEL TRAILER PARK\n581\n289\n203\n0\n0\n27\n0\n0\n62\n49.74\n34.94\n0.00\n0.00\n4.65\n0.00\n0.00\n10.67\n581\n0\n581\n0.00\n197\n0\n0\n0\n17\n0\n0\n0\n0\n0\n31\n0\n16\n21\n0\n112\n0\n17\n0\n31\n17\n47\n21\n91\n32\n0\n67\n8\n0\n39\n0\n0\n20.30\n0.00\n2.95\n153,092.00\n42,507.00\n\n\nVIEIRA'S RESORT, INC\n770\n319\n404\n0\n0\n35\n0\n0\n12\n41.43\n52.47\n0.00\n0.00\n4.55\n0.00\n0.00\n1.56\n770\n174\n596\n22.60\n380\n29\n30\n11\n15\n18\n8\n23\n18\n4\n49\n29\n17\n71\n23\n0\n35\n85\n71\n78\n156\n95\n94\n143\n89\n28\n154\n45\n40\n83\n20\n15\n40.53\n21.84\n2.03\n51,977.00\n40,522.00\n\n\nWESTERNER MOBILE HOME PARK\n3,479\n612\n613\n985\n19\n1,091\n0\n0\n159\n17.59\n17.62\n28.31\n0.55\n31.36\n0.00\n0.00\n4.57\n3,430\n815\n2,615\n23.76\n1,085\n115\n0\n12\n12\n73\n15\n48\n67\n0\n236\n100\n104\n196\n12\n76\n19\n139\n203\n336\n342\n440\n208\n429\n205\n94\n94\n36\n36\n562\n376\n190\n56.87\n29.49\n3.16\n59,296.00\n23,437.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9.1.2 Investigate / Check Assumptions\nFigure 8 shows the census units used in this simplified method to estimate demographics for Sacramento Suburban Water District.\n\nCode\nmapview(census_data_acs_moe %&gt;% \n            filter(water_system_name == system_plot), \n        alpha.regions = 0.8, \n        col.regions = 'grey60',\n        color = 'cyan',\n        # lwd = 1.3, \n        label = 'NAME',  \n        layer.name = 'ACS Data', \n        legend = FALSE) + #  zcol = 'NAME'    \n    mapview(water_systems_sac %&gt;% \n                filter(water_system_name == system_plot), \n            alpha.regions = 0.3, \n            col.regions = 'darkblue',\n            color = 'black',\n            lwd = 1.3, \n            zcol = 'water_system_name',\n            # label = 'water_system_name',\n            layer.name = 'Water System Boundary', \n            legend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 8: Water system Sacramento Suburban Water District (light blue fill / black border) and boundaries of census units (grey fill / blue border) used to estimate water system demographics for the simplified approach.\n\n\n\nWhile this approach may work well for relatively large water systems (where the size of the system is significantly greater than the census units used for the analysis), for smaller water systems this method might be somewhat more problematic, as shown in Figure 9.\n\nCode\nsystem_plot_small &lt;- 'RIO LINDA/ELVERTA COMMUNITY WATER DIST'\n\nmapview(census_data_acs_moe %&gt;% \n            filter(water_system_name == system_plot_small), \n        alpha.regions = 0.8, \n        col.regions = 'grey60',\n        color = 'cyan',\n        # lwd = 1.3, \n        label = 'NAME',  \n        layer.name = 'ACS Data', \n        legend = FALSE) + #  zcol = 'NAME'    \n    mapview(water_systems_sac %&gt;% \n                filter(water_system_name == system_plot_small), \n            alpha.regions = 0.3, \n            col.regions = 'darkblue',\n            color = 'black',\n            lwd = 1.3, \n            zcol = 'water_system_name',\n            # label = 'water_system_name',\n            layer.name = 'Water System Boundary', \n            legend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 9: Water system Rio Linda/Elverta Community Water Dist (light blue fill / black border) and boundaries of census units (grey fill / blue border) used to estimate water system demographics for the simplified approach.\n\n\n\nFigure 10 shows another example of a small system – in this case there are large block groups which the water system only overlaps a small portion of.\n\nCode\nsystem_plot_small_2 &lt;- 'RANCHO MURIETA COMMUNITY SERVI'\n\nmapview(census_data_acs %&gt;% \n            st_filter(water_systems_sac %&gt;% \n                          filter(water_system_name == system_plot_small_2)) %&gt;% \n            filter(!GEOID %in% (census_data_acs_moe %&gt;% \n                                    filter(water_system_name == system_plot_small_2) %&gt;% \n                                    pull(GEOID))), \n        alpha.regions = 0.3, \n        col.regions = 'grey80',\n        color = 'grey30',\n        # lwd = 1.3, \n        label = 'NAME',  \n        layer.name = 'ACS Data - Not Used', \n        legend = FALSE) + #  zcol = 'NAME' \n    mapview(census_data_acs_moe %&gt;% \n                filter(water_system_name == system_plot_small_2), \n            alpha.regions = 0.8, \n            col.regions = 'grey60',\n            color = 'cyan',\n            # lwd = 1.3, \n            label = 'NAME',  \n            layer.name = 'ACS Data - Used', \n            legend = FALSE) + #  zcol = 'NAME'    \n    mapview(water_systems_sac %&gt;% \n                filter(water_system_name == system_plot_small_2), \n            alpha.regions = 0.3, \n            col.regions = 'darkblue',\n            color = 'black',\n            lwd = 1.3, \n            zcol = 'water_system_name',\n            # label = 'water_system_name',\n            layer.name = 'Water System Boundary', \n            legend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 10: Water system Rancho Murieta Community Servi (light blue fill / black border), boundaries of census units (dark grey fill / blue border) used to estimate water system demographics for the simplified approach, and boundaries of census units overlapping the water system but not included in the demographic estimates (light grey fill).\n\n\n\n\n\n\n9.2 Population Weighted Areal Interpolation\nThe tidycensus package has a function for performing population weighted areal interpolation, interpolate_pw. Note that this is somewhat different than the population weighted interpolation procedure applied above in Section 6.5 (which starts with areal interpolation to estimate count data). Instead the interpolate_pw function “takes into account the distribution of the population within a Census unit to intelligently transfer data between incongruent units” – in more detail (from here):\n\nAn alternative method, population-weighted areal interpolation, can represent an improvement. As opposed to using area-based weights, population-weighted techniques estimate the populations of the intersections between origin and destination from a third dataset, then use those values for interpolation weights.\n\n\nThis method is implemented in tidycensus with the interpolate_pw() function. This function is specified in a similar way to st_interpolate_aw(), but also requires a third dataset to be used as weights, and optionally a weight column to determine the relative influence of each feature in the weights dataset.\n\nAccording to the documentation for the interpolate_pw function, the approach it implements is based on Esri’s data apportionment algorithm – more information about that can be found here and here.\n\n\n\n\n\n\nWarning\n\n\n\nMargins of error (MOEs) for estimated values cannot be calculated directly using the interpolate_pw function (and may be difficult to calculate at all) – the interpolate_pw documentation states: Margins of error in the ACS will not be transferred correctly with this function, so please use with caution\n\n\nOne drawback of using this approach is that it may not work well in cases where the overall area covered by the target area is significantly smaller than the area covered by the source dataset – for example, small water systems are often not given an estimated value using this method and NAs are returned for many of those areas (even if NA values are removed from the source data first). More research / feedback may be needed on how applicable this approach may be for certain use cases. It may also be somewhat difficult to explain and intrepret the results.\n\n9.2.1 Interpolate\nFor these computations, we can use the ACS data that was accessed above in Section 5.2 and transformed in Section 6.3, and the decennial census data that was accessed above in Section 5.3.\n\n9.2.1.1 Extensive (Count) Variables\nFirst interpolate data for the ‘extensive’ (count) variables, by computing weighted sums for those variables:\n\n# population weighted variables ----\nwater_system_demographics_interpolate_pw_extensive_pop &lt;- interpolate_pw(\n    from = census_data_acs %&gt;%\n        filter(!is.na(population_total_count)) %&gt;% \n        select(starts_with(c('population_', 'poverty_')) & ends_with('_count')),\n    to = water_systems_sac,\n    to_id = 'water_system_name',\n    extensive = TRUE, # use TRUE for count data - returns weighted sums\n    weights = census_data_decennial,\n    # weight_placement = 'surface',\n    weight_column = 'population_total_count') %&gt;%\n    mutate(across(\n        .cols = ends_with('_count'),\n        .fns = ~ round(.x, 0)\n    )) %&gt;% \n    arrange(water_system_name)\n\n# household weighted variables ----\nwater_system_demographics_interpolate_pw_extensive_hh &lt;- interpolate_pw(\n    from = census_data_acs %&gt;%\n        filter(!is.na(population_total_count)) %&gt;% \n        select(starts_with('households_') & ends_with('_count')),\n    to = water_systems_sac,\n    to_id = 'water_system_name',\n    extensive = TRUE, # use TRUE for count data - returns weighted sums\n    weights = census_data_decennial,\n    # weight_placement = 'surface',\n    weight_column = 'households_count') %&gt;%\n    mutate(across(\n        .cols = ends_with('_count'),\n        .fns = ~ round(.x, 0)\n    )) %&gt;% \n    arrange(water_system_name) %&gt;% \n    st_drop_geometry() # only need to keep geometry for 1 group - joining them all below\n\n\n\n\n9.2.2 Interpolate Intensive Variables\nThen interpolate data for the remaining ‘intensive’ variables, by computing weighted means for those variables:\n\n# population weighted variables ----\nwater_system_demographics_interpolate_pw_intensive_pop &lt;- interpolate_pw(\n    from = census_data_acs %&gt;%\n        filter(!is.na(population_total_count)) %&gt;% \n        select(per_capita_income),\n    to = water_systems_sac,\n    to_id = 'water_system_name',\n    extensive = FALSE, # use FALSE to get weighted means\n    weights = census_data_decennial,\n    # weight_placement = 'surface',\n    weight_column = 'population_total_count') %&gt;%\n    mutate(per_capita_income = round(per_capita_income, 0)) %&gt;%\n    arrange(water_system_name) %&gt;% \n    st_drop_geometry() # only need to keep geometry for 1 group - joining them all below\n\n# household weighted variables ----\nwater_system_demographics_interpolate_pw_intensive_hh &lt;- interpolate_pw(\n    from = census_data_acs %&gt;%\n        filter(!is.na(population_total_count)) %&gt;% \n        select(average_household_size, \n               median_household_income),\n    to = water_systems_sac,\n    to_id = 'water_system_name',\n    extensive = FALSE, # use FALSE to get weighted means\n    weights = census_data_decennial,\n    # weight_placement = 'surface',\n    weight_column = 'households_count') %&gt;%\n    mutate(average_household_size = round(average_household_size, 2),\n           median_household_income = round(median_household_income, 0)) %&gt;% \n    arrange(water_system_name) %&gt;% \n    st_drop_geometry() # only need to keep geometry for 1 group - joining them all below\n\n\n\n9.2.3 Join All Variables\nThen join the datasets with the two types of variables:\n\nwater_system_demographics_interpolate_pw &lt;- \n    water_system_demographics_interpolate_pw_extensive_pop %&gt;% \n    left_join(water_system_demographics_interpolate_pw_extensive_hh, \n              by = 'water_system_name') %&gt;% \n    left_join(water_system_demographics_interpolate_pw_intensive_pop, \n          by = 'water_system_name') %&gt;% \n    left_join(water_system_demographics_interpolate_pw_intensive_hh, \n          by = 'water_system_name')\n\n\n\n9.2.4 Compute Additional Aggregated Data\nSince computing a weighted mean for the median household income may be somewhat inaccurate (as noted above in Caution 1), it may also be worth calculating a grouped median household income based on the income bracket data:\n\n# TO DO: Compute grouped median incomes\n\nUsing the aggregated data, we can also compute some additional metrics for each system, like ethnic/racial group portions, poverty rates, income distributions, etc.:\n\n# race / ethnicity ----\nwater_system_demographics_interpolate_pw &lt;- water_system_demographics_interpolate_pw %&gt;%\n    mutate(\n        across(\n            .cols = starts_with('population_'),\n            .fns = ~ ifelse(population_total_count == 0,\n                            NA,\n                            round(.x / population_total_count * 100, 2)),\n            .names = \"{str_replace(.col, '_count', '_percent')}\"\n        ),\n        .after = population_multiple_count) %&gt;% \n    select(-population_total_percent) # this always equals 1, not needed\n\n# poverty rate ----\nwater_system_demographics_interpolate_pw &lt;- water_system_demographics_interpolate_pw %&gt;% \n    mutate(poverty_rate_percent = case_when(\n        population_total_count == 0 ~ NA,\n        poverty_total_assessed_count == 0 ~ 0,\n        .default = 100 * poverty_below_level_count / poverty_total_assessed_count\n    ), \n    .after = poverty_above_level_count)\n\n# consistent income brackets ----\n## 25k brackets ----\nwater_system_demographics_interpolate_pw &lt;- water_system_demographics_interpolate_pw %&gt;% \n    mutate(households_income_25k_brackets_0_25k_count = \n               households_income_below_10k_count + \n               households_income_10k_15k_count + \n               households_income_15k_20k_count +\n               households_income_20k_25k_count,\n           households_income_25k_brackets_25k_50k_count =\n               households_income_25k_30k_count + \n               households_income_30k_35k_count +\n               households_income_35k_40k_count +\n               households_income_40k_45k_count +\n               households_income_45k_50k_count,\n           households_income_25k_brackets_50k_75k_count =\n               households_income_50k_60k_count +\n               households_income_60k_75k_count,\n           .after = households_income_above_200k_count\n    ) # note: above 75k is already in 25k increments\n\n## 50k brackets ----\nwater_system_demographics_interpolate_pw &lt;- water_system_demographics_interpolate_pw %&gt;% \n    mutate(households_income_50k_brackets_0_50k_count = \n               households_income_below_10k_count + \n               households_income_10k_15k_count + \n               households_income_15k_20k_count +\n               households_income_20k_25k_count + \n               households_income_25k_30k_count + \n               households_income_30k_35k_count +\n               households_income_35k_40k_count +\n               households_income_40k_45k_count +\n               households_income_45k_50k_count,\n           households_income_50k_brackets_50k_100k_count =\n               households_income_50k_60k_count +\n               households_income_60k_75k_count +\n               households_income_75k_100k_count,\n           households_income_50k_brackets_100k_150k_count =\n               households_income_100k_125k_count +\n               households_income_125k_150k_count,\n           .after = households_income_25k_brackets_50k_75k_count\n    ) # note: above 150k is already in 50k increments\n\n# portion of households paying more than 30% / 50% of income on housing ----\nwater_system_demographics_interpolate_pw &lt;- water_system_demographics_interpolate_pw %&gt;%\n    mutate(households_all_housing_costs_over30pct_percent = \n               ifelse(households_count == 0, \n                      NA,\n                      100 * (households_mortgage_housing_costs_over30pct_count + \n                                 households_no_mortgage_housing_costs_over30pct_count +\n                                 households_rent_housing_costs_over30pct_count) / \n                          households_count), \n           .after = households_rent_housing_costs_over50pct_count) %&gt;% \n    mutate(households_all_housing_costs_over50pct_percent = \n               ifelse(households_count == 0, \n                      NA,\n                      100 * (households_mortgage_housing_costs_over50pct_count + \n                                 households_no_mortgage_housing_costs_over50pct_count +\n                                 households_rent_housing_costs_over50pct_count) / \n                          households_count\n               ),\n           .after = households_all_housing_costs_over30pct_percent)\n\n# round values ----\nwater_system_demographics_interpolate_pw &lt;- water_system_demographics_interpolate_pw %&gt;%\n    mutate(\n        across(\n            .cols = ends_with('_count'),\n            .fns = ~ round(.x, 0)\n        ))  %&gt;%\n    mutate(\n        across(\n            .cols = ends_with('_percent'),\n            .fns = ~ round(.x, 2)\n        ))\n\n\n\n9.2.5 View Results\nNote that this process returns NAs for 17 water systems, which generally appear to be relatively smaller systems.\nTable 5 shows a comparison of the water system populations estimated using interpolate_pw and the reported system populations.\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_demographics_interpolate_pw %&gt;%\n    select(water_system_name, population_total_count) %&gt;% \n    st_drop_geometry() %&gt;% \n    left_join(water_systems_sac %&gt;%\n                  st_drop_geometry() %&gt;%\n                  select(water_system_service_connections, \n                         water_system_population_reported, \n                         water_system_name),\n              by = 'water_system_name') %&gt;% \n    arrange(desc(water_system_population_reported)) %&gt;% \n    relocate(water_system_service_connections, water_system_population_reported, \n             .before = population_total_count) %&gt;% \n    mutate(population_percent_difference =\n               round(100 * (population_total_count - water_system_population_reported) / \n                         water_system_population_reported, \n                     2), \n           .after = population_total_count) %&gt;% \n    mutate(population_percent_difference = pct_format(\n        population_percent_difference / 100)\n    ) %&gt;%\n    rename('Service Connections' = water_system_service_connections,\n           'Reported Population' = water_system_population_reported,\n           'Estimated Population' = population_total_count,\n           'Percent Difference' = population_percent_difference) %&gt;% \n    kable(align = 'c', \n          format.args = list(big.mark = ',')) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 5: Results Comparison - estimated population with interpolate_pw() vs. reported population (Sorted Largest to Smallest by Reported Population)\n\n\n\n\n\n\n\n\nwater_system_name\nService Connections\nReported Population\nEstimated Population\nPercent Difference\n\n\n\n\nCITY OF SACRAMENTO MAIN\n142,794\n510,931\n525,914\n2.93%\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\n46,573\n184,385\n190,956\n3.56%\n\n\nSCWA - LAGUNA/VINEYARD\n47,411\n172,666\n157,847\n-8.58%\n\n\nFOLSOM, CITY OF - MAIN\n21,424\n68,122\n65,206\n-4.28%\n\n\nCITRUS HEIGHTS WATER DISTRICT\n19,940\n65,911\n69,931\n6.10%\n\n\nCALAM - SUBURBAN ROSEMONT\n16,238\n53,563\n60,288\n12.56%\n\n\nCALAM - PARKWAY\n14,779\n48,738\n57,391\n17.75%\n\n\nCALAM - LINCOLN OAKS\n14,390\n47,487\n44,168\n-6.99%\n\n\nGOLDEN STATE WATER CO. - CORDOVA\n14,798\n44,928\n48,645\n8.27%\n\n\nELK GROVE WATER SERVICE\n12,882\n42,540\n42,834\n0.69%\n\n\nCARMICHAEL WATER DISTRICT\n11,704\n37,897\n39,773\n4.95%\n\n\nFAIR OAKS WATER DISTRICT\n14,293\n35,114\n38,819\n10.55%\n\n\nCALAM - ANTELOPE\n10,528\n34,720\n36,641\n5.53%\n\n\nSAN JUAN WATER DISTRICT\n10,672\n29,641\n30,997\n4.57%\n\n\nGALT, CITY OF\n7,471\n26,536\n27,287\n2.83%\n\n\nSCWA MATHER-SUNRISE\n6,921\n22,839\n19,629\n-14.05%\n\n\nORANGE VALE WATER COMPANY\n5,684\n18,005\n17,910\n-0.53%\n\n\nCAL AM FRUITRIDGE VISTA\n4,667\n15,385\n21,116\n37.25%\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\n4,621\n14,381\n15,102\n5.01%\n\n\nSCWA - ARDEN PARK VISTA\n3,043\n10,035\n9,617\n-4.17%\n\n\nFOLSOM STATE PRISON\n2,790\n9,703\n32\n-99.67%\n\n\nFLORIN COUNTY WATER DISTRICT\n2,323\n7,831\n11,114\n41.92%\n\n\nRANCHO MURIETA COMMUNITY SERVI\n2,726\n5,744\n4,853\n-15.51%\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\n1,716\n5,125\n6,516\n27.14%\n\n\nDEL PASO MANOR COUNTY WATER DI\n1,796\n4,520\n5,784\n27.96%\n\n\nCALAM - ARDEN\n1,185\n3,908\n11,512\n194.58%\n\n\nFOLSOM, CITY OF - ASHLAND\n1,079\n3,538\n3,719\n5.12%\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\n13\n2,800\nNA\nNA\n\n\nCALAM - ISLETON\n480\n1,581\n519\n-67.17%\n\n\nMC CLELLAN MHP\n199\n700\n412\n-41.14%\n\n\nCALAM - WALNUT GROVE\n197\n651\n388\n-40.40%\n\n\nCALIFORNIA STATE FAIR\n269\n650\nNA\nNA\n\n\nTOKAY PARK WATER CO\n198\n525\n530\n0.95%\n\n\nLAGUNA DEL SOL INC\n112\n470\nNA\nNA\n\n\nOLYMPIA MOBILODGE\n200\n450\n176\n-60.89%\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\n164\n350\nNA\nNA\n\n\nEAST WALNUT GROVE [SWS]\n166\n300\n347\n15.67%\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\n136\n262\n368\n40.46%\n\n\nEL DORADO MOBILE HOME PARK\n128\n256\n1,031\n302.73%\n\n\nRANCHO MARINA\n77\n250\nNA\nNA\n\n\nHOLIDAY MOBILE VILLAGE\n115\n200\nNA\nNA\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\n186\n200\n242\n21.00%\n\n\nEL DORADO WEST MHP\n128\n172\n227\n31.98%\n\n\nKORTHS PIRATES LAIR\n64\n150\nNA\nNA\n\n\nRIVER'S EDGE MARINA & RESORT\n83\n150\nNA\nNA\n\n\nSOUTHWEST TRACT W M D [SWS]\n33\n150\n183\n22.00%\n\n\nVIEIRA'S RESORT, INC\n107\n150\n67\n-55.33%\n\n\nB & W RESORT MARINA\n37\n100\nNA\nNA\n\n\nHOOD WATER MAINTENCE DIST [SWS]\n82\n100\n74\n-26.00%\n\n\nSPINDRIFT MARINA\n50\n100\n13\n-87.00%\n\n\nLOCKE WATER WORKS CO [SWS]\n44\n80\n76\n-5.00%\n\n\nWESTERNER MOBILE HOME PARK\n49\n65\n20\n-69.23%\n\n\nHAPPY HARBOR (SWS)\n45\n60\nNA\nNA\n\n\nSEQUOIA WATER ASSOC\n18\n54\nNA\nNA\n\n\nPLANTATION MOBILE HOME PARK\n44\n44\nNA\nNA\n\n\nTUNNEL TRAILER PARK\n21\n44\nNA\nNA\n\n\nFREEPORT MARINA\n27\n42\n105\n150.00%\n\n\nEDGEWATER MOBILE HOME PARK\n22\n40\nNA\nNA\n\n\nMAGNOLIA MUTUAL WATER\n34\n40\n96\n140.00%\n\n\nLINCOLN CHAN-HOME RANCH\n19\n33\nNA\nNA\n\n\nLAGUNA VILLAGE RV PARK\n28\n32\nNA\nNA\n\n\nDELTA CROSSING MHP\n22\n30\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\nTable 6 shows all demographic variables estimated using the population weighted areal interpolation approach with the tidycensus interpolate_pw function.\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_demographics_interpolate_pw %&gt;%\n    st_drop_geometry() %&gt;% \n    mutate(across(\n        .cols = ends_with('_percent'),\n        .fns = ~ pct_format(. / 100))\n    ) %&gt;%\n    rename_with(.cols = everything(), \n                .fn = ~ str_replace_all(., pattern = '_', replacement = ' ') %&gt;% \n                    str_to_title(.)) %&gt;% \n    kable(align = 'c', \n          format.args = list(big.mark = ',')\n    ) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 6: Estimated Water System Demographics\n\n\n\n\n\n\n\n\nWater System Name\nPopulation Total Count\nPopulation Hispanic Or Latino Count\nPopulation White Count\nPopulation Black Or African American Count\nPopulation Native American Or Alaska Native Count\nPopulation Asian Count\nPopulation Pacific Islander Count\nPopulation Other Count\nPopulation Multiple Count\nPopulation Hispanic Or Latino Percent\nPopulation White Percent\nPopulation Black Or African American Percent\nPopulation Native American Or Alaska Native Percent\nPopulation Asian Percent\nPopulation Pacific Islander Percent\nPopulation Other Percent\nPopulation Multiple Percent\nPoverty Total Assessed Count\nPoverty Below Level Count\nPoverty Above Level Count\nPoverty Rate Percent\nHouseholds Count\nHouseholds Income Below 10k Count\nHouseholds Income 10k 15k Count\nHouseholds Income 15k 20k Count\nHouseholds Income 20k 25k Count\nHouseholds Income 25k 30k Count\nHouseholds Income 30k 35k Count\nHouseholds Income 35k 40k Count\nHouseholds Income 40k 45k Count\nHouseholds Income 45k 50k Count\nHouseholds Income 50k 60k Count\nHouseholds Income 60k 75k Count\nHouseholds Income 75k 100k Count\nHouseholds Income 100k 125k Count\nHouseholds Income 125k 150k Count\nHouseholds Income 150k 200k Count\nHouseholds Income Above 200k Count\nHouseholds Income 25k Brackets 0 25k Count\nHouseholds Income 25k Brackets 25k 50k Count\nHouseholds Income 25k Brackets 50k 75k Count\nHouseholds Income 50k Brackets 0 50k Count\nHouseholds Income 50k Brackets 50k 100k Count\nHouseholds Income 50k Brackets 100k 150k Count\nHouseholds Mortgage Total Count\nHouseholds Mortgage Housing Costs Over30pct Count\nHouseholds Mortgage Housing Costs Over50pct Count\nHouseholds No Mortgage Total Count\nHouseholds No Mortgage Housing Costs Over30pct Count\nHouseholds No Mortgage Housing Costs Over50pct Count\nHouseholds Rent Total Count\nHouseholds Rent Housing Costs Over30pct Count\nHouseholds Rent Housing Costs Over50pct Count\nHouseholds All Housing Costs Over30pct Percent\nHouseholds All Housing Costs Over50pct Percent\nPer Capita Income\nAverage Household Size\nMedian Household Income\n\n\n\n\nB & W RESORT MARINA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCAL AM FRUITRIDGE VISTA\n21,116\n9,912\n3,307\n2,694\n115\n3,906\n239\n86\n855\n46.94%\n15.66%\n12.76%\n0.54%\n18.50%\n1.13%\n0.41%\n4.05%\n21,071\n5,950\n15,121\n28.24%\n6,345\n345\n306\n508\n226\n356\n295\n332\n318\n514\n631\n836\n695\n404\n208\n239\n133\n1,385\n1,815\n1,467\n3,200\n2,162\n612\n1,497\n711\n342\n1,038\n88\n58\n3,810\n2,001\n968\n44.13%\n21.56%\n20,451\n3.25\n52,550\n\n\nCALAM - ANTELOPE\n36,641\n5,854\n21,441\n3,550\n134\n3,192\n75\n275\n2,119\n15.98%\n58.52%\n9.69%\n0.37%\n8.71%\n0.20%\n0.75%\n5.78%\n36,527\n3,694\n32,833\n10.11%\n11,842\n365\n221\n108\n144\n123\n515\n275\n408\n497\n837\n1,203\n1,890\n1,646\n1,230\n1,299\n1,082\n838\n1,818\n2,040\n2,656\n3,930\n2,876\n6,196\n2,076\n718\n1,920\n199\n120\n3,726\n1,925\n736\n35.47%\n13.29%\n35,072\n3.17\n94,331\n\n\nCALAM - ARDEN\n11,512\n3,792\n2,741\n2,296\n113\n1,267\n65\n98\n1,142\n32.94%\n23.81%\n19.94%\n0.98%\n11.01%\n0.56%\n0.85%\n9.92%\n11,424\n3,594\n7,830\n31.46%\n4,409\n212\n310\n270\n189\n425\n208\n158\n268\n249\n511\n465\n595\n265\n160\n66\n59\n981\n1,308\n976\n2,289\n1,571\n425\n277\n92\n54\n145\n10\n5\n3,987\n2,496\n1,393\n58.92%\n32.93%\n23,210\n2.62\n49,757\n\n\nCALAM - ISLETON\n519\n215\n272\n0\n0\n24\n0\n0\n8\n41.43%\n52.41%\n0.00%\n0.00%\n4.62%\n0.00%\n0.00%\n1.54%\n519\n117\n401\n22.54%\n235\n18\n19\n7\n9\n11\n5\n14\n11\n2\n30\n18\n11\n44\n14\n0\n22\n53\n43\n48\n96\n59\n58\n89\n55\n17\n95\n28\n25\n51\n12\n9\n40.43%\n21.70%\n40,522\n2.03\n51,977\n\n\nCALAM - LINCOLN OAKS\n44,168\n9,337\n27,315\n1,566\n143\n2,744\n299\n238\n2,526\n21.14%\n61.84%\n3.55%\n0.32%\n6.21%\n0.68%\n0.54%\n5.72%\n44,067\n4,131\n39,936\n9.37%\n15,916\n750\n392\n297\n654\n471\n606\n563\n633\n640\n1,084\n1,663\n2,519\n1,908\n1,312\n1,582\n840\n2,093\n2,913\n2,747\n5,006\n5,266\n3,220\n7,710\n2,817\n965\n3,411\n519\n312\n4,795\n2,445\n1,289\n36.32%\n16.12%\n33,847\n2.73\n82,056\n\n\nCALAM - PARKWAY\n57,391\n18,307\n8,731\n6,680\n16\n18,900\n1,311\n138\n3,309\n31.90%\n15.21%\n11.64%\n0.03%\n32.93%\n2.28%\n0.24%\n5.77%\n57,206\n9,646\n47,560\n16.86%\n17,388\n1,045\n738\n501\n706\n681\n637\n733\n710\n726\n1,133\n1,916\n2,466\n1,598\n1,471\n1,509\n819\n2,990\n3,487\n3,049\n6,477\n5,515\n3,069\n7,044\n2,725\n1,057\n3,320\n626\n372\n7,024\n3,474\n1,877\n39.25%\n19.01%\n27,100\n3.26\n72,531\n\n\nCALAM - SUBURBAN ROSEMONT\n60,288\n14,475\n25,934\n7,866\n92\n7,477\n403\n252\n3,791\n24.01%\n43.02%\n13.05%\n0.15%\n12.40%\n0.67%\n0.42%\n6.29%\n60,053\n8,956\n51,098\n14.91%\n21,905\n1,196\n622\n512\n761\n705\n583\n623\n929\n658\n1,327\n2,607\n3,521\n2,740\n1,650\n1,717\n1,754\n3,091\n3,498\n3,934\n6,589\n7,455\n4,390\n8,482\n2,323\n767\n3,612\n438\n280\n9,811\n4,769\n2,461\n34.38%\n16.01%\n34,894\n2.71\n80,855\n\n\nCALAM - WALNUT GROVE\n388\n173\n178\n0\n0\n23\n0\n0\n14\n44.59%\n45.88%\n0.00%\n0.00%\n5.93%\n0.00%\n0.00%\n3.61%\n388\n61\n327\n15.72%\n131\n8\n3\n5\n0\n8\n3\n0\n8\n8\n3\n50\n0\n1\n5\n5\n22\n16\n27\n53\n43\n53\n6\n45\n0\n0\n18\n8\n8\n68\n24\n11\n24.43%\n14.50%\n38,950\n2.49\n68,248\n\n\nCALIFORNIA STATE FAIR\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCARMICHAEL WATER DISTRICT\n39,773\n6,291\n25,197\n2,330\n69\n3,381\n303\n34\n2,169\n15.82%\n63.35%\n5.86%\n0.17%\n8.50%\n0.76%\n0.09%\n5.45%\n39,215\n5,156\n34,059\n13.15%\n16,170\n593\n553\n524\n483\n404\n640\n537\n695\n563\n1,024\n1,585\n1,797\n1,734\n1,195\n1,695\n2,149\n2,153\n2,839\n2,609\n4,992\n4,406\n2,929\n5,274\n1,382\n658\n3,148\n368\n185\n7,748\n4,228\n2,169\n36.97%\n18.63%\n47,034\n2.42\n96,132\n\n\nCITRUS HEIGHTS WATER DISTRICT\n69,931\n12,382\n48,970\n2,121\n169\n2,937\n63\n109\n3,179\n17.71%\n70.03%\n3.03%\n0.24%\n4.20%\n0.09%\n0.16%\n4.55%\n69,598\n7,030\n62,568\n10.10%\n26,144\n1,039\n558\n451\n776\n682\n903\n854\n747\n1,170\n1,891\n3,108\n4,009\n2,816\n2,364\n2,623\n2,151\n2,824\n4,356\n4,999\n7,180\n9,008\n5,180\n10,519\n3,616\n1,407\n4,397\n542\n280\n11,228\n5,891\n2,656\n38.44%\n16.61%\n37,917\n2.63\n82,781\n\n\nCITY OF SACRAMENTO MAIN\n525,914\n153,814\n161,552\n63,193\n1,260\n101,462\n9,247\n3,111\n32,276\n29.25%\n30.72%\n12.02%\n0.24%\n19.29%\n1.76%\n0.59%\n6.14%\n518,519\n77,904\n440,616\n15.02%\n196,941\n9,545\n9,421\n6,228\n6,550\n5,804\n6,297\n6,329\n6,159\n6,776\n13,337\n17,446\n27,363\n20,880\n15,500\n18,088\n21,218\n31,744\n31,365\n30,783\n63,109\n58,146\n36,380\n69,380\n22,304\n8,410\n30,441\n3,513\n1,821\n97,119\n47,626\n24,694\n37.29%\n17.73%\n39,584\n2.63\n85,906\n\n\nDEL PASO MANOR COUNTY WATER DI\n5,784\n704\n4,109\n413\n15\n129\n32\n20\n360\n12.17%\n71.04%\n7.14%\n0.26%\n2.23%\n0.55%\n0.35%\n6.22%\n5,784\n659\n5,125\n11.39%\n2,327\n186\n51\n53\n72\n23\n55\n72\n240\n40\n167\n286\n164\n180\n134\n354\n249\n362\n430\n453\n792\n617\n314\n992\n359\n203\n586\n126\n81\n749\n519\n124\n43.15%\n17.53%\n41,038\n2.53\n91,599\n\n\nDELTA CROSSING MHP\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nEAST WALNUT GROVE [SWS]\n347\n155\n159\n0\n0\n21\n0\n0\n13\n44.67%\n45.82%\n0.00%\n0.00%\n6.05%\n0.00%\n0.00%\n3.75%\n347\n55\n292\n15.85%\n109\n7\n3\n4\n0\n6\n3\n0\n7\n7\n3\n42\n0\n1\n4\n4\n18\n14\n23\n45\n37\n45\n5\n37\n0\n0\n15\n7\n7\n56\n20\n9\n24.77%\n14.68%\n38,950\n2.49\n68,248\n\n\nEDGEWATER MOBILE HOME PARK\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nEL DORADO MOBILE HOME PARK\n1,031\n622\n80\n108\n0\n137\n0\n0\n85\n60.33%\n7.76%\n10.48%\n0.00%\n13.29%\n0.00%\n0.00%\n8.24%\n1,025\n442\n583\n43.12%\n352\n41\n71\n0\n27\n41\n6\n0\n55\n11\n53\n3\n7\n0\n32\n0\n6\n139\n113\n56\n252\n63\n32\n23\n0\n0\n71\n39\n39\n258\n126\n71\n46.88%\n31.25%\n17,394\n2.71\n29,468\n\n\nEL DORADO WEST MHP\n227\n137\n18\n24\n0\n30\n0\n0\n19\n60.35%\n7.93%\n10.57%\n0.00%\n13.22%\n0.00%\n0.00%\n8.37%\n226\n97\n128\n42.92%\n70\n8\n14\n0\n5\n8\n1\n0\n11\n2\n10\n1\n1\n0\n6\n0\n1\n27\n22\n11\n49\n12\n6\n5\n0\n0\n14\n8\n8\n51\n25\n14\n47.14%\n31.43%\n17,394\n2.71\n29,468\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\n368\n71\n148\n88\n0\n59\n0\n0\n2\n19.29%\n40.22%\n23.91%\n0.00%\n16.03%\n0.00%\n0.00%\n0.54%\n368\n138\n230\n37.50%\n102\n10\n2\n4\n8\n14\n2\n2\n2\n4\n2\n19\n24\n4\n0\n4\n0\n24\n24\n21\n48\n45\n4\n12\n5\n2\n30\n1\n1\n60\n42\n33\n47.06%\n35.29%\n18,213\n3.28\n60,521\n\n\nELK GROVE WATER SERVICE\n42,834\n7,858\n19,728\n3,260\n68\n8,795\n376\n277\n2,471\n18.35%\n46.06%\n7.61%\n0.16%\n20.53%\n0.88%\n0.65%\n5.77%\n42,447\n3,224\n39,223\n7.60%\n13,356\n414\n227\n241\n221\n347\n101\n359\n294\n244\n672\n1,115\n1,428\n1,535\n1,435\n1,883\n2,841\n1,103\n1,345\n1,787\n2,448\n3,215\n2,970\n7,698\n1,954\n662\n2,849\n287\n113\n2,810\n1,573\n845\n28.56%\n12.13%\n43,902\n3.15\n123,635\n\n\nFAIR OAKS WATER DISTRICT\n38,819\n5,121\n29,158\n712\n107\n1,549\n8\n193\n1,971\n13.19%\n75.11%\n1.83%\n0.28%\n3.99%\n0.02%\n0.50%\n5.08%\n38,557\n3,025\n35,532\n7.85%\n15,250\n582\n354\n117\n244\n208\n390\n207\n479\n312\n840\n1,175\n2,324\n1,566\n1,658\n2,032\n2,763\n1,297\n1,596\n2,015\n2,893\n4,339\n3,224\n7,542\n1,957\n856\n3,304\n279\n117\n4,403\n1,960\n823\n27.51%\n11.78%\n56,497\n2.48\n109,567\n\n\nFLORIN COUNTY WATER DISTRICT\n11,114\n3,375\n1,972\n1,382\n13\n2,980\n892\n93\n406\n30.37%\n17.74%\n12.43%\n0.12%\n26.81%\n8.03%\n0.84%\n3.65%\n10,999\n1,410\n9,588\n12.82%\n3,273\n118\n158\n82\n187\n123\n56\n109\n236\n243\n291\n269\n514\n330\n226\n173\n155\n545\n767\n560\n1,312\n1,074\n556\n1,090\n449\n93\n991\n91\n50\n1,192\n523\n262\n32.48%\n12.37%\n24,859\n3.38\n63,411\n\n\nFOLSOM STATE PRISON\n32\n11\n6\n12\n1\n1\n0\n0\n1\n34.38%\n18.75%\n37.50%\n3.12%\n3.12%\n0.00%\n0.00%\n3.12%\n0\n0\n0\n0.00%\n16\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n3\n3\n10\n0\n0\n0\n0\n0\n0\n6\n0\n0\n0\n0\n0\n0\n16\n0\n0\n0.00%\n0.00%\n2,098\nNaN\n157,857\n\n\nFOLSOM, CITY OF - ASHLAND\n3,719\n232\n2,923\n18\n0\n131\n0\n7\n409\n6.24%\n78.60%\n0.48%\n0.00%\n3.52%\n0.00%\n0.19%\n11.00%\n3,719\n137\n3,582\n3.68%\n1,863\n52\n18\n127\n47\n39\n218\n123\n75\n50\n40\n169\n245\n130\n83\n111\n336\n244\n505\n209\n749\n454\n213\n559\n162\n93\n915\n407\n98\n390\n216\n83\n42.14%\n14.71%\n57,551\n1.96\n70,863\n\n\nFOLSOM, CITY OF - MAIN\n65,206\n8,631\n37,030\n1,705\n104\n13,578\n176\n270\n3,711\n13.24%\n56.79%\n2.61%\n0.16%\n20.82%\n0.27%\n0.41%\n5.69%\n64,934\n3,578\n61,356\n5.51%\n23,500\n840\n223\n401\n512\n421\n294\n361\n399\n471\n708\n1,226\n2,374\n2,473\n1,852\n4,344\n6,603\n1,976\n1,946\n1,934\n3,922\n4,308\n4,325\n11,994\n2,824\n1,233\n3,763\n246\n150\n7,742\n3,183\n1,436\n26.61%\n12.00%\n59,240\n2.75\n141,418\n\n\nFREEPORT MARINA\n105\n73\n30\n0\n0\n0\n0\n0\n2\n69.52%\n28.57%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n1.90%\n105\n18\n87\n17.14%\n33\n4\n0\n0\n0\n0\n0\n6\n3\n2\n4\n4\n5\n4\n0\n0\n1\n4\n11\n8\n15\n13\n4\n4\n4\n0\n13\n4\n4\n15\n6\n4\n42.42%\n24.24%\n23,510\n2.55\n56,250\n\n\nGALT, CITY OF\n27,287\n11,655\n12,708\n556\n24\n1,211\n34\n7\n1,093\n42.71%\n46.57%\n2.04%\n0.09%\n4.44%\n0.12%\n0.03%\n4.01%\n27,128\n1,932\n25,196\n7.12%\n8,755\n205\n187\n361\n255\n172\n387\n193\n398\n193\n657\n841\n941\n1,237\n637\n1,054\n1,037\n1,008\n1,343\n1,498\n2,351\n2,439\n1,874\n4,690\n1,174\n688\n2,053\n203\n82\n2,013\n980\n456\n26.92%\n14.00%\n34,695\n3.06\n92,548\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\n6,516\n1,704\n2,865\n320\n0\n876\n10\n86\n655\n26.15%\n43.97%\n4.91%\n0.00%\n13.44%\n0.15%\n1.32%\n10.05%\n6,414\n1,618\n4,796\n25.23%\n2,157\n18\n82\n19\n140\n52\n172\n34\n179\n36\n137\n350\n317\n131\n171\n140\n179\n259\n473\n487\n732\n804\n302\n724\n238\n123\n128\n0\n0\n1,305\n594\n332\n38.57%\n21.09%\n29,802\n2.89\n66,434\n\n\nGOLDEN STATE WATER CO. - CORDOVA\n48,645\n8,725\n26,541\n4,055\n229\n6,209\n183\n221\n2,481\n17.94%\n54.56%\n8.34%\n0.47%\n12.76%\n0.38%\n0.45%\n5.10%\n48,365\n4,409\n43,956\n9.12%\n18,345\n619\n485\n302\n488\n466\n453\n385\n467\n578\n1,301\n1,659\n2,688\n2,566\n1,721\n1,996\n2,172\n1,894\n2,349\n2,960\n4,243\n5,648\n4,287\n7,679\n2,223\n858\n3,519\n368\n198\n7,147\n2,688\n1,391\n28.78%\n13.34%\n43,978\n2.63\n97,985\n\n\nHAPPY HARBOR (SWS)\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nHOLIDAY MOBILE VILLAGE\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nHOOD WATER MAINTENCE DIST [SWS]\n74\n51\n21\n0\n0\n0\n0\n0\n2\n68.92%\n28.38%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n2.70%\n74\n13\n61\n17.57%\n12\n2\n0\n0\n0\n0\n0\n2\n1\n1\n1\n2\n2\n2\n0\n0\n0\n2\n4\n3\n6\n5\n2\n2\n2\n0\n5\n2\n2\n6\n2\n1\n50.00%\n25.00%\n23,510\n2.55\n56,250\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\n242\n60\n149\n1\n0\n7\n0\n0\n24\n24.79%\n61.57%\n0.41%\n0.00%\n2.89%\n0.00%\n0.00%\n9.92%\n242\n52\n190\n21.49%\n187\n6\n39\n26\n4\n0\n24\n11\n7\n9\n1\n6\n44\n0\n0\n0\n10\n75\n51\n7\n126\n51\n0\n14\n0\n0\n134\n56\n51\n40\n40\n33\n51.34%\n44.92%\n32,922\n1.68\n31,837\n\n\nKORTHS PIRATES LAIR\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLAGUNA DEL SOL INC\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLAGUNA VILLAGE RV PARK\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLINCOLN CHAN-HOME RANCH\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nLOCKE WATER WORKS CO [SWS]\n76\n34\n35\n0\n0\n5\n0\n0\n3\n44.74%\n46.05%\n0.00%\n0.00%\n6.58%\n0.00%\n0.00%\n3.95%\n76\n12\n64\n15.79%\n32\n2\n1\n1\n0\n2\n1\n0\n2\n2\n1\n12\n0\n0\n1\n1\n5\n4\n7\n13\n11\n13\n1\n11\n0\n0\n4\n2\n2\n17\n6\n3\n25.00%\n15.62%\n38,950\n2.49\n68,248\n\n\nMAGNOLIA MUTUAL WATER\n96\n43\n44\n0\n0\n6\n0\n0\n3\n44.79%\n45.83%\n0.00%\n0.00%\n6.25%\n0.00%\n0.00%\n3.12%\n96\n15\n81\n15.62%\n36\n2\n1\n1\n0\n2\n1\n0\n2\n2\n1\n14\n0\n0\n1\n1\n6\n4\n7\n15\n11\n15\n1\n12\n0\n0\n5\n2\n2\n19\n6\n3\n22.22%\n13.89%\n38,950\n2.49\n68,248\n\n\nMC CLELLAN MHP\n412\n79\n165\n99\n0\n65\n0\n0\n3\n19.17%\n40.05%\n24.03%\n0.00%\n15.78%\n0.00%\n0.00%\n0.73%\n412\n154\n257\n37.38%\n170\n16\n4\n7\n14\n24\n4\n3\n3\n6\n3\n32\n41\n7\n0\n6\n0\n41\n40\n35\n81\n76\n7\n19\n8\n3\n51\n2\n2\n100\n70\n55\n47.06%\n35.29%\n18,213\n3.28\n60,521\n\n\nOLYMPIA MOBILODGE\n176\n42\n49\n11\n0\n61\n10\n0\n2\n23.86%\n27.84%\n6.25%\n0.00%\n34.66%\n5.68%\n0.00%\n1.14%\n176\n41\n135\n23.30%\n67\n7\n0\n4\n6\n5\n2\n8\n0\n0\n6\n11\n4\n2\n7\n3\n3\n17\n15\n17\n32\n21\n9\n18\n13\n6\n30\n7\n6\n19\n5\n4\n37.31%\n23.88%\n29,451\n2.51\n53,786\n\n\nORANGE VALE WATER COMPANY\n17,910\n2,705\n12,640\n251\n267\n636\n90\n37\n1,283\n15.10%\n70.58%\n1.40%\n1.49%\n3.55%\n0.50%\n0.21%\n7.16%\n17,805\n1,987\n15,818\n11.16%\n6,827\n411\n130\n73\n96\n228\n60\n281\n127\n182\n370\n760\n1,055\n933\n643\n679\n800\n710\n878\n1,130\n1,588\n2,185\n1,576\n3,394\n1,125\n459\n1,726\n335\n203\n1,707\n699\n319\n31.62%\n14.37%\n42,789\n2.60\n92,925\n\n\nPLANTATION MOBILE HOME PARK\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nRANCHO MARINA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nRANCHO MURIETA COMMUNITY SERVI\n4,853\n958\n3,223\n213\n9\n313\n0\n38\n99\n19.74%\n66.41%\n4.39%\n0.19%\n6.45%\n0.00%\n0.78%\n2.04%\n4,849\n228\n4,621\n4.70%\n2,068\n68\n47\n0\n11\n10\n43\n95\n81\n97\n75\n140\n154\n155\n273\n365\n453\n126\n326\n215\n452\n369\n428\n1,494\n314\n143\n402\n78\n66\n172\n56\n52\n21.66%\n12.62%\n65,767\n2.33\n140,014\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\n15,102\n3,244\n9,844\n375\n28\n947\n23\n115\n526\n21.48%\n65.18%\n2.48%\n0.19%\n6.27%\n0.15%\n0.76%\n3.48%\n15,100\n1,961\n13,140\n12.99%\n4,809\n201\n174\n76\n220\n79\n141\n150\n144\n139\n221\n395\n771\n673\n567\n521\n335\n671\n653\n616\n1,324\n1,387\n1,240\n2,472\n702\n187\n948\n139\n60\n1,388\n678\n454\n31.59%\n14.58%\n33,391\n3.15\n85,765\n\n\nRIVER'S EDGE MARINA & RESORT\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\n190,956\n43,111\n96,802\n17,104\n825\n20,383\n609\n783\n11,339\n22.58%\n50.69%\n8.96%\n0.43%\n10.67%\n0.32%\n0.41%\n5.94%\n188,869\n33,475\n155,393\n17.72%\n71,567\n3,755\n2,966\n3,110\n2,823\n3,191\n3,080\n3,394\n2,846\n2,364\n5,448\n6,730\n9,863\n6,355\n4,238\n5,372\n6,031\n12,654\n14,875\n12,178\n27,529\n22,041\n10,593\n23,016\n7,005\n2,781\n11,940\n2,072\n1,152\n36,611\n20,907\n10,147\n41.90%\n19.67%\n35,938\n2.64\n73,783\n\n\nSAN JUAN WATER DISTRICT\n30,997\n3,454\n22,175\n822\n196\n2,816\n16\n84\n1,434\n11.14%\n71.54%\n2.65%\n0.63%\n9.08%\n0.05%\n0.27%\n4.63%\n30,881\n1,652\n29,229\n5.35%\n11,004\n370\n140\n81\n286\n134\n173\n107\n132\n116\n521\n704\n945\n939\n867\n1,066\n4,423\n877\n662\n1,225\n1,539\n2,170\n1,806\n6,380\n1,752\n752\n2,993\n530\n337\n1,630\n716\n316\n27.24%\n12.77%\n74,432\n2.79\n161,995\n\n\nSCWA - ARDEN PARK VISTA\n9,617\n1,186\n6,855\n490\n11\n513\n9\n79\n473\n12.33%\n71.28%\n5.10%\n0.11%\n5.33%\n0.09%\n0.82%\n4.92%\n9,540\n842\n8,698\n8.83%\n4,046\n176\n70\n90\n97\n91\n55\n27\n81\n197\n186\n260\n343\n545\n246\n451\n1,131\n433\n451\n446\n884\n789\n791\n1,953\n579\n145\n772\n90\n29\n1,321\n670\n404\n33.09%\n14.29%\n75,992\n2.30\n129,121\n\n\nSCWA - LAGUNA/VINEYARD\n157,847\n30,096\n41,752\n17,906\n259\n54,638\n2,388\n576\n10,232\n19.07%\n26.45%\n11.34%\n0.16%\n34.61%\n1.51%\n0.36%\n6.48%\n157,490\n15,715\n141,775\n9.98%\n48,578\n1,771\n677\n800\n903\n868\n1,411\n886\n888\n843\n2,494\n3,417\n6,491\n5,659\n5,523\n7,222\n8,725\n4,151\n4,896\n5,911\n9,047\n12,402\n11,182\n26,732\n7,791\n3,144\n8,566\n909\n503\n13,280\n6,640\n3,508\n31.58%\n14.73%\n41,666\n3.23\n115,613\n\n\nSCWA MATHER-SUNRISE\n19,629\n3,004\n8,619\n1,822\n29\n4,669\n169\n66\n1,252\n15.30%\n43.91%\n9.28%\n0.15%\n23.79%\n0.86%\n0.34%\n6.38%\n19,591\n1,039\n18,553\n5.30%\n5,838\n242\n34\n97\n60\n65\n34\n6\n21\n37\n183\n321\n550\n668\n787\n1,090\n1,643\n433\n163\n504\n596\n1,054\n1,455\n4,005\n954\n264\n951\n62\n43\n882\n311\n160\n22.73%\n8.00%\n48,626\n3.35\n152,188\n\n\nSEQUOIA WATER ASSOC\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nSOUTHWEST TRACT W M D [SWS]\n183\n30\n45\n25\n3\n79\n1\n0\n0\n16.39%\n24.59%\n13.66%\n1.64%\n43.17%\n0.55%\n0.00%\n0.00%\n183\n40\n143\n21.86%\n67\n1\n2\n8\n0\n8\n0\n0\n12\n14\n4\n3\n5\n0\n2\n2\n5\n11\n34\n7\n45\n12\n2\n4\n1\n0\n10\n0\n0\n53\n34\n8\n52.24%\n11.94%\n36,348\n3.04\n45,671\n\n\nSPINDRIFT MARINA\n13\n1\n11\n0\n0\n0\n0\n0\n0\n7.69%\n84.62%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n0.00%\n13\n5\n8\n38.46%\n5\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n2\n0\n1\n2\n1\n1\n1\n0\n0\n3\n0\n0\n1\n1\n1\n20.00%\n20.00%\n33,103\n1.79\n38,125\n\n\nTOKAY PARK WATER CO\n530\n172\n113\n33\n0\n188\n0\n0\n24\n32.45%\n21.32%\n6.23%\n0.00%\n35.47%\n0.00%\n0.00%\n4.53%\n530\n95\n435\n17.92%\n134\n2\n2\n2\n17\n0\n0\n10\n8\n9\n15\n21\n26\n12\n3\n9\n0\n23\n27\n36\n50\n62\n15\n63\n29\n7\n36\n0\n0\n36\n26\n9\n41.04%\n11.94%\n19,666\n3.64\n62,206\n\n\nTUNNEL TRAILER PARK\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nVIEIRA'S RESORT, INC\n67\n28\n35\n0\n0\n3\n0\n0\n1\n41.79%\n52.24%\n0.00%\n0.00%\n4.48%\n0.00%\n0.00%\n1.49%\n67\n15\n52\n22.39%\n44\n3\n3\n1\n2\n2\n1\n3\n2\n0\n6\n3\n2\n8\n3\n0\n4\n9\n8\n9\n17\n11\n11\n17\n10\n3\n18\n5\n5\n10\n2\n2\n38.64%\n22.73%\n40,522\n2.03\n51,977\n\n\nWESTERNER MOBILE HOME PARK\n20\n4\n4\n6\n0\n6\n0\n0\n1\n20.00%\n20.00%\n30.00%\n0.00%\n30.00%\n0.00%\n0.00%\n5.00%\n20\n5\n15\n25.00%\n16\n2\n0\n0\n0\n1\n0\n1\n1\n0\n3\n1\n2\n3\n0\n1\n0\n2\n3\n4\n5\n6\n3\n6\n3\n1\n1\n1\n1\n8\n6\n3\n62.50%\n31.25%\n23,437\n3.16\n59,296\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9.3 Modified Population / Household Weighted Areal Interpolation\n\n\n\n\n\n\nWarning\n\n\n\nThis section is in progress.\n\n\nThis section describes a method which is somewhat similar to the approach used in Section 9.2 above, in that it tries to account for variability in the distribution of the population within census units (block groups) by using more granular data from another source (block level data from the decennial census).\nThis method uses block and block group data from the decennial census to estimate the distribution of populations and households within census block groups, then applies those distributions to the block group data from the current ACS. Using those estimated distributions of populations/households within block groups, it then uses areal interpolation to estimate the portion of each block group’s count data to apply to the target area (water system boundary). Finally, it uses that estimated count data to compute weighted averages for remaining variables (e.g., per capita income, average household size, etc).\n[TO DO: add example calculation]\n\n\n\n9.4 Method Comparison\n\n\n\n\n\n\nWarning\n\n\n\nThis section is in progress.\n\n\n[TO DO: compare results across methods for certain variables - population, households, income, etc]"
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-detailed-pop-estimates",
    "href": "example_census_race_ethnicity_calculation.html#sec-detailed-pop-estimates",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "10 Detailed Population Estimates with Decennial Data",
    "text": "10 Detailed Population Estimates with Decennial Data\nIf you’re primarily interested in estimates of population/household counts alone (possibly including population by race/ethnicity, age, gender, etc.) as opposed to more detailed socioeconomic data (like income or poverty rates), in some cases it may make sense to use the block-level population data from the decennial census rather than block group level population data from the ACS. This method likely represents the most precise estimate of population (or other count data) that we can make from census data alone (i.e., without looking at other sources such as aerial imagery or parcel data).\n\n\n\n\n\n\nNote\n\n\n\nAs described elsewhere, it may also be possible to use the block-level decennial population data as a way to estimate the distribution of the population within Census units and apply that information to the ACS data - see Section 9.2 and Section 9.3 above for methods which do that).\n\n\nSince the decennial census only occurs once every 10 years, those estimates won’t necessarily reflect recent population changes (and will get generally be less accurate as the time since the last decennial census increases; however, keep in mind that even the 5-year ACS is an average that encompasses previous years’ estimates, so it also reflects some element of ‘historical’ data – for example, the 2022 5-year ACS reflects an average of data from 2018-2022). To reflect more recent population changes, one option may be to apply population projections or trends from historical records to scale the values calculated with this method.\nAlso, these values could simply be used to check the populations estimated from the ACS using any of the methods described above, and could help to flag areas where those methods are insufficient and more close inspection is needed.\n\n10.1 Estimate Populations with Areal Interpolation\nAs a simple way to compute these estimates, we can use the aw_interpolate function from the areal package. This is similar to the st_interpolate_aw function from the sf package (see Section 8.1 for an example) – either one works, but the aw_interpolate function provides some additional options and documentation (for example, see here or here).\n\n\n\n\n\n\nNote\n\n\n\nThere are some settings that you may need to modify in the aw_interpolate function depending on the type of analysis you’re doing. In particular, for more information about the weight argument – which can be either sum or total – see this section of the documentation. For more information about extensive versus intensive interpolations, see this section of the documentation (as noted above, the approaches described above avoid using areal interpolation to calculate intensive variables when count data associated with those variables that can be used as weighting factors – e.g. populations, households, etc. – are known; some of those considerations are discussed here; more research / input may be needed on that issue).\n\n\nFor these computations, we can use the decennial census data that was accessed above in Section 5.3.\n\n# define variables to interpolate\nvars_interpolate_aw &lt;- census_data_decennial %&gt;% \n    st_drop_geometry() %&gt;% \n    select(ends_with('_count')) %&gt;% \n    names()\n\n# interpolate\nwater_system_population_estimates_blocks &lt;- water_systems_sac %&gt;% \n    aw_interpolate(tid = water_system_name,\n                   source = census_data_decennial,\n                   sid = GEOID,\n                   weight = 'total',\n                   extensive = vars_interpolate_aw)\n\nHere’s a view of the structure of the data that’s returned:\n\nglimpse(water_system_population_estimates_blocks)\n\nRows: 62\nColumns: 22\n$ water_system_name                                 &lt;chr&gt; \"HOOD WATER MAINTENC…\n$ water_system_number                               &lt;chr&gt; \"CA3400101\", \"CA3400…\n$ water_system_id                                   &lt;chr&gt; \"{36268DB3-9DB2-4305…\n$ water_system_boundary_type                        &lt;chr&gt; \"Water Service Area\"…\n$ water_system_owner_type                           &lt;chr&gt; \"L\", \"P\", \"P\", \"P\", …\n$ water_system_county                               &lt;chr&gt; \"SACRAMENTO\", \"SACRA…\n$ water_system_regulating_agency                    &lt;chr&gt; \"LPA64 - SACRAMENTO …\n$ water_system_federal_class                        &lt;chr&gt; \"COMMUNITY\", \"COMMUN…\n$ water_system_state_class                          &lt;chr&gt; \"COMMUNITY\", \"COMMUN…\n$ water_system_service_connections                  &lt;dbl&gt; 82, 199, 34, 64, 128…\n$ water_system_population_reported                  &lt;dbl&gt; 100, 700, 40, 150, 2…\n$ households_count                                  &lt;dbl&gt; 23.3434672, 163.6072…\n$ population_asian_count                            &lt;dbl&gt; 2.151173620, 14.2501…\n$ population_black_or_african_american_count        &lt;dbl&gt; 0.00000000, 20.05259…\n$ population_hispanic_or_latino_count               &lt;dbl&gt; 31.78662034, 77.9684…\n$ population_multiple_count                         &lt;dbl&gt; 1.14905862, 47.88558…\n$ population_native_american_or_alaska_native_count &lt;dbl&gt; 8.298117231, 0.77231…\n$ population_other_count                            &lt;dbl&gt; 0.60257947514, 3.119…\n$ population_pacific_islander_count                 &lt;dbl&gt; 0.151173620, 6.35812…\n$ population_total_count                            &lt;dbl&gt; 71.3434991, 376.0814…\n$ population_white_count                            &lt;dbl&gt; 27.2047762, 205.6748…\n$ geometry                                          &lt;GEOMETRY [m]&gt; MULTIPOLYGO…\n\n\nWe can also add fields with each racial/ethnic group’s estimated percent of the total population within each water system’s service area, and round all results:\n\nwater_system_population_estimates_blocks &lt;- water_system_population_estimates_blocks %&gt;%\n    mutate(\n        across(\n            .cols = starts_with('population_'),\n            .fns = ~ round(.x / population_total_count * 100, 2),\n            .names = \"{str_replace(.col, '_count', '_percent')}\"\n        ),\n        .after = population_white_count) %&gt;% \n    select(-population_total_percent) # this always equals 1, not needed\n\n# clean\nwater_system_population_estimates_blocks &lt;- water_system_population_estimates_blocks %&gt;% \n    mutate(\n        across(\n            .cols = ends_with('_count'),\n            .fns = ~ round(.x, 0)\n        )\n    )\n\n# select fields to keep\nwater_system_population_estimates_blocks &lt;- water_system_population_estimates_blocks %&gt;% \n    select(water_system_name, water_system_number, \n           water_system_service_connections, water_system_population_reported,\n           ends_with('_count'), ends_with('_percent')) %&gt;% \n    relocate(population_total_count, .after = water_system_population_reported) %&gt;% \n    relocate(households_count, .before = geometry) %&gt;% \n    arrange(water_system_name)\n\n\n\n10.2 View Results\nTable 7 shows a comparison of the system populations estimated using the block-level data from the 2020 Decennial Census and the reported system populations.\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_population_estimates_blocks %&gt;%\n    st_drop_geometry() %&gt;% \n    select(water_system_name, water_system_service_connections,\n           water_system_population_reported, population_total_count) %&gt;%\n    arrange(desc(water_system_population_reported)) %&gt;%\n    mutate(population_percent_difference =\n               round(100 * (population_total_count - water_system_population_reported) /\n                         water_system_population_reported,\n                     2),\n           .after = population_total_count) %&gt;%\n    mutate(population_percent_difference = pct_format(\n        population_percent_difference / 100)) %&gt;%\n    rename('Service Connections' = water_system_service_connections,\n           'Reported Population' = water_system_population_reported,\n           'Estimated Population' = population_total_count,\n           'Percent Difference' = population_percent_difference) %&gt;%\n    kable(align = 'c',\n          format.args = list(big.mark = ',')) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 7: Results Comparison - detailed population estimates with block-level Decennial data vs. reported population (Sorted Largest to Smallest by Reported Population)\n\n\n\n\n\n\n\n\nwater_system_name\nService Connections\nReported Population\nEstimated Population\nPercent Difference\n\n\n\n\nCITY OF SACRAMENTO MAIN\n142,794\n510,931\n526,939\n3.13%\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\n46,573\n184,385\n193,282\n4.83%\n\n\nSCWA - LAGUNA/VINEYARD\n47,411\n172,666\n159,610\n-7.56%\n\n\nFOLSOM, CITY OF - MAIN\n21,424\n68,122\n63,688\n-6.51%\n\n\nCITRUS HEIGHTS WATER DISTRICT\n19,940\n65,911\n68,337\n3.68%\n\n\nCALAM - SUBURBAN ROSEMONT\n16,238\n53,563\n59,068\n10.28%\n\n\nCALAM - PARKWAY\n14,779\n48,738\n60,036\n23.18%\n\n\nCALAM - LINCOLN OAKS\n14,390\n47,487\n43,660\n-8.06%\n\n\nGOLDEN STATE WATER CO. - CORDOVA\n14,798\n44,928\n48,450\n7.84%\n\n\nELK GROVE WATER SERVICE\n12,882\n42,540\n41,778\n-1.79%\n\n\nCARMICHAEL WATER DISTRICT\n11,704\n37,897\n39,873\n5.21%\n\n\nFAIR OAKS WATER DISTRICT\n14,293\n35,114\n38,217\n8.84%\n\n\nCALAM - ANTELOPE\n10,528\n34,720\n37,104\n6.87%\n\n\nSAN JUAN WATER DISTRICT\n10,672\n29,641\n29,507\n-0.45%\n\n\nGALT, CITY OF\n7,471\n26,536\n25,200\n-5.03%\n\n\nSCWA MATHER-SUNRISE\n6,921\n22,839\n20,073\n-12.11%\n\n\nORANGE VALE WATER COMPANY\n5,684\n18,005\n18,005\n0.00%\n\n\nCAL AM FRUITRIDGE VISTA\n4,667\n15,385\n22,194\n44.26%\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\n4,621\n14,381\n14,431\n0.35%\n\n\nSCWA - ARDEN PARK VISTA\n3,043\n10,035\n9,239\n-7.93%\n\n\nFOLSOM STATE PRISON\n2,790\n9,703\n5,085\n-47.59%\n\n\nFLORIN COUNTY WATER DISTRICT\n2,323\n7,831\n10,705\n36.70%\n\n\nRANCHO MURIETA COMMUNITY SERVI\n2,726\n5,744\n5,187\n-9.70%\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\n1,716\n5,125\n5,570\n8.68%\n\n\nDEL PASO MANOR COUNTY WATER DI\n1,796\n4,520\n4,893\n8.25%\n\n\nCALAM - ARDEN\n1,185\n3,908\n10,155\n159.85%\n\n\nFOLSOM, CITY OF - ASHLAND\n1,079\n3,538\n4,070\n15.04%\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\n13\n2,800\n226\n-91.93%\n\n\nCALAM - ISLETON\n480\n1,581\n759\n-51.99%\n\n\nMC CLELLAN MHP\n199\n700\n376\n-46.29%\n\n\nCALAM - WALNUT GROVE\n197\n651\n341\n-47.62%\n\n\nCALIFORNIA STATE FAIR\n269\n650\n19\n-97.08%\n\n\nTOKAY PARK WATER CO\n198\n525\n580\n10.48%\n\n\nLAGUNA DEL SOL INC\n112\n470\n51\n-89.15%\n\n\nOLYMPIA MOBILODGE\n200\n450\n455\n1.11%\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\n164\n350\n522\n49.14%\n\n\nEAST WALNUT GROVE [SWS]\n166\n300\n279\n-7.00%\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\n136\n262\n384\n46.56%\n\n\nEL DORADO MOBILE HOME PARK\n128\n256\n297\n16.02%\n\n\nRANCHO MARINA\n77\n250\n8\n-96.80%\n\n\nHOLIDAY MOBILE VILLAGE\n115\n200\n68\n-66.00%\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\n186\n200\n241\n20.50%\n\n\nEL DORADO WEST MHP\n128\n172\n297\n72.67%\n\n\nKORTHS PIRATES LAIR\n64\n150\n2\n-98.67%\n\n\nRIVER'S EDGE MARINA & RESORT\n83\n150\n1\n-99.33%\n\n\nSOUTHWEST TRACT W M D [SWS]\n33\n150\n139\n-7.33%\n\n\nVIEIRA'S RESORT, INC\n107\n150\n115\n-23.33%\n\n\nB & W RESORT MARINA\n37\n100\n0\n-100.00%\n\n\nHOOD WATER MAINTENCE DIST [SWS]\n82\n100\n71\n-29.00%\n\n\nSPINDRIFT MARINA\n50\n100\n14\n-86.00%\n\n\nLOCKE WATER WORKS CO [SWS]\n44\n80\n41\n-48.75%\n\n\nWESTERNER MOBILE HOME PARK\n49\n65\n72\n10.77%\n\n\nHAPPY HARBOR (SWS)\n45\n60\n0\n-100.00%\n\n\nSEQUOIA WATER ASSOC\n18\n54\n1\n-98.15%\n\n\nPLANTATION MOBILE HOME PARK\n44\n44\n23\n-47.73%\n\n\nTUNNEL TRAILER PARK\n21\n44\n0\n-100.00%\n\n\nFREEPORT MARINA\n27\n42\n38\n-9.52%\n\n\nEDGEWATER MOBILE HOME PARK\n22\n40\n0\n-100.00%\n\n\nMAGNOLIA MUTUAL WATER\n34\n40\n81\n102.50%\n\n\nLINCOLN CHAN-HOME RANCH\n19\n33\n12\n-63.64%\n\n\nLAGUNA VILLAGE RV PARK\n28\n32\n27\n-15.62%\n\n\nDELTA CROSSING MHP\n22\n30\n6\n-80.00%\n\n\n\n\n\n\n\n\n\n\n\nTable 8 shows all demographic variables estimated using the block-level data from the 2020 Decennial Census.\n\n\nCode\npct_format &lt;- label_percent(accuracy = 0.01)\n\nwater_system_population_estimates_blocks %&gt;%\n    st_drop_geometry() %&gt;% \n    arrange(water_system_name) %&gt;% \n    mutate(across(\n        .cols = ends_with('_percent'),\n        .fns = ~ pct_format(. / 100))\n    ) %&gt;%\n    rename_with(.cols = everything(), \n                .fn = ~ str_replace_all(., pattern = '_', replacement = ' ') %&gt;% \n                    str_to_title(.)) %&gt;% \n    kable(align = 'c', \n          format.args = list(big.mark = ',')\n    ) %&gt;%\n    scroll_box(height = \"400px\")\n\n\n\n\nTable 8: Estimated Water System Demographics - Areal Interpolation with Decennial Block Group Data\n\n\n\n\n\n\n\n\nWater System Name\nWater System Number\nWater System Service Connections\nWater System Population Reported\nPopulation Total Count\nPopulation Asian Count\nPopulation Black Or African American Count\nPopulation Hispanic Or Latino Count\nPopulation Multiple Count\nPopulation Native American Or Alaska Native Count\nPopulation Other Count\nPopulation Pacific Islander Count\nPopulation White Count\nPopulation Asian Percent\nPopulation Black Or African American Percent\nPopulation Hispanic Or Latino Percent\nPopulation Multiple Percent\nPopulation Native American Or Alaska Native Percent\nPopulation Other Percent\nPopulation Pacific Islander Percent\nPopulation White Percent\nHouseholds Count\n\n\n\n\nB & W RESORT MARINA\nCA3400103\n37\n100\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0.00%\n0.00%\n23.73%\n1.69%\n0.00%\n0.00%\n0.00%\n74.58%\n0\n\n\nCAL AM FRUITRIDGE VISTA\nCA3410023\n4,667\n15,385\n22,194\n4,297\n2,761\n10,384\n837\n153\n112\n531\n3,119\n19.36%\n12.44%\n46.79%\n3.77%\n0.69%\n0.50%\n2.39%\n14.05%\n6,559\n\n\nCALAM - ANTELOPE\nCA3410031\n10,528\n34,720\n37,104\n4,293\n2,822\n6,697\n2,636\n225\n235\n290\n19,907\n11.57%\n7.60%\n18.05%\n7.10%\n0.61%\n0.63%\n0.78%\n53.65%\n11,736\n\n\nCALAM - ARDEN\nCA3410045\n1,185\n3,908\n10,155\n1,531\n1,797\n2,925\n818\n52\n57\n99\n2,876\n15.08%\n17.70%\n28.80%\n8.05%\n0.51%\n0.56%\n0.98%\n28.33%\n4,227\n\n\nCALAM - ISLETON\nCA3410012\n480\n1,581\n759\n33\n11\n332\n39\n3\n3\n1\n336\n4.40%\n1.50%\n43.82%\n5.08%\n0.37%\n0.36%\n0.11%\n44.35%\n300\n\n\nCALAM - LINCOLN OAKS\nCA3410013\n14,390\n47,487\n43,660\n2,208\n1,728\n8,882\n2,942\n259\n275\n244\n27,123\n5.06%\n3.96%\n20.34%\n6.74%\n0.59%\n0.63%\n0.56%\n62.12%\n16,203\n\n\nCALAM - PARKWAY\nCA3410017\n14,779\n48,738\n60,036\n20,585\n8,307\n17,267\n3,053\n254\n365\n1,430\n8,774\n34.29%\n13.84%\n28.76%\n5.09%\n0.42%\n0.61%\n2.38%\n14.61%\n17,895\n\n\nCALAM - SUBURBAN ROSEMONT\nCA3410010\n16,238\n53,563\n59,068\n6,176\n6,778\n14,424\n4,311\n260\n433\n680\n26,006\n10.46%\n11.47%\n24.42%\n7.30%\n0.44%\n0.73%\n1.15%\n44.03%\n21,712\n\n\nCALAM - WALNUT GROVE\nCA3410047\n197\n651\n341\n26\n15\n193\n11\n3\n0\n0\n93\n7.64%\n4.48%\n56.59%\n3.26%\n0.88%\n0.00%\n0.00%\n27.14%\n106\n\n\nCALIFORNIA STATE FAIR\nCA3410026\n269\n650\n19\n2\n0\n9\n5\n0\n0\n0\n3\n9.76%\n0.00%\n48.78%\n26.83%\n0.00%\n0.00%\n0.00%\n14.63%\n4\n\n\nCARMICHAEL WATER DISTRICT\nCA3410004\n11,704\n37,897\n39,873\n3,203\n1,922\n5,464\n2,856\n183\n259\n191\n25,795\n8.03%\n4.82%\n13.70%\n7.16%\n0.46%\n0.65%\n0.48%\n64.69%\n16,029\n\n\nCITRUS HEIGHTS WATER DISTRICT\nCA3410006\n19,940\n65,911\n68,337\n2,756\n2,347\n12,634\n4,554\n403\n366\n302\n44,976\n4.03%\n3.43%\n18.49%\n6.66%\n0.59%\n0.54%\n0.44%\n65.81%\n26,728\n\n\nCITY OF SACRAMENTO MAIN\nCA3410020\n142,794\n510,931\n526,939\n102,967\n66,434\n152,477\n32,175\n2,483\n3,534\n8,493\n158,376\n19.54%\n12.61%\n28.94%\n6.11%\n0.47%\n0.67%\n1.61%\n30.06%\n192,810\n\n\nDEL PASO MANOR COUNTY WATER DI\nCA3410007\n1,796\n4,520\n4,893\n245\n240\n732\n427\n29\n38\n8\n3,174\n5.00%\n4.90%\n14.97%\n8.72%\n0.60%\n0.79%\n0.17%\n64.86%\n2,110\n\n\nDELTA CROSSING MHP\nCA3400150\n22\n30\n6\n0\n0\n3\n0\n0\n0\n0\n2\n0.00%\n0.00%\n58.90%\n0.61%\n1.23%\n0.61%\n0.00%\n38.65%\n3\n\n\nEAST WALNUT GROVE [SWS]\nCA3400106\n166\n300\n279\n23\n9\n166\n10\n2\n0\n0\n70\n8.06%\n3.30%\n59.31%\n3.68%\n0.72%\n0.00%\n0.00%\n24.92%\n83\n\n\nEDGEWATER MOBILE HOME PARK\nCA3400433\n22\n40\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0.00%\n0.22%\n9.03%\n8.59%\n8.81%\n0.00%\n15.41%\n57.94%\n0\n\n\nEL DORADO MOBILE HOME PARK\nCA3400121\n128\n256\n297\n28\n37\n187\n18\n3\n2\n4\n18\n9.36%\n12.34%\n63.01%\n6.14%\n1.17%\n0.62%\n1.43%\n5.92%\n88\n\n\nEL DORADO WEST MHP\nCA3400122\n128\n172\n297\n20\n18\n204\n16\n1\n0\n3\n35\n6.64%\n6.19%\n68.50%\n5.41%\n0.42%\n0.14%\n1.05%\n11.65%\n92\n\n\nELEVEN OAKS MOBILE HOME COMMUNITY\nCA3400191\n136\n262\n384\n56\n21\n111\n59\n6\n5\n9\n117\n14.52%\n5.39%\n28.87%\n15.40%\n1.64%\n1.38%\n2.31%\n30.50%\n118\n\n\nELK GROVE WATER SERVICE\nCA3410008\n12,882\n42,540\n41,778\n8,950\n2,637\n8,504\n3,103\n181\n253\n447\n17,702\n21.42%\n6.31%\n20.36%\n7.43%\n0.43%\n0.60%\n1.07%\n42.37%\n13,265\n\n\nFAIR OAKS WATER DISTRICT\nCA3410009\n14,293\n35,114\n38,217\n1,836\n755\n4,933\n2,392\n155\n283\n56\n27,806\n4.80%\n1.98%\n12.91%\n6.26%\n0.41%\n0.74%\n0.15%\n72.76%\n15,500\n\n\nFLORIN COUNTY WATER DISTRICT\nCA3410033\n2,323\n7,831\n10,705\n2,916\n1,151\n3,338\n576\n64\n45\n184\n2,430\n27.24%\n10.76%\n31.19%\n5.38%\n0.60%\n0.42%\n1.72%\n22.70%\n3,516\n\n\nFOLSOM STATE PRISON\nCA3410032\n2,790\n9,703\n5,085\n91\n1,996\n1,858\n89\n58\n25\n13\n955\n1.79%\n39.26%\n36.53%\n1.75%\n1.15%\n0.48%\n0.26%\n18.77%\n27\n\n\nFOLSOM, CITY OF - ASHLAND\nCA3410030\n1,079\n3,538\n4,070\n197\n47\n424\n253\n11\n33\n5\n3,101\n4.83%\n1.17%\n10.41%\n6.22%\n0.27%\n0.81%\n0.12%\n76.17%\n2,003\n\n\nFOLSOM, CITY OF - MAIN\nCA3410014\n21,424\n68,122\n63,688\n14,197\n1,036\n7,424\n4,169\n186\n396\n159\n36,120\n22.29%\n1.63%\n11.66%\n6.55%\n0.29%\n0.62%\n0.25%\n56.71%\n23,631\n\n\nFREEPORT MARINA\nCA3400125\n27\n42\n38\n0\n0\n12\n1\n0\n0\n0\n24\n0.00%\n0.00%\n32.23%\n3.49%\n0.03%\n0.00%\n0.00%\n64.26%\n16\n\n\nGALT, CITY OF\nCA3410011\n7,471\n26,536\n25,200\n918\n437\n11,488\n1,211\n142\n77\n72\n10,856\n3.64%\n1.73%\n45.59%\n4.81%\n0.56%\n0.30%\n0.28%\n43.08%\n8,071\n\n\nGOLDEN STATE WATER CO - ARDEN WATER SERV\nCA3410003\n1,716\n5,125\n5,570\n592\n492\n1,212\n444\n32\n46\n26\n2,724\n10.63%\n8.84%\n21.76%\n7.98%\n0.58%\n0.83%\n0.47%\n48.91%\n2,260\n\n\nGOLDEN STATE WATER CO. - CORDOVA\nCA3410015\n14,798\n44,928\n48,450\n6,415\n3,293\n9,706\n3,231\n229\n360\n419\n24,797\n13.24%\n6.80%\n20.03%\n6.67%\n0.47%\n0.74%\n0.86%\n51.18%\n18,859\n\n\nHAPPY HARBOR (SWS)\nCA3400128\n45\n60\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0.89%\n1.78%\n4.17%\n4.76%\n0.30%\n0.00%\n0.00%\n88.11%\n0\n\n\nHOLIDAY MOBILE VILLAGE\nCA3400335\n115\n200\n68\n20\n7\n24\n1\n1\n0\n1\n14\n29.93%\n9.67%\n35.04%\n2.01%\n1.28%\n0.00%\n1.64%\n20.44%\n26\n\n\nHOOD WATER MAINTENCE DIST [SWS]\nCA3400101\n82\n100\n71\n2\n0\n32\n1\n8\n1\n0\n27\n3.02%\n0.00%\n44.55%\n1.61%\n11.63%\n0.84%\n0.21%\n38.13%\n23\n\n\nIMPERIAL MANOR MOBILEHOME COMMUNITY\nCA3400190\n186\n200\n241\n11\n12\n41\n10\n2\n3\n1\n160\n4.39%\n5.17%\n16.95%\n4.23%\n1.02%\n1.34%\n0.53%\n66.37%\n159\n\n\nKORTHS PIRATES LAIR\nCA3400135\n64\n150\n2\n0\n0\n0\n0\n0\n0\n0\n2\n0.00%\n0.77%\n3.83%\n3.83%\n0.00%\n0.38%\n0.00%\n91.19%\n2\n\n\nLAGUNA DEL SOL INC\nCA3400181\n112\n470\n51\n0\n0\n5\n1\n0\n0\n0\n44\n0.86%\n0.35%\n9.40%\n2.86%\n0.29%\n0.29%\n0.00%\n85.95%\n27\n\n\nLAGUNA VILLAGE RV PARK\nCA3400397\n28\n32\n27\n6\n6\n5\n2\n0\n0\n0\n7\n24.14%\n21.10%\n20.00%\n6.34%\n0.55%\n0.41%\n0.28%\n27.17%\n13\n\n\nLINCOLN CHAN-HOME RANCH\nCA3400137\n19\n33\n12\n0\n0\n6\n0\n0\n0\n0\n6\n3.82%\n0.00%\n48.51%\n1.27%\n0.00%\n0.00%\n0.64%\n45.77%\n5\n\n\nLOCKE WATER WORKS CO [SWS]\nCA3400138\n44\n80\n41\n0\n0\n18\n7\n1\n0\n0\n15\n0.07%\n0.00%\n43.16%\n16.80%\n2.27%\n0.00%\n0.00%\n37.70%\n13\n\n\nMAGNOLIA MUTUAL WATER\nCA3400130\n34\n40\n81\n0\n0\n39\n6\n0\n1\n0\n34\n0.54%\n0.00%\n48.73%\n7.58%\n0.00%\n0.86%\n0.01%\n42.28%\n29\n\n\nMC CLELLAN MHP\nCA3400179\n199\n700\n376\n14\n20\n78\n48\n1\n3\n6\n206\n3.79%\n5.33%\n20.73%\n12.73%\n0.21%\n0.83%\n1.69%\n54.69%\n164\n\n\nOLYMPIA MOBILODGE\nCA3410022\n200\n450\n455\n114\n48\n134\n30\n3\n0\n12\n113\n25.06%\n10.63%\n29.47%\n6.53%\n0.75%\n0.00%\n2.74%\n24.83%\n158\n\n\nORANGE VALE WATER COMPANY\nCA3410016\n5,684\n18,005\n18,005\n596\n326\n2,431\n1,197\n112\n130\n49\n13,165\n3.31%\n1.81%\n13.50%\n6.65%\n0.62%\n0.72%\n0.27%\n73.12%\n6,934\n\n\nPLANTATION MOBILE HOME PARK\nCA3400401\n44\n44\n23\n3\n2\n11\n1\n0\n0\n0\n7\n14.29%\n7.14%\n46.43%\n3.57%\n0.00%\n0.00%\n0.00%\n28.57%\n9\n\n\nRANCHO MARINA\nCA3400149\n77\n250\n8\n0\n0\n0\n0\n0\n0\n0\n7\n0.00%\n0.77%\n3.83%\n3.83%\n0.00%\n0.38%\n0.00%\n91.19%\n5\n\n\nRANCHO MURIETA COMMUNITY SERVI\nCA3410005\n2,726\n5,744\n5,187\n196\n142\n549\n308\n23\n31\n9\n3,929\n3.78%\n2.73%\n10.59%\n5.94%\n0.44%\n0.61%\n0.17%\n75.73%\n2,186\n\n\nRIO COSUMNES CORRECTIONAL CENTER [SWS]\nCA3400229\n13\n2,800\n226\n7\n77\n60\n1\n1\n0\n2\n77\n3.20%\n34.12%\n26.71%\n0.42%\n0.42%\n0.17%\n0.76%\n34.20%\n3\n\n\nRIO LINDA/ELVERTA COMMUNITY WATER DIST\nCA3410018\n4,621\n14,381\n14,431\n767\n301\n3,910\n874\n84\n73\n62\n8,358\n5.32%\n2.09%\n27.10%\n6.06%\n0.58%\n0.51%\n0.43%\n57.92%\n4,563\n\n\nRIVER'S EDGE MARINA & RESORT\nCA3400107\n83\n150\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0.89%\n1.80%\n4.16%\n4.74%\n0.30%\n0.01%\n0.00%\n88.10%\n1\n\n\nSAC CITY MOBILE HOME COMMUNITY LP\nCA3400296\n164\n350\n522\n195\n24\n222\n11\n1\n5\n13\n51\n37.34%\n4.52%\n42.52%\n2.19%\n0.27%\n0.86%\n2.46%\n9.83%\n170\n\n\nSACRAMENTO SUBURBAN WATER DISTRICT\nCA3410001\n46,573\n184,385\n193,282\n18,921\n17,589\n42,486\n14,640\n1,038\n1,187\n1,370\n96,051\n9.79%\n9.10%\n21.98%\n7.57%\n0.54%\n0.61%\n0.71%\n49.69%\n71,884\n\n\nSAN JUAN WATER DISTRICT\nCA3410021\n10,672\n29,641\n29,507\n2,579\n335\n2,881\n1,793\n107\n200\n31\n21,581\n8.74%\n1.13%\n9.76%\n6.08%\n0.36%\n0.68%\n0.10%\n73.14%\n10,631\n\n\nSCWA - ARDEN PARK VISTA\nCA3410002\n3,043\n10,035\n9,239\n622\n400\n1,160\n561\n16\n56\n41\n6,384\n6.73%\n4.33%\n12.56%\n6.08%\n0.17%\n0.60%\n0.44%\n69.09%\n3,824\n\n\nSCWA - LAGUNA/VINEYARD\nCA3410029\n47,411\n172,666\n159,610\n59,869\n16,960\n29,253\n10,684\n401\n970\n2,444\n39,028\n37.51%\n10.63%\n18.33%\n6.69%\n0.25%\n0.61%\n1.53%\n24.45%\n48,932\n\n\nSCWA MATHER-SUNRISE\nCA3410704\n6,921\n22,839\n20,073\n5,348\n1,508\n2,920\n1,653\n76\n141\n152\n8,276\n26.64%\n7.51%\n14.54%\n8.23%\n0.38%\n0.70%\n0.75%\n41.23%\n5,944\n\n\nSEQUOIA WATER ASSOC\nCA3400155\n18\n54\n1\n0\n0\n0\n0\n0\n0\n0\n0\n4.11%\n0.00%\n50.68%\n1.37%\n0.00%\n0.00%\n0.68%\n43.15%\n0\n\n\nSOUTHWEST TRACT W M D [SWS]\nCA3400156\n33\n150\n139\n17\n20\n45\n3\n1\n1\n30\n23\n12.04%\n14.09%\n32.25%\n2.13%\n0.76%\n0.38%\n21.61%\n16.74%\n44\n\n\nSPINDRIFT MARINA\nCA3400169\n50\n100\n14\n0\n0\n3\n2\n0\n0\n0\n9\n0.05%\n0.14%\n21.91%\n14.72%\n0.02%\n0.02%\n0.00%\n63.15%\n7\n\n\nTOKAY PARK WATER CO\nCA3400172\n198\n525\n580\n214\n21\n206\n25\n0\n7\n15\n92\n36.91%\n3.59%\n35.54%\n4.28%\n0.00%\n1.20%\n2.56%\n15.91%\n165\n\n\nTUNNEL TRAILER PARK\nCA3400192\n21\n44\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0.00%\n0.00%\n49.41%\n5.88%\n0.00%\n0.00%\n0.00%\n44.71%\n0\n\n\nVIEIRA'S RESORT, INC\nCA3400164\n107\n150\n115\n4\n0\n17\n5\n0\n0\n0\n89\n3.09%\n0.26%\n14.47%\n4.44%\n0.00%\n0.00%\n0.00%\n77.73%\n63\n\n\nWESTERNER MOBILE HOME PARK\nCA3400331\n49\n65\n72\n15\n7\n21\n9\n0\n0\n3\n18\n20.05%\n9.92%\n28.64%\n12.20%\n0.00%\n0.44%\n3.56%\n25.18%\n34"
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-small-area-estimates",
    "href": "example_census_race_ethnicity_calculation.html#sec-small-area-estimates",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "11 Small / Rural Area Estimate Issues & Considerations",
    "text": "11 Small / Rural Area Estimate Issues & Considerations\n\n\n\n\n\n\nWarning\n\n\n\nThis section is in progress.\n\n\nAs described above, estimating demographics for very small target areas (e.g., small water systems) using census data alone can be problematic, regardless of the approach chosen. For example, for some water systems, the estimated total population was at or near zero with the interpolation methods described above.\nThis may be especially true for systems in rural environments, where population densities are lower, population centers tend to be spread out, and census units tend to be larger. And even when it is possible to obtain a population estimate for these small systems that’s greater than zero, the results may not be reliable – for example, the water system may encompass only a small portion of one or a few census units, and the entire census unit(s) may not be representative of the small portion(s) of overlap. It may be useful to look a bit more closely at some examples to see what’s going on with one of those cases.\n[TO DO: insert map]\nFrom the map above [TO DO: insert map], you can see that the service area reported for some systems are very small, only covering a small fraction of a single census unit, resulting in a population estimate that is very low. In these cases, it could be that the system area was drawn incorrectly (i.e., maybe it doesn’t really depict the entire service area), in which case the reported service area should be revised. Or, it’s possible that the population within the given census unit is very un-evenly distributed and instead there’s a relatively high density population cluster in the depicted service area, in which case a more sophisticated method than an area-weighted average should be used (e.g., maybe consider using aerial imagery, parcel data, etc. to estimate the density of buildings, roads, and/or other features associated with inhabited areas in the target area)."
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-tribal-data",
    "href": "example_census_race_ethnicity_calculation.html#sec-tribal-data",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "12 Tribal Data",
    "text": "12 Tribal Data\n\n\n\n\n\n\nWarning\n\n\n\nThis section is in progress."
  },
  {
    "objectID": "example_census_race_ethnicity_calculation.html#sec-other-sources",
    "href": "example_census_race_ethnicity_calculation.html#sec-other-sources",
    "title": "Estimating Demographics of Custom Spatial Features",
    "section": "13 Working with Other Source Data",
    "text": "13 Working with Other Source Data\nIn addition to using census data, it’s possible to use other types of source datasets to compute characteristics of custom target areas like water systems. The process is generally likely to be similar to the processes shown above for using census data, but each source dataset may require unique considerations (e.g., to handle missing values, uncertain boundaries, etc.).\n\n13.1 CalEnviroScreen\n\n\n\n\n\n\nWarning\n\n\n\nThis section is in progress.\n\n\n[TO DO: example computation of weighted average CES scores]\nNotes to consider:\n\nSome census tracts are missing CES scores (overall and/or for certain indicators), and have to deal with those missing values somehow\nCES 4.0 is tract-level data, and uses 2010 census boundaries (so boundaries won’t match current ACS or decennial boundaries)\nCES 4.0 boundaries are simplified, and boundaries between tracts are not consistent – for some types of analysis (especially when looking at point data - e.g., facilities), it may be better to use the original TIGER dataset (available from either the tidycensus or tigris R packages)"
  }
]